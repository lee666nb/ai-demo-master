<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/alibaba-deepseek-demo/src/main/java/com/fox/alibabadeepseekdemo/controller/ECMOExpertController.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/alibaba-deepseek-demo/src/main/java/com/fox/alibabadeepseekdemo/controller/ECMOExpertController.java" />
              <option name="originalContent" value="package com.fox.alibabadeepseekdemo.controller;&#10;&#10;import com.fox.alibabadeepseekdemo.entity.ECMOAssessment;&#10;import com.fox.alibabadeepseekdemo.entity.PatientParameters;&#10;import com.fox.alibabadeepseekdemo.service.ECMOExpertService;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.http.ResponseEntity;&#10;import org.springframework.web.bind.annotation.*;&#10;&#10;import java.util.*;&#10;import java.util.concurrent.ConcurrentHashMap;&#10;&#10;@RestController&#10;@RequestMapping(&quot;/api/ecmo&quot;)&#10;@CrossOrigin(origins = &quot;*&quot;)&#10;public class ECMOExpertController {&#10;    &#10;    @Autowired&#10;    private ECMOExpertService ecmoExpertService;&#10;    &#10;    // 存储评估历史记录&#10;    private final Map&lt;String, List&lt;ECMOAssessment&gt;&gt; userAssessments = new ConcurrentHashMap&lt;&gt;();&#10;    private final Map&lt;String, ECMOAssessment&gt; assessmentById = new ConcurrentHashMap&lt;&gt;();&#10;    &#10;    /**&#10;     * ECMO适应症评估&#10;     */&#10;    @PostMapping(&quot;/assess&quot;)&#10;    public ResponseEntity&lt;Map&lt;String, Object&gt;&gt; assessECMO(@RequestBody PatientParameters patient) {&#10;        Map&lt;String, Object&gt; response = new HashMap&lt;&gt;();&#10;        &#10;        try {&#10;            // 验证必要参数&#10;            if (patient.getPatientId() == null || patient.getPatientId().trim().isEmpty()) {&#10;                patient.setPatientId(&quot;PATIENT_&quot; + System.currentTimeMillis());&#10;            }&#10;            &#10;            // 进行ECMO评估&#10;            ECMOAssessment assessment = ecmoExpertService.assessPatientForECMO(patient);&#10;            &#10;            // 生成评估ID&#10;            String assessmentId = &quot;ECMO_ASSESS_&quot; + System.currentTimeMillis() + &quot;_&quot; + &#10;                                 UUID.randomUUID().toString().substring(0, 8);&#10;            &#10;            // 存储评估结果&#10;            assessmentById.put(assessmentId, assessment);&#10;            &#10;            // 构建响应&#10;            response.put(&quot;success&quot;, true);&#10;            response.put(&quot;assessmentId&quot;, assessmentId);&#10;            response.put(&quot;patientId&quot;, assessment.getPatientId());&#10;            response.put(&quot;canUseECMO&quot;, assessment.isCanUseECMO());&#10;            response.put(&quot;diagnosis&quot;, assessment.getDiagnosis());&#10;            response.put(&quot;evidence&quot;, assessment.getEvidence());&#10;            response.put(&quot;confidence&quot;, Math.round(assessment.getConfidence() * 100) / 100.0);&#10;            response.put(&quot;riskLevel&quot;, assessment.getRiskLevel());&#10;            response.put(&quot;recommendations&quot;, assessment.getRecommendations());&#10;            response.put(&quot;assessmentTime&quot;, assessment.getAssessmentTime());&#10;            &#10;            return ResponseEntity.ok(response);&#10;            &#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;            response.put(&quot;success&quot;, false);&#10;            response.put(&quot;message&quot;, &quot;ECMO评估失败，请检查输入参数或稍后重试&quot;);&#10;            response.put(&quot;error&quot;, e.getMessage());&#10;            return ResponseEntity.internalServerError().body(response);&#10;        }&#10;    }&#10;    &#10;    /**&#10;     * 获取评估历史&#10;     */&#10;    @GetMapping(&quot;/assessments/{username}&quot;)&#10;    public ResponseEntity&lt;Map&lt;String, Object&gt;&gt; getAssessmentHistory(@PathVariable String username) {&#10;        Map&lt;String, Object&gt; response = new HashMap&lt;&gt;();&#10;        &#10;        try {&#10;            List&lt;ECMOAssessment&gt; assessments = userAssessments.getOrDefault(username, new ArrayList&lt;&gt;());&#10;            List&lt;Map&lt;String, Object&gt;&gt; assessmentList = new ArrayList&lt;&gt;();&#10;            &#10;            for (ECMOAssessment assessment : assessments) {&#10;                Map&lt;String, Object&gt; assessmentInfo = new HashMap&lt;&gt;();&#10;                assessmentInfo.put(&quot;patientId&quot;, assessment.getPatientId());&#10;                assessmentInfo.put(&quot;canUseECMO&quot;, assessment.isCanUseECMO());&#10;                assessmentInfo.put(&quot;confidence&quot;, assessment.getConfidence());&#10;                assessmentInfo.put(&quot;riskLevel&quot;, assessment.getRiskLevel());&#10;                assessmentInfo.put(&quot;assessmentTime&quot;, assessment.getAssessmentTime());&#10;                assessmentList.add(assessmentInfo);&#10;            }&#10;            &#10;            response.put(&quot;success&quot;, true);&#10;            response.put(&quot;assessments&quot;, assessmentList);&#10;            return ResponseEntity.ok(response);&#10;            &#10;        } catch (Exception e) {&#10;            response.put(&quot;success&quot;, false);&#10;            response.put(&quot;message&quot;, &quot;获取评估历史失败&quot;);&#10;            return ResponseEntity.internalServerError().body(response);&#10;        }&#10;    }&#10;    &#10;    /**&#10;     * 获取具体评估详情&#10;     */&#10;    @GetMapping(&quot;/assessment/{assessmentId}&quot;)&#10;    public ResponseEntity&lt;Map&lt;String, Object&gt;&gt; getAssessmentDetail(@PathVariable String assessmentId) {&#10;        Map&lt;String, Object&gt; response = new HashMap&lt;&gt;();&#10;        &#10;        try {&#10;            ECMOAssessment assessment = assessmentById.get(assessmentId);&#10;            if (assessment == null) {&#10;                response.put(&quot;success&quot;, false);&#10;                response.put(&quot;message&quot;, &quot;评估记录不存在&quot;);&#10;                return ResponseEntity.notFound().build();&#10;            }&#10;            &#10;            response.put(&quot;success&quot;, true);&#10;            response.put(&quot;assessment&quot;, assessment);&#10;            return ResponseEntity.ok(response);&#10;            &#10;        } catch (Exception e) {&#10;            response.put(&quot;success&quot;, false);&#10;            response.put(&quot;message&quot;, &quot;获取评估详情失败&quot;);&#10;            return ResponseEntity.internalServerError().body(response);&#10;        }&#10;    }&#10;    &#10;    /**&#10;     * 快速评估接口（简化参数）&#10;     */&#10;    @PostMapping(&quot;/quick-assess&quot;)&#10;    public ResponseEntity&lt;Map&lt;String, Object&gt;&gt; quickAssess(@RequestBody QuickAssessRequest request) {&#10;        Map&lt;String, Object&gt; response = new HashMap&lt;&gt;();&#10;        &#10;        try {&#10;            // 将快速评估请求转换为完整的患者参数&#10;            PatientParameters patient = convertToPatientParameters(request);&#10;            &#10;            // 进行评估&#10;            ECMOAssessment assessment = ecmoExpertService.assessPatientForECMO(patient);&#10;            &#10;            // 返回简化的响应&#10;            response.put(&quot;success&quot;, true);&#10;            response.put(&quot;canUseECMO&quot;, assessment.isCanUseECMO());&#10;            response.put(&quot;recommendation&quot;, assessment.isCanUseECMO() ? &quot;建议考虑ECMO治疗&quot; : &quot;暂不建议ECMO治疗&quot;);&#10;            response.put(&quot;confidence&quot;, Math.round(assessment.getConfidence() * 100));&#10;            response.put(&quot;riskLevel&quot;, assessment.getRiskLevel());&#10;            response.put(&quot;keyPoints&quot;, extractKeyPoints(assessment));&#10;            &#10;            return ResponseEntity.ok(response);&#10;            &#10;        } catch (Exception e) {&#10;            response.put(&quot;success&quot;, false);&#10;            response.put(&quot;message&quot;, &quot;快速评估失败&quot;);&#10;            return ResponseEntity.internalServerError().body(response);&#10;        }&#10;    }&#10;    &#10;    /**&#10;     * 获取ECMO知识库&#10;     */&#10;    @GetMapping(&quot;/knowledge&quot;)&#10;    public ResponseEntity&lt;Map&lt;String, Object&gt;&gt; getECMOKnowledge() {&#10;        Map&lt;String, Object&gt; response = new HashMap&lt;&gt;();&#10;        &#10;        try {&#10;            Map&lt;String, Object&gt; knowledge = new HashMap&lt;&gt;();&#10;            &#10;            // ECMO适应症&#10;            List&lt;String&gt; indications = Arrays.asList(&#10;                &quot;急性呼吸窘迫综合征(ARDS)，P/F比&lt;100，FiO2&gt;0.9&quot;,&#10;                &quot;心源性休克，药物治疗无效&quot;,&#10;                &quot;急性心肌炎伴心源性休克&quot;,&#10;                &quot;心脏骤停后心肺复苏&quot;,&#10;                &quot;先天性心脏病术后低心排&quot;,&#10;                &quot;等待心脏移植的桥梁治疗&quot;,&#10;                &quot;急性肺栓塞伴血流动力学不稳定&quot;&#10;            );&#10;            &#10;            // ECMO禁忌症&#10;            List&lt;String&gt; contraindications = Arrays.asList(&#10;                &quot;不可逆转的疾病终末期&quot;,&#10;                &quot;严重的多器官功能衰竭&quot;,&#10;                &quot;恶性肿瘤晚期&quot;,&#10;                &quot;严重的神经系统损伤&quot;,&#10;                &quot;活动性出血且无法控制&quot;,&#10;                &quot;严重的凝血功能障碍&quot;&#10;            );&#10;            &#10;            // 风险因素&#10;            List&lt;String&gt; riskFactors = Arrays.asList(&#10;                &quot;年龄&gt;65岁&quot;,&#10;                &quot;体重&lt;30kg或&gt;100kg&quot;,&#10;                &quot;机械通气&gt;7天&quot;,&#10;                &quot;多器官功能衰竭&quot;,&#10;                &quot;免疫抑制状态&quot;,&#10;                &quot;既往心脏手术史&quot;&#10;            );&#10;            &#10;            knowledge.put(&quot;indications&quot;, indications);&#10;            knowledge.put(&quot;contraindications&quot;, contraindications);&#10;            knowledge.put(&quot;riskFactors&quot;, riskFactors);&#10;            &#10;            response.put(&quot;success&quot;, true);&#10;            response.put(&quot;knowledge&quot;, knowledge);&#10;            return ResponseEntity.ok(response);&#10;            &#10;        } catch (Exception e) {&#10;            response.put(&quot;success&quot;, false);&#10;            response.put(&quot;message&quot;, &quot;获取知识库失败&quot;);&#10;            return ResponseEntity.internalServerError().body(response);&#10;        }&#10;    }&#10;    &#10;    // 辅助方法&#10;    private PatientParameters convertToPatientParameters(QuickAssessRequest request) {&#10;        PatientParameters patient = new PatientParameters();&#10;        patient.setPatientId(request.getPatientId());&#10;        patient.setAge(request.getAge());&#10;        patient.setGender(request.getGender());&#10;        patient.setWeight(request.getWeight());&#10;        patient.setPrimaryDiagnosis(request.getPrimaryDiagnosis());&#10;        patient.setPo2(request.getPo2());&#10;        patient.setOxygenSaturation(request.getOxygenSaturation());&#10;        patient.setEjectionFraction(request.getEjectionFraction());&#10;        patient.setLactate(request.getLactate());&#10;        patient.setOnVentilator(request.isOnVentilator());&#10;        patient.setOnVasopressors(request.isOnVasopressors());&#10;        patient.setClinicalPresentation(request.getClinicalPresentation());&#10;        &#10;        // 设置一些默认值&#10;        patient.setHeartRate(100);&#10;        patient.setSystolicBP(90);&#10;        patient.setDiastolicBP(60);&#10;        patient.setTemperature(37.0);&#10;        patient.setRespiratoryRate(25);&#10;        patient.setPh(7.35);&#10;        patient.setPco2(40);&#10;        patient.setHco3(22);&#10;        patient.setCreatinine(1.2);&#10;        patient.setBun(25);&#10;        patient.setUrineOutput(30);&#10;        patient.setGlasgowComaScale(10);&#10;        &#10;        return patient;&#10;    }&#10;    &#10;    private List&lt;String&gt; extractKeyPoints(ECMOAssessment assessment) {&#10;        List&lt;String&gt; keyPoints = new ArrayList&lt;&gt;();&#10;        &#10;        if (assessment.isCanUseECMO()) {&#10;            keyPoints.add(&quot;✓ 符合ECMO适应症&quot;);&#10;            keyPoints.add(&quot;✓ 预期获益大于风险&quot;);&#10;        } else {&#10;            keyPoints.add(&quot;✗ 不符合ECMO适应症&quot;);&#10;            keyPoints.add(&quot;✗ 风险可能超过获益&quot;);&#10;        }&#10;        &#10;        keyPoints.add(&quot;置信度: &quot; + Math.round(assessment.getConfidence() * 100) + &quot;%&quot;);&#10;        keyPoints.add(&quot;风险等级: &quot; + assessment.getRiskLevel());&#10;        &#10;        return keyPoints;&#10;    }&#10;    &#10;    // 快速评估请求类&#10;    public static class QuickAssessRequest {&#10;        private String patientId;&#10;        private int age;&#10;        private String gender;&#10;        private double weight;&#10;        private String primaryDiagnosis;&#10;        private double po2;&#10;        private double oxygenSaturation;&#10;        private double ejectionFraction;&#10;        private double lactate;&#10;        private boolean onVentilator;&#10;        private boolean onVasopressors;&#10;        private String clinicalPresentation;&#10;        &#10;        // Getters and Setters&#10;        public String getPatientId() { return patientId; }&#10;        public void setPatientId(String patientId) { this.patientId = patientId; }&#10;        &#10;        public int getAge() { return age; }&#10;        public void setAge(int age) { this.age = age; }&#10;        &#10;        public String getGender() { return gender; }&#10;        public void setGender(String gender) { this.gender = gender; }&#10;        &#10;        public double getWeight() { return weight; }&#10;        public void setWeight(double weight) { this.weight = weight; }&#10;        &#10;        public String getPrimaryDiagnosis() { return primaryDiagnosis; }&#10;        public void setPrimaryDiagnosis(String primaryDiagnosis) { this.primaryDiagnosis = primaryDiagnosis; }&#10;        &#10;        public double getPo2() { return po2; }&#10;        public void setPo2(double po2) { this.po2 = po2; }&#10;        &#10;        public double getOxygenSaturation() { return oxygenSaturation; }&#10;        public void setOxygenSaturation(double oxygenSaturation) { this.oxygenSaturation = oxygenSaturation; }&#10;        &#10;        public double getEjectionFraction() { return ejectionFraction; }&#10;        public void setEjectionFraction(double ejectionFraction) { this.ejectionFraction = ejectionFraction; }&#10;        &#10;        public double getLactate() { return lactate; }&#10;        public void setLactate(double lactate) { this.lactate = lactate; }&#10;        &#10;        public boolean isOnVentilator() { return onVentilator; }&#10;        public void setOnVentilator(boolean onVentilator) { this.onVentilator = onVentilator; }&#10;        &#10;        public boolean isOnVasopressors() { return onVasopressors; }&#10;        public void setOnVasopressors(boolean onVasopressors) { this.onVasopressors = onVasopressors; }&#10;        &#10;        public String getClinicalPresentation() { return clinicalPresentation; }&#10;        public void setClinicalPresentation(String clinicalPresentation) { this.clinicalPresentation = clinicalPresentation; }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.fox.alibabadeepseekdemo.controller;&#13;&#10;&#13;&#10;import com.fox.alibabadeepseekdemo.entity.ECMOAssessment;&#13;&#10;import com.fox.alibabadeepseekdemo.entity.PatientParameters;&#13;&#10;import com.fox.alibabadeepseekdemo.service.ECMOExpertService;&#13;&#10;import org.springframework.beans.factory.annotation.Autowired;&#13;&#10;import org.springframework.http.ResponseEntity;&#13;&#10;import org.springframework.web.bind.annotation.*;&#13;&#10;&#13;&#10;import java.util.*;&#13;&#10;import java.util.concurrent.ConcurrentHashMap;&#13;&#10;&#13;&#10;@RestController&#13;&#10;@RequestMapping(&quot;/api/ecmo&quot;)&#13;&#10;@CrossOrigin(origins = &quot;*&quot;)&#13;&#10;public class ECMOExpertController {&#13;&#10;    &#13;&#10;    @Autowired&#13;&#10;    private ECMOExpertService ecmoExpertService;&#13;&#10;    &#13;&#10;    // 存储评估历史记录&#13;&#10;    private final Map&lt;String, List&lt;ECMOAssessment&gt;&gt; userAssessments = new ConcurrentHashMap&lt;&gt;();&#13;&#10;    private final Map&lt;String, ECMOAssessment&gt; assessmentById = new ConcurrentHashMap&lt;&gt;();&#13;&#10;    &#13;&#10;    /**&#13;&#10;     * ECMO适应症评估 - 增强版&#13;&#10;     * 返回4个核心输出：诊断结果、诊断原因、诊断依据、置信度&#13;&#10;     * 以及动态风险评分和决策辅助卡&#13;&#10;     */&#13;&#10;    @PostMapping(&quot;/assess&quot;)&#13;&#10;    public ResponseEntity&lt;Map&lt;String, Object&gt;&gt; assessECMO(@RequestBody PatientParameters patient) {&#13;&#10;        Map&lt;String, Object&gt; response = new HashMap&lt;&gt;();&#13;&#10;        &#13;&#10;        try {&#13;&#10;            // 验证必要参数&#13;&#10;            if (patient.getPatientId() == null || patient.getPatientId().trim().isEmpty()) {&#13;&#10;                patient.setPatientId(&quot;PATIENT_&quot; + System.currentTimeMillis());&#13;&#10;            }&#13;&#10;            &#13;&#10;            // 进行ECMO评估&#13;&#10;            ECMOAssessment assessment = ecmoExpertService.assessPatientForECMO(patient);&#13;&#10;            &#13;&#10;            // 生成评估ID&#13;&#10;            String assessmentId = &quot;ECMO_ASSESS_&quot; + System.currentTimeMillis() + &quot;_&quot; + &#13;&#10;                                 UUID.randomUUID().toString().substring(0, 8);&#13;&#10;            assessment.setAssessmentId(assessmentId);&#13;&#10;            &#13;&#10;            // 存储评估结果&#13;&#10;            assessmentById.put(assessmentId, assessment);&#13;&#10;            &#13;&#10;            // 构建增强响应&#13;&#10;            response.put(&quot;success&quot;, true);&#13;&#10;            response.put(&quot;assessmentId&quot;, assessmentId);&#13;&#10;            response.put(&quot;patientId&quot;, assessment.getPatientId());&#13;&#10;            &#13;&#10;            // 4个核心输出&#13;&#10;            response.put(&quot;ecmoResult&quot;, assessment.isCanUseECMO() ? &quot;推荐&quot; : &quot;不推荐&quot;);&#13;&#10;            response.put(&quot;diagnosis&quot;, assessment.getDiagnosis());&#13;&#10;            response.put(&quot;evidence&quot;, assessment.getEvidence());&#13;&#10;            response.put(&quot;confidence&quot;, Math.round(assessment.getConfidence() * 100.0) / 100.0);&#13;&#10;            &#13;&#10;            // 动态风险评分&#13;&#10;            Map&lt;String, Object&gt; riskAssessment = new HashMap&lt;&gt;();&#13;&#10;            riskAssessment.put(&quot;riskScore&quot;, Math.round(assessment.getRiskScore() * 10.0) / 10.0);&#13;&#10;            riskAssessment.put(&quot;riskLevel&quot;, assessment.getRiskLevel());&#13;&#10;            riskAssessment.put(&quot;riskColor&quot;, assessment.getRiskColor());&#13;&#10;            riskAssessment.put(&quot;keyRiskFactors&quot;, assessment.getKeyRiskFactors());&#13;&#10;            response.put(&quot;riskAssessment&quot;, riskAssessment);&#13;&#10;            &#13;&#10;            // 决策辅助卡&#13;&#10;            Map&lt;String, Object&gt; decisionCard = new HashMap&lt;&gt;();&#13;&#10;            decisionCard.put(&quot;supportReasons&quot;, assessment.getSupportReasons());&#13;&#10;            decisionCard.put(&quot;opposeReasons&quot;, assessment.getOpposeReasons());&#13;&#10;            decisionCard.put(&quot;finalRecommendation&quot;, assessment.getFinalRecommendation());&#13;&#10;            decisionCard.put(&quot;guidelineReferences&quot;, assessment.getGuidelineReferences());&#13;&#10;            response.put(&quot;decisionCard&quot;, decisionCard);&#13;&#10;            &#13;&#10;            // 详细信息&#13;&#10;            response.put(&quot;recommendations&quot;, assessment.getRecommendations());&#13;&#10;            response.put(&quot;contraindications&quot;, assessment.getContraindications());&#13;&#10;            response.put(&quot;precautions&quot;, assessment.getPrecautions());&#13;&#10;            response.put(&quot;detailedScores&quot;, assessment.getDetailedScores());&#13;&#10;            response.put(&quot;assessmentTime&quot;, assessment.getAssessmentTime());&#13;&#10;            &#13;&#10;            return ResponseEntity.ok(response);&#13;&#10;            &#13;&#10;        } catch (Exception e) {&#13;&#10;            e.printStackTrace();&#13;&#10;            response.put(&quot;success&quot;, false);&#13;&#10;            response.put(&quot;message&quot;, &quot;ECMO评估失败，请检查输入参数或稍后重试&quot;);&#13;&#10;            response.put(&quot;error&quot;, e.getMessage());&#13;&#10;            return ResponseEntity.internalServerError().body(response);&#13;&#10;        }&#13;&#10;    }&#13;&#10;    &#13;&#10;    /**&#13;&#10;     * 获取风险评分详情&#13;&#10;     */&#13;&#10;    @GetMapping(&quot;/risk-analysis/{assessmentId}&quot;)&#13;&#10;    public ResponseEntity&lt;Map&lt;String, Object&gt;&gt; getRiskAnalysis(@PathVariable String assessmentId) {&#13;&#10;        Map&lt;String, Object&gt; response = new HashMap&lt;&gt;();&#13;&#10;        &#13;&#10;        try {&#13;&#10;            ECMOAssessment assessment = assessmentById.get(assessmentId);&#13;&#10;            if (assessment == null) {&#13;&#10;                response.put(&quot;success&quot;, false);&#13;&#10;                response.put(&quot;message&quot;, &quot;评估记录不存在&quot;);&#13;&#10;                return ResponseEntity.notFound().build();&#13;&#10;            }&#13;&#10;            &#13;&#10;            response.put(&quot;success&quot;, true);&#13;&#10;            response.put(&quot;riskScore&quot;, assessment.getRiskScore());&#13;&#10;            response.put(&quot;riskLevel&quot;, assessment.getRiskLevel());&#13;&#10;            response.put(&quot;riskColor&quot;, assessment.getRiskColor());&#13;&#10;            response.put(&quot;keyRiskFactors&quot;, assessment.getKeyRiskFactors());&#13;&#10;            response.put(&quot;detailedScores&quot;, assessment.getDetailedScores());&#13;&#10;            &#13;&#10;            return ResponseEntity.ok(response);&#13;&#10;            &#13;&#10;        } catch (Exception e) {&#13;&#10;            response.put(&quot;success&quot;, false);&#13;&#10;            response.put(&quot;message&quot;, &quot;获取风险分析失败&quot;);&#13;&#10;            return ResponseEntity.internalServerError().body(response);&#13;&#10;        }&#13;&#10;    }&#13;&#10;    &#13;&#10;    /**&#13;&#10;     * 获取决策辅助信息&#13;&#10;     */&#13;&#10;    @GetMapping(&quot;/decision-support/{assessmentId}&quot;)&#13;&#10;    public ResponseEntity&lt;Map&lt;String, Object&gt;&gt; getDecisionSupport(@PathVariable String assessmentId) {&#13;&#10;        Map&lt;String, Object&gt; response = new HashMap&lt;&gt;();&#13;&#10;        &#13;&#10;        try {&#13;&#10;            ECMOAssessment assessment = assessmentById.get(assessmentId);&#13;&#10;            if (assessment == null) {&#13;&#10;                response.put(&quot;success&quot;, false);&#13;&#10;                response.put(&quot;message&quot;, &quot;评估记录不存在&quot;);&#13;&#10;                return ResponseEntity.notFound().build();&#13;&#10;            }&#13;&#10;            &#13;&#10;            response.put(&quot;success&quot;, true);&#13;&#10;            response.put(&quot;supportReasons&quot;, assessment.getSupportReasons());&#13;&#10;            response.put(&quot;opposeReasons&quot;, assessment.getOpposeReasons());&#13;&#10;            response.put(&quot;finalRecommendation&quot;, assessment.getFinalRecommendation());&#13;&#10;            response.put(&quot;recommendations&quot;, assessment.getRecommendations());&#13;&#10;            response.put(&quot;guidelineReferences&quot;, assessment.getGuidelineReferences());&#13;&#10;            response.put(&quot;contraindications&quot;, assessment.getContraindications());&#13;&#10;            response.put(&quot;precautions&quot;, assessment.getPrecautions());&#13;&#10;            &#13;&#10;            return ResponseEntity.ok(response);&#13;&#10;            &#13;&#10;        } catch (Exception e) {&#13;&#10;            response.put(&quot;success&quot;, false);&#13;&#10;            response.put(&quot;message&quot;, &quot;获取决策支持信息失败&quot;);&#13;&#10;            return ResponseEntity.internalServerError().body(response);&#13;&#10;        }&#13;&#10;    }&#13;&#10;    &#13;&#10;    /**&#13;&#10;     * 获取评估历史&#13;&#10;     */&#13;&#10;    @GetMapping(&quot;/assessments/{username}&quot;)&#13;&#10;    public ResponseEntity&lt;Map&lt;String, Object&gt;&gt; getAssessmentHistory(@PathVariable String username) {&#13;&#10;        Map&lt;String, Object&gt; response = new HashMap&lt;&gt;();&#13;&#10;        &#13;&#10;        try {&#13;&#10;            List&lt;ECMOAssessment&gt; assessments = userAssessments.getOrDefault(username, new ArrayList&lt;&gt;());&#13;&#10;            List&lt;Map&lt;String, Object&gt;&gt; assessmentList = new ArrayList&lt;&gt;();&#13;&#10;            &#13;&#10;            for (ECMOAssessment assessment : assessments) {&#13;&#10;                Map&lt;String, Object&gt; assessmentInfo = new HashMap&lt;&gt;();&#13;&#10;                assessmentInfo.put(&quot;assessmentId&quot;, assessment.getAssessmentId());&#13;&#10;                assessmentInfo.put(&quot;patientId&quot;, assessment.getPatientId());&#13;&#10;                assessmentInfo.put(&quot;canUseECMO&quot;, assessment.isCanUseECMO());&#13;&#10;                assessmentInfo.put(&quot;confidence&quot;, assessment.getConfidence());&#13;&#10;                assessmentInfo.put(&quot;riskScore&quot;, assessment.getRiskScore());&#13;&#10;                assessmentInfo.put(&quot;riskLevel&quot;, assessment.getRiskLevel());&#13;&#10;                assessmentInfo.put(&quot;finalRecommendation&quot;, assessment.getFinalRecommendation());&#13;&#10;                assessmentInfo.put(&quot;assessmentTime&quot;, assessment.getAssessmentTime());&#13;&#10;                assessmentList.add(assessmentInfo);&#13;&#10;            }&#13;&#10;            &#13;&#10;            response.put(&quot;success&quot;, true);&#13;&#10;            response.put(&quot;assessments&quot;, assessmentList);&#13;&#10;            return ResponseEntity.ok(response);&#13;&#10;            &#13;&#10;        } catch (Exception e) {&#13;&#10;            response.put(&quot;success&quot;, false);&#13;&#10;            response.put(&quot;message&quot;, &quot;获取评估历史失败&quot;);&#13;&#10;            return ResponseEntity.internalServerError().body(response);&#13;&#10;        }&#13;&#10;    }&#13;&#10;    &#13;&#10;    /**&#13;&#10;     * 获取完整评估报告&#13;&#10;     */&#13;&#10;    @GetMapping(&quot;/report/{assessmentId}&quot;)&#13;&#10;    public ResponseEntity&lt;Map&lt;String, Object&gt;&gt; getFullReport(@PathVariable String assessmentId) {&#13;&#10;        Map&lt;String, Object&gt; response = new HashMap&lt;&gt;();&#13;&#10;        &#13;&#10;        try {&#13;&#10;            ECMOAssessment assessment = assessmentById.get(assessmentId);&#13;&#10;            if (assessment == null) {&#13;&#10;                response.put(&quot;success&quot;, false);&#13;&#10;                response.put(&quot;message&quot;, &quot;评估记录不存在&quot;);&#13;&#10;                return ResponseEntity.notFound().build();&#13;&#10;            }&#13;&#10;            &#13;&#10;            response.put(&quot;success&quot;, true);&#13;&#10;            response.put(&quot;assessment&quot;, assessment);&#13;&#10;            &#13;&#10;            return ResponseEntity.ok(response);&#13;&#10;            &#13;&#10;        } catch (Exception e) {&#13;&#10;            response.put(&quot;success&quot;, false);&#13;&#10;            response.put(&quot;message&quot;, &quot;获取评估报告失败&quot;);&#13;&#10;            return ResponseEntity.internalServerError().body(response);&#13;&#10;        }&#13;&#10;    }&#13;&#10;    &#13;&#10;    /**&#13;&#10;     * 健康检查接口&#13;&#10;     */&#13;&#10;    @GetMapping(&quot;/health&quot;)&#13;&#10;    public ResponseEntity&lt;Map&lt;String, Object&gt;&gt; healthCheck() {&#13;&#10;        Map&lt;String, Object&gt; response = new HashMap&lt;&gt;();&#13;&#10;        response.put(&quot;status&quot;, &quot;healthy&quot;);&#13;&#10;        response.put(&quot;service&quot;, &quot;ECMO Expert System&quot;);&#13;&#10;        response.put(&quot;version&quot;, &quot;2.0&quot;);&#13;&#10;        response.put(&quot;features&quot;, Arrays.asList(&#13;&#10;            &quot;4核心输出&quot;, &quot;动态风险评分&quot;, &quot;决策辅助卡&quot;, &quot;专家共识引用&quot;&#13;&#10;        ));&#13;&#10;        response.put(&quot;timestamp&quot;, new Date());&#13;&#10;        return ResponseEntity.ok(response);&#13;&#10;    }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/alibaba-deepseek-demo/src/main/java/com/fox/alibabadeepseekdemo/entity/ECMOAssessment.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/alibaba-deepseek-demo/src/main/java/com/fox/alibabadeepseekdemo/entity/ECMOAssessment.java" />
              <option name="originalContent" value="package com.fox.alibabadeepseekdemo.entity;&#10;&#10;import java.util.Date;&#10;import java.util.List;&#10;import java.util.Map;&#10;&#10;/**&#10; * ECMO评估结果实体类&#10; * 包含4个核心输出：诊断结果、诊断原因、诊断依据、置信度&#10; */&#10;public class ECMOAssessment {&#10;    private String patientId;&#10;    private String assessmentId;&#10;    private Date assessmentTime;&#10;    &#10;    // 4个核心输出&#10;    private boolean canUseECMO; // ECMO诊断结果（推荐/不推荐）&#10;    private String diagnosis; // 诊断原因&#10;    private String evidence; // 诊断依据&#10;    private Double confidence; // 置信度 (0-1)&#10;    &#10;    // 动态风险评分&#10;    private Double riskScore; // ECMO实施推荐指数 (0-100)&#10;    private String riskLevel; // 风险等级：HIGH(推荐)、MEDIUM(谨慎)、LOW(不推荐)&#10;    private String riskColor; // 颜色标识：green(推荐)、yellow(谨慎)、red(不推荐)&#10;    private List&lt;String&gt; keyRiskFactors; // 关键扣分点&#10;    &#10;    // 决策辅助卡&#10;    private List&lt;String&gt; supportReasons; // 支持使用依据&#10;    private List&lt;String&gt; opposeReasons; // 反对使用依据&#10;    private String finalRecommendation; // 建议结论&#10;    private Map&lt;String, String&gt; guidelineReferences; // 专家共识/指南原文&#10;    &#10;    // 详细评估&#10;    private String riskLevel; // 整体风险等级&#10;    private List&lt;String&gt; recommendations; // 详细建议&#10;    private Map&lt;String, Object&gt; detailedScores; // 各项指标得分&#10;    private String contraindications; // 禁忌症&#10;    private String precautions; // 注意事项&#10;    &#10;    // 构造函数&#10;    public ECMOAssessment() {&#10;        this.assessmentTime = new Date();&#10;    }&#10;    &#10;    // Getter和Setter方法&#10;    public String getPatientId() { return patientId; }&#10;    public void setPatientId(String patientId) { this.patientId = patientId; }&#10;    &#10;    public String getAssessmentId() { return assessmentId; }&#10;    public void setAssessmentId(String assessmentId) { this.assessmentId = assessmentId; }&#10;    &#10;    public Date getAssessmentTime() { return assessmentTime; }&#10;    public void setAssessmentTime(Date assessmentTime) { this.assessmentTime = assessmentTime; }&#10;    &#10;    public boolean isCanUseECMO() { return canUseECMO; }&#10;    public void setCanUseECMO(boolean canUseECMO) { this.canUseECMO = canUseECMO; }&#10;    &#10;    public String getDiagnosis() { return diagnosis; }&#10;    public void setDiagnosis(String diagnosis) { this.diagnosis = diagnosis; }&#10;    &#10;    public String getEvidence() { return evidence; }&#10;    public void setEvidence(String evidence) { this.evidence = evidence; }&#10;    &#10;    public Double getConfidence() { return confidence; }&#10;    public void setConfidence(Double confidence) { this.confidence = confidence; }&#10;    &#10;    public Double getRiskScore() { return riskScore; }&#10;    public void setRiskScore(Double riskScore) { this.riskScore = riskScore; }&#10;    &#10;    public String getRiskLevel() { return riskLevel; }&#10;    public void setRiskLevel(String riskLevel) { this.riskLevel = riskLevel; }&#10;    &#10;    public String getRiskColor() { return riskColor; }&#10;    public void setRiskColor(String riskColor) { this.riskColor = riskColor; }&#10;    &#10;    public List&lt;String&gt; getKeyRiskFactors() { return keyRiskFactors; }&#10;    public void setKeyRiskFactors(List&lt;String&gt; keyRiskFactors) { this.keyRiskFactors = keyRiskFactors; }&#10;    &#10;    public List&lt;String&gt; getSupportReasons() { return supportReasons; }&#10;    public void setSupportReasons(List&lt;String&gt; supportReasons) { this.supportReasons = supportReasons; }&#10;    &#10;    public List&lt;String&gt; getOpposeReasons() { return opposeReasons; }&#10;    public void setOpposeReasons(List&lt;String&gt; opposeReasons) { this.opposeReasons = opposeReasons; }&#10;    &#10;    public String getFinalRecommendation() { return finalRecommendation; }&#10;    public void setFinalRecommendation(String finalRecommendation) { this.finalRecommendation = finalRecommendation; }&#10;    &#10;    public Map&lt;String, String&gt; getGuidelineReferences() { return guidelineReferences; }&#10;    public void setGuidelineReferences(Map&lt;String, String&gt; guidelineReferences) { this.guidelineReferences = guidelineReferences; }&#10;    &#10;    public List&lt;String&gt; getRecommendations() { return recommendations; }&#10;    public void setRecommendations(List&lt;String&gt; recommendations) { this.recommendations = recommendations; }&#10;    &#10;    public Map&lt;String, Object&gt; getDetailedScores() { return detailedScores; }&#10;    public void setDetailedScores(Map&lt;String, Object&gt; detailedScores) { this.detailedScores = detailedScores; }&#10;    &#10;    public String getContraindications() { return contraindications; }&#10;    public void setContraindications(String contraindications) { this.contraindications = contraindications; }&#10;    &#10;    public String getPrecautions() { return precautions; }&#10;    public void setPrecautions(String precautions) { this.precautions = precautions; }&#10;}&#10;" />
              <option name="updatedContent" value="package com.fox.alibabadeepseekdemo.entity;&#10;&#10;import java.util.Date;&#10;import java.util.List;&#10;import java.util.Map;&#10;&#10;/**&#10; * ECMO评估结果实体类&#10; * 包含4个核心输出：诊断结果、诊断原因、诊断依据、置信度&#10; */&#10;public class ECMOAssessment {&#10;    private String patientId;&#10;    private String assessmentId;&#10;    private Date assessmentTime;&#10;    &#10;    // 4个核心输出&#10;    private boolean canUseECMO; // ECMO诊断结果（推荐/不推荐）&#10;    private String diagnosis; // 诊断原因&#10;    private String evidence; // 诊断依据&#10;    private Double confidence; // 置信度 (0-1)&#10;    &#10;    // 动态风险评分&#10;    private Double riskScore; // ECMO实施推荐指数 (0-100)&#10;    private String riskLevel; // 风险等级：HIGH(推荐)、MEDIUM(谨慎)、LOW(不推荐)&#10;    private String riskColor; // 颜色标识：green(推荐)、yellow(谨慎)、red(不推荐)&#10;    private List&lt;String&gt; keyRiskFactors; // 关键扣分点&#10;    &#10;    // 决策辅助卡&#10;    private List&lt;String&gt; supportReasons; // 支持使用依据&#10;    private List&lt;String&gt; opposeReasons; // 反对使用依据&#10;    private String finalRecommendation; // 建议结论&#10;    private Map&lt;String, String&gt; guidelineReferences; // 专家共识/指南原文&#10;    &#10;    // 详细评估&#10;    private List&lt;String&gt; recommendations; // 详细建议&#10;    private Map&lt;String, Object&gt; detailedScores; // 各项指标得分&#10;    private String contraindications; // 禁忌症&#10;    private String precautions; // 注意事项&#10;    &#10;    // 构造函数&#10;    public ECMOAssessment() {&#10;        this.assessmentTime = new Date();&#10;    }&#10;    &#10;    // Getter和Setter方法&#10;    public String getPatientId() { return patientId; }&#10;    public void setPatientId(String patientId) { this.patientId = patientId; }&#10;    &#10;    public String getAssessmentId() { return assessmentId; }&#10;    public void setAssessmentId(String assessmentId) { this.assessmentId = assessmentId; }&#10;    &#10;    public Date getAssessmentTime() { return assessmentTime; }&#10;    public void setAssessmentTime(Date assessmentTime) { this.assessmentTime = assessmentTime; }&#10;    &#10;    public boolean isCanUseECMO() { return canUseECMO; }&#10;    public void setCanUseECMO(boolean canUseECMO) { this.canUseECMO = canUseECMO; }&#10;    &#10;    public String getDiagnosis() { return diagnosis; }&#10;    public void setDiagnosis(String diagnosis) { this.diagnosis = diagnosis; }&#10;    &#10;    public String getEvidence() { return evidence; }&#10;    public void setEvidence(String evidence) { this.evidence = evidence; }&#10;    &#10;    public Double getConfidence() { return confidence; }&#10;    public void setConfidence(Double confidence) { this.confidence = confidence; }&#10;    &#10;    public Double getRiskScore() { return riskScore; }&#10;    public void setRiskScore(Double riskScore) { this.riskScore = riskScore; }&#10;    &#10;    public String getRiskLevel() { return riskLevel; }&#10;    public void setRiskLevel(String riskLevel) { this.riskLevel = riskLevel; }&#10;    &#10;    public String getRiskColor() { return riskColor; }&#10;    public void setRiskColor(String riskColor) { this.riskColor = riskColor; }&#10;    &#10;    public List&lt;String&gt; getKeyRiskFactors() { return keyRiskFactors; }&#10;    public void setKeyRiskFactors(List&lt;String&gt; keyRiskFactors) { this.keyRiskFactors = keyRiskFactors; }&#10;    &#10;    public List&lt;String&gt; getSupportReasons() { return supportReasons; }&#10;    public void setSupportReasons(List&lt;String&gt; supportReasons) { this.supportReasons = supportReasons; }&#10;    &#10;    public List&lt;String&gt; getOpposeReasons() { return opposeReasons; }&#10;    public void setOpposeReasons(List&lt;String&gt; opposeReasons) { this.opposeReasons = opposeReasons; }&#10;    &#10;    public String getFinalRecommendation() { return finalRecommendation; }&#10;    public void setFinalRecommendation(String finalRecommendation) { this.finalRecommendation = finalRecommendation; }&#10;    &#10;    public Map&lt;String, String&gt; getGuidelineReferences() { return guidelineReferences; }&#10;    public void setGuidelineReferences(Map&lt;String, String&gt; guidelineReferences) { this.guidelineReferences = guidelineReferences; }&#10;    &#10;    public List&lt;String&gt; getRecommendations() { return recommendations; }&#10;    public void setRecommendations(List&lt;String&gt; recommendations) { this.recommendations = recommendations; }&#10;    &#10;    public Map&lt;String, Object&gt; getDetailedScores() { return detailedScores; }&#10;    public void setDetailedScores(Map&lt;String, Object&gt; detailedScores) { this.detailedScores = detailedScores; }&#10;    &#10;    public String getContraindications() { return contraindications; }&#10;    public void setContraindications(String contraindications) { this.contraindications = contraindications; }&#10;    &#10;    public String getPrecautions() { return precautions; }&#10;    public void setPrecautions(String precautions) { this.precautions = precautions; }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/alibaba-deepseek-demo/src/main/java/com/fox/alibabadeepseekdemo/entity/PatientParameters.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/alibaba-deepseek-demo/src/main/java/com/fox/alibabadeepseekdemo/entity/PatientParameters.java" />
              <option name="originalContent" value="package com.fox.alibabadeepseekdemo.entity;&#10;&#10;/**&#10; * 病人参数实体类&#10; */&#10;public class PatientParameters {&#10;    private String patientId;&#10;    private int age;&#10;    private String gender;&#10;    private double weight; // kg&#10;    private double height; // cm&#10;    &#10;    // 生命体征&#10;    private int heartRate; // 心率&#10;    private int systolicBP; // 收缩压&#10;    private int diastolicBP; // 舒张压&#10;    private double temperature; // 体温&#10;    private int respiratoryRate; // 呼吸频率&#10;    private double oxygenSaturation; // 血氧饱和度&#10;    &#10;    // 血气分析&#10;    private double ph;&#10;    private double pco2; // mmHg&#10;    private double po2; // mmHg&#10;    private double hco3; // mEq/L&#10;    private double lactate; // mmol/L&#10;    &#10;    // 心脏功能指标&#10;    private double ejectionFraction; // 射血分数 %&#10;    private String ecgFindings; // 心电图表现&#10;    private double troponinI; // 肌钙蛋白I&#10;    private double bnp; // 脑钠肽&#10;    &#10;    // 肾功能&#10;    private double creatinine; // 肌酐&#10;    private double bun; // 尿素氮&#10;    private double urineOutput; // 尿量 ml/h&#10;    &#10;    // 肝功能&#10;    private double alt; // 丙氨酸转氨酶&#10;    private double ast; // 天冬氨酸转氨酶&#10;    private double bilirubin; // 胆红素&#10;    &#10;    // 凝血功能&#10;    private double pt; // 凝血酶原时间&#10;    private double ptt; // 部分凝血活酶时间&#10;    private double inr; // 国际标准化比值&#10;    private int plateletCount; // 血小板计数&#10;    &#10;    // 其他重要指标&#10;    private int glasgowComaScale; // 格拉斯哥昏迷量表&#10;    private String primaryDiagnosis; // 主要诊断&#10;    private String comorbidities; // 合并症&#10;    private String currentMedications; // 当前用药&#10;    private boolean onVentilator; // 是否使用呼吸机&#10;    private boolean onVasopressors; // 是否使用血管活性药物&#10;    private String clinicalPresentation; // 临床表现&#10;    &#10;    public PatientParameters() {}&#10;    &#10;    // Getters and Setters&#10;    public String getPatientId() { return patientId; }&#10;    public void setPatientId(String patientId) { this.patientId = patientId; }&#10;    &#10;    public int getAge() { return age; }&#10;    public void setAge(int age) { this.age = age; }&#10;    &#10;    public String getGender() { return gender; }&#10;    public void setGender(String gender) { this.gender = gender; }&#10;    &#10;    public double getWeight() { return weight; }&#10;    public void setWeight(double weight) { this.weight = weight; }&#10;    &#10;    public double getHeight() { return height; }&#10;    public void setHeight(double height) { this.height = height; }&#10;    &#10;    public int getHeartRate() { return heartRate; }&#10;    public void setHeartRate(int heartRate) { this.heartRate = heartRate; }&#10;    &#10;    public int getSystolicBP() { return systolicBP; }&#10;    public void setSystolicBP(int systolicBP) { this.systolicBP = systolicBP; }&#10;    &#10;    public int getDiastolicBP() { return diastolicBP; }&#10;    public void setDiastolicBP(int diastolicBP) { this.diastolicBP = diastolicBP; }&#10;    &#10;    public double getTemperature() { return temperature; }&#10;    public void setTemperature(double temperature) { this.temperature = temperature; }&#10;    &#10;    public int getRespiratoryRate() { return respiratoryRate; }&#10;    public void setRespiratoryRate(int respiratoryRate) { this.respiratoryRate = respiratoryRate; }&#10;    &#10;    public double getOxygenSaturation() { return oxygenSaturation; }&#10;    public void setOxygenSaturation(double oxygenSaturation) { this.oxygenSaturation = oxygenSaturation; }&#10;    &#10;    public double getPh() { return ph; }&#10;    public void setPh(double ph) { this.ph = ph; }&#10;    &#10;    public double getPco2() { return pco2; }&#10;    public void setPco2(double pco2) { this.pco2 = pco2; }&#10;    &#10;    public double getPo2() { return po2; }&#10;    public void setPo2(double po2) { this.po2 = po2; }&#10;    &#10;    public double getHco3() { return hco3; }&#10;    public void setHco3(double hco3) { this.hco3 = hco3; }&#10;    &#10;    public double getLactate() { return lactate; }&#10;    public void setLactate(double lactate) { this.lactate = lactate; }&#10;    &#10;    public double getEjectionFraction() { return ejectionFraction; }&#10;    public void setEjectionFraction(double ejectionFraction) { this.ejectionFraction = ejectionFraction; }&#10;    &#10;    public String getEcgFindings() { return ecgFindings; }&#10;    public void setEcgFindings(String ecgFindings) { this.ecgFindings = ecgFindings; }&#10;    &#10;    public double getTroponinI() { return troponinI; }&#10;    public void setTroponinI(double troponinI) { this.troponinI = troponinI; }&#10;    &#10;    public double getBnp() { return bnp; }&#10;    public void setBnp(double bnp) { this.bnp = bnp; }&#10;    &#10;    public double getCreatinine() { return creatinine; }&#10;    public void setCreatinine(double creatinine) { this.creatinine = creatinine; }&#10;    &#10;    public double getBun() { return bun; }&#10;    public void setBun(double bun) { this.bun = bun; }&#10;    &#10;    public double getUrineOutput() { return urineOutput; }&#10;    public void setUrineOutput(double urineOutput) { this.urineOutput = urineOutput; }&#10;    &#10;    public double getAlt() { return alt; }&#10;    public void setAlt(double alt) { this.alt = alt; }&#10;    &#10;    public double getAst() { return ast; }&#10;    public void setAst(double ast) { this.ast = ast; }&#10;    &#10;    public double getBilirubin() { return bilirubin; }&#10;    public void setBilirubin(double bilirubin) { this.bilirubin = bilirubin; }&#10;    &#10;    public double getPt() { return pt; }&#10;    public void setPt(double pt) { this.pt = pt; }&#10;    &#10;    public double getPtt() { return ptt; }&#10;    public void setPtt(double ptt) { this.ptt = ptt; }&#10;    &#10;    public double getInr() { return inr; }&#10;    public void setInr(double inr) { this.inr = inr; }&#10;    &#10;    public int getPlateletCount() { return plateletCount; }&#10;    public void setPlateletCount(int plateletCount) { this.plateletCount = plateletCount; }&#10;    &#10;    public int getGlasgowComaScale() { return glasgowComaScale; }&#10;    public void setGlasgowComaScale(int glasgowComaScale) { this.glasgowComaScale = glasgowComaScale; }&#10;    &#10;    public String getPrimaryDiagnosis() { return primaryDiagnosis; }&#10;    public void setPrimaryDiagnosis(String primaryDiagnosis) { this.primaryDiagnosis = primaryDiagnosis; }&#10;    &#10;    public String getComorbidities() { return comorbidities; }&#10;    public void setComorbidities(String comorbidities) { this.comorbidities = comorbidities; }&#10;    &#10;    public String getCurrentMedications() { return currentMedications; }&#10;    public void setCurrentMedications(String currentMedications) { this.currentMedications = currentMedications; }&#10;    &#10;    public boolean isOnVentilator() { return onVentilator; }&#10;    public void setOnVentilator(boolean onVentilator) { this.onVentilator = onVentilator; }&#10;    &#10;    public boolean isOnVasopressors() { return onVasopressors; }&#10;    public void setOnVasopressors(boolean onVasopressors) { this.onVasopressors = onVasopressors; }&#10;    &#10;    public String getClinicalPresentation() { return clinicalPresentation; }&#10;    public void setClinicalPresentation(String clinicalPresentation) { this.clinicalPresentation = clinicalPresentation; }&#10;}&#10;" />
              <option name="updatedContent" value="package com.fox.alibabadeepseekdemo.entity;&#13;&#10;&#13;&#10;import java.util.Date;&#13;&#10;&#13;&#10;/**&#13;&#10; * 患者参数实体类&#13;&#10; */&#13;&#10;public class PatientParameters {&#13;&#10;    private String patientId;&#13;&#10;    private String patientName;&#13;&#10;    private Integer age;&#13;&#10;    private String gender;&#13;&#10;    private Double weight;&#13;&#10;    private Double height;&#13;&#10;    &#13;&#10;    // 生命体征&#13;&#10;    private Integer heartRate;&#13;&#10;    private Integer systolicBP;&#13;&#10;    private Integer diastolicBP;&#13;&#10;    private Double temperature;&#13;&#10;    private Integer respiratoryRate;&#13;&#10;    private Double oxygenSaturation;&#13;&#10;    &#13;&#10;    // 血气分析&#13;&#10;    private Double pH;&#13;&#10;    private Double paCO2;&#13;&#10;    private Double paO2;&#13;&#10;    private Double bicarbonate;&#13;&#10;    private Double lactate;&#13;&#10;    private Double baseExcess;&#13;&#10;    &#13;&#10;    // 心脏功能指标&#13;&#10;    private Double ejectionFraction;&#13;&#10;    private String cardiacIndex;&#13;&#10;    private String centralVenousPressure;&#13;&#10;    private String pulmonaryWedgePressure;&#13;&#10;    &#13;&#10;    // 肺功能指标&#13;&#10;    private Double pO2FiO2Ratio;&#13;&#10;    private String peep;&#13;&#10;    private String plateauPressure;&#13;&#10;    private String compliance;&#13;&#10;    &#13;&#10;    // 实验室检查&#13;&#10;    private Double hemoglobin;&#13;&#10;    private Double plateletCount;&#13;&#10;    private Double whiteBloodCell;&#13;&#10;    private Double creatinine;&#13;&#10;    private Double bilirubin;&#13;&#10;    private Double albumin;&#13;&#10;    &#13;&#10;    // 疾病信息&#13;&#10;    private String primaryDiagnosis;&#13;&#10;    private String secondaryDiagnosis;&#13;&#10;    private Integer illnessDuration; // 疾病持续天数&#13;&#10;    private String comorbidities;&#13;&#10;    private String currentTreatment;&#13;&#10;    &#13;&#10;    // ECMO相关&#13;&#10;    private String ecmoIndication;&#13;&#10;    private String contraindications;&#13;&#10;    private String riskFactors;&#13;&#10;    &#13;&#10;    private Date assessmentTime;&#13;&#10;    &#13;&#10;    // 构造函数&#13;&#10;    public PatientParameters() {&#13;&#10;        this.assessmentTime = new Date();&#13;&#10;    }&#13;&#10;    &#13;&#10;    // Getter和Setter方法&#13;&#10;    public String getPatientId() { return patientId; }&#13;&#10;    public void setPatientId(String patientId) { this.patientId = patientId; }&#13;&#10;    &#13;&#10;    public String getPatientName() { return patientName; }&#13;&#10;    public void setPatientName(String patientName) { this.patientName = patientName; }&#13;&#10;    &#13;&#10;    public Integer getAge() { return age; }&#13;&#10;    public void setAge(Integer age) { this.age = age; }&#13;&#10;    &#13;&#10;    public String getGender() { return gender; }&#13;&#10;    public void setGender(String gender) { this.gender = gender; }&#13;&#10;    &#13;&#10;    public Double getWeight() { return weight; }&#13;&#10;    public void setWeight(Double weight) { this.weight = weight; }&#13;&#10;    &#13;&#10;    public Double getHeight() { return height; }&#13;&#10;    public void setHeight(Double height) { this.height = height; }&#13;&#10;    &#13;&#10;    public Integer getHeartRate() { return heartRate; }&#13;&#10;    public void setHeartRate(Integer heartRate) { this.heartRate = heartRate; }&#13;&#10;    &#13;&#10;    public Integer getSystolicBP() { return systolicBP; }&#13;&#10;    public void setSystolicBP(Integer systolicBP) { this.systolicBP = systolicBP; }&#13;&#10;    &#13;&#10;    public Integer getDiastolicBP() { return diastolicBP; }&#13;&#10;    public void setDiastolicBP(Integer diastolicBP) { this.diastolicBP = diastolicBP; }&#13;&#10;    &#13;&#10;    public Double getTemperature() { return temperature; }&#13;&#10;    public void setTemperature(Double temperature) { this.temperature = temperature; }&#13;&#10;    &#13;&#10;    public Integer getRespiratoryRate() { return respiratoryRate; }&#13;&#10;    public void setRespiratoryRate(Integer respiratoryRate) { this.respiratoryRate = respiratoryRate; }&#13;&#10;    &#13;&#10;    public Double getOxygenSaturation() { return oxygenSaturation; }&#13;&#10;    public void setOxygenSaturation(Double oxygenSaturation) { this.oxygenSaturation = oxygenSaturation; }&#13;&#10;    &#13;&#10;    public Double getpH() { return pH; }&#13;&#10;    public void setpH(Double pH) { this.pH = pH; }&#13;&#10;    &#13;&#10;    public Double getPaCO2() { return paCO2; }&#13;&#10;    public void setPaCO2(Double paCO2) { this.paCO2 = paCO2; }&#13;&#10;    &#13;&#10;    public Double getPaO2() { return paO2; }&#13;&#10;    public void setPaO2(Double paO2) { this.paO2 = paO2; }&#13;&#10;    &#13;&#10;    public Double getBicarbonate() { return bicarbonate; }&#13;&#10;    public void setBicarbonate(Double bicarbonate) { this.bicarbonate = bicarbonate; }&#13;&#10;    &#13;&#10;    public Double getLactate() { return lactate; }&#13;&#10;    public void setLactate(Double lactate) { this.lactate = lactate; }&#13;&#10;    &#13;&#10;    public Double getBaseExcess() { return baseExcess; }&#13;&#10;    public void setBaseExcess(Double baseExcess) { this.baseExcess = baseExcess; }&#13;&#10;    &#13;&#10;    public Double getEjectionFraction() { return ejectionFraction; }&#13;&#10;    public void setEjectionFraction(Double ejectionFraction) { this.ejectionFraction = ejectionFraction; }&#13;&#10;    &#13;&#10;    public String getCardiacIndex() { return cardiacIndex; }&#13;&#10;    public void setCardiacIndex(String cardiacIndex) { this.cardiacIndex = cardiacIndex; }&#13;&#10;    &#13;&#10;    public String getCentralVenousPressure() { return centralVenousPressure; }&#13;&#10;    public void setCentralVenousPressure(String centralVenousPressure) { this.centralVenousPressure = centralVenousPressure; }&#13;&#10;    &#13;&#10;    public String getPulmonaryWedgePressure() { return pulmonaryWedgePressure; }&#13;&#10;    public void setPulmonaryWedgePressure(String pulmonaryWedgePressure) { this.pulmonaryWedgePressure = pulmonaryWedgePressure; }&#13;&#10;    &#13;&#10;    public Double getpO2FiO2Ratio() { return pO2FiO2Ratio; }&#13;&#10;    public void setpO2FiO2Ratio(Double pO2FiO2Ratio) { this.pO2FiO2Ratio = pO2FiO2Ratio; }&#13;&#10;    &#13;&#10;    public String getPeep() { return peep; }&#13;&#10;    public void setPeep(String peep) { this.peep = peep; }&#13;&#10;    &#13;&#10;    public String getPlateauPressure() { return plateauPressure; }&#13;&#10;    public void setPlateauPressure(String plateauPressure) { this.plateauPressure = plateauPressure; }&#13;&#10;    &#13;&#10;    public String getCompliance() { return compliance; }&#13;&#10;    public void setCompliance(String compliance) { this.compliance = compliance; }&#13;&#10;    &#13;&#10;    public Double getHemoglobin() { return hemoglobin; }&#13;&#10;    public void setHemoglobin(Double hemoglobin) { this.hemoglobin = hemoglobin; }&#13;&#10;    &#13;&#10;    public Double getPlateletCount() { return plateletCount; }&#13;&#10;    public void setPlateletCount(Double plateletCount) { this.plateletCount = plateletCount; }&#13;&#10;    &#13;&#10;    public Double getWhiteBloodCell() { return whiteBloodCell; }&#13;&#10;    public void setWhiteBloodCell(Double whiteBloodCell) { this.whiteBloodCell = whiteBloodCell; }&#13;&#10;    &#13;&#10;    public Double getCreatinine() { return creatinine; }&#13;&#10;    public void setCreatinine(Double creatinine) { this.creatinine = creatinine; }&#13;&#10;    &#13;&#10;    public Double getBilirubin() { return bilirubin; }&#13;&#10;    public void setBilirubin(Double bilirubin) { this.bilirubin = bilirubin; }&#13;&#10;    &#13;&#10;    public Double getAlbumin() { return albumin; }&#13;&#10;    public void setAlbumin(Double albumin) { this.albumin = albumin; }&#13;&#10;    &#13;&#10;    public String getPrimaryDiagnosis() { return primaryDiagnosis; }&#13;&#10;    public void setPrimaryDiagnosis(String primaryDiagnosis) { this.primaryDiagnosis = primaryDiagnosis; }&#13;&#10;    &#13;&#10;    public String getSecondaryDiagnosis() { return secondaryDiagnosis; }&#13;&#10;    public void setSecondaryDiagnosis(String secondaryDiagnosis) { this.secondaryDiagnosis = secondaryDiagnosis; }&#13;&#10;    &#13;&#10;    public Integer getIllnessDuration() { return illnessDuration; }&#13;&#10;    public void setIllnessDuration(Integer illnessDuration) { this.illnessDuration = illnessDuration; }&#13;&#10;    &#13;&#10;    public String getComorbidities() { return comorbidities; }&#13;&#10;    public void setComorbidities(String comorbidities) { this.comorbidities = comorbidities; }&#13;&#10;    &#13;&#10;    public String getCurrentTreatment() { return currentTreatment; }&#13;&#10;    public void setCurrentTreatment(String currentTreatment) { this.currentTreatment = currentTreatment; }&#13;&#10;    &#13;&#10;    public String getEcmoIndication() { return ecmoIndication; }&#13;&#10;    public void setEcmoIndication(String ecmoIndication) { this.ecmoIndication = ecmoIndication; }&#13;&#10;    &#13;&#10;    public String getContraindications() { return contraindications; }&#13;&#10;    public void setContraindications(String contraindications) { this.contraindications = contraindications; }&#13;&#10;    &#13;&#10;    public String getRiskFactors() { return riskFactors; }&#13;&#10;    public void setRiskFactors(String riskFactors) { this.riskFactors = riskFactors; }&#13;&#10;    &#13;&#10;    public Date getAssessmentTime() { return assessmentTime; }&#13;&#10;    public void setAssessmentTime(Date assessmentTime) { this.assessmentTime = assessmentTime; }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/alibaba-deepseek-demo/src/main/java/com/fox/alibabadeepseekdemo/service/ECMOExpertService.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/alibaba-deepseek-demo/src/main/java/com/fox/alibabadeepseekdemo/service/ECMOExpertService.java" />
              <option name="originalContent" value="package com.fox.alibabadeepseekdemo.service;&#10;&#10;import com.fox.alibabadeepseekdemo.entity.ECMOAssessment;&#10;import com.fox.alibabadeepseekdemo.entity.PatientParameters;&#10;import org.springframework.ai.chat.client.ChatClient;&#10;import org.springframework.stereotype.Service;&#10;&#10;import java.util.*;&#10;&#10;/**&#10; * ECMO诊疗专家服务&#10; * 实现4个核心输出：ECMO诊断结果、诊断原因、诊断依据、置信度&#10; * 以及动态风险评分和决策辅助卡功能&#10; */&#10;@Service&#10;public class ECMOExpertService {&#10;&#10;    private final ChatClient chatClient;&#10;&#10;    public ECMOExpertService(ChatClient.Builder chatClientBuilder) {&#10;        this.chatClient = chatClientBuilder.build();&#10;    }&#10;&#10;    /**&#10;     * 评估患者是否适合使用ECMO&#10;     */&#10;    public ECMOAssessment assessPatientForECMO(PatientParameters patient) {&#10;        try {&#10;            // 1. 计算风险评分&#10;            Double riskScore = calculateRiskScore(patient);&#10;&#10;            // 2. 构建专业的ECMO评估提示词&#10;            String prompt = buildECMOAssessmentPrompt(patient, riskScore);&#10;&#10;            // 3. 调用AI进行专业评估&#10;            String aiResponse = chatClient.prompt()&#10;                    .user(prompt)&#10;                    .call()&#10;                    .content();&#10;&#10;            // 4. 解析AI响应并构建评估结果&#10;            ECMOAssessment assessment = parseAIResponse(aiResponse, patient.getPatientId(), riskScore);&#10;&#10;            // 5. 添加动态风险评分和决策辅助信息&#10;            enhanceWithRiskAssessment(assessment, patient, riskScore);&#10;&#10;            return assessment;&#10;&#10;        } catch (Exception e) {&#10;            // 创建错误响应&#10;            return createErrorAssessment(patient.getPatientId(), e.getMessage());&#10;        }&#10;    }&#10;&#10;    /**&#10;     * 计算ECMO实施推荐指数 (0-100)&#10;     */&#10;    private Double calculateRiskScore(PatientParameters patient) {&#10;        double score = 100.0; // 基础分数&#10;        List&lt;String&gt; riskFactors = new ArrayList&lt;&gt;();&#10;&#10;        // 年龄评估 (最大扣分20分)&#10;        if (patient.getAge() != null) {&#10;            if (patient.getAge() &gt; 70) {&#10;                score -= 20;&#10;                riskFactors.add(&quot;年龄&gt;70岁&quot;);&#10;            } else if (patient.getAge() &gt; 65) {&#10;                score -= 10;&#10;                riskFactors.add(&quot;年龄&gt;65岁&quot;);&#10;            }&#10;        }&#10;&#10;        // 疾病持续时间评估 (最大扣分15分)&#10;        if (patient.getIllnessDuration() != null) {&#10;            if (patient.getIllnessDuration() &gt; 7) {&#10;                score -= 15;&#10;                riskFactors.add(&quot;心肺衰竭超7天&quot;);&#10;            } else if (patient.getIllnessDuration() &gt; 5) {&#10;                score -= 8;&#10;                riskFactors.add(&quot;心肺衰竭超5天&quot;);&#10;            }&#10;        }&#10;&#10;        // 血气分析评估 (最大扣分25分)&#10;        if (patient.getpO2FiO2Ratio() != null) {&#10;            if (patient.getpO2FiO2Ratio() &lt; 80) {&#10;                score -= 25;&#10;                riskFactors.add(&quot;P/F比值&lt;80&quot;);&#10;            } else if (patient.getpO2FiO2Ratio() &lt; 100) {&#10;                score -= 15;&#10;                riskFactors.add(&quot;P/F比值&lt;100&quot;);&#10;            }&#10;        }&#10;&#10;        // 心脏功能评估 (最大扣分20分)&#10;        if (patient.getEjectionFraction() != null) {&#10;            if (patient.getEjectionFraction() &lt; 20) {&#10;                score -= 20;&#10;                riskFactors.add(&quot;射血分数&lt;20%&quot;);&#10;            } else if (patient.getEjectionFraction() &lt; 30) {&#10;                score -= 10;&#10;                riskFactors.add(&quot;射血分数&lt;30%&quot;);&#10;            }&#10;        }&#10;&#10;        // 乳酸水平评估 (最大扣分15分)&#10;        if (patient.getLactate() != null) {&#10;            if (patient.getLactate() &gt; 10) {&#10;                score -= 15;&#10;                riskFactors.add(&quot;乳酸&gt;10mmol/L&quot;);&#10;            } else if (patient.getLactate() &gt; 5) {&#10;                score -= 8;&#10;                riskFactors.add(&quot;乳酸&gt;5mmol/L&quot;);&#10;            }&#10;        }&#10;&#10;        // 肾功能评估 (最大扣分10分)&#10;        if (patient.getCreatinine() != null) {&#10;            if (patient.getCreatinine() &gt; 300) {&#10;                score -= 10;&#10;                riskFactors.add(&quot;肌酐&gt;300μmol/L&quot;);&#10;            } else if (patient.getCreatinine() &gt; 200) {&#10;                score -= 5;&#10;                riskFactors.add(&quot;肌酐&gt;200μmol/L&quot;);&#10;            }&#10;        }&#10;&#10;        return Math.max(0, Math.min(100, score));&#10;    }&#10;&#10;    /**&#10;     * 构建ECMO评估提示词&#10;     */&#10;    private String buildECMOAssessmentPrompt(PatientParameters patient, Double riskScore) {&#10;        StringBuilder prompt = new StringBuilder();&#10;        &#10;        prompt.append(&quot;作为ECMO领域的国际顶级专家，请基于ELSO指南、中国ECMO专家共识等权威标准，对以下患者进行全面的ECMO适应症评估。\n\n&quot;);&#10;        &#10;        prompt.append(&quot;【患者临床资料】\n&quot;);&#10;        prompt.append(&quot;患者ID: &quot;).append(patient.getPatientId()).append(&quot;\n&quot;);&#10;        prompt.append(&quot;年龄: &quot;).append(patient.getAge() != null ? patient.getAge() + &quot;岁&quot; : &quot;未提供&quot;).append(&quot;\n&quot;);&#10;        prompt.append(&quot;性别: &quot;).append(patient.getGender() != null ? patient.getGender() : &quot;未提供&quot;).append(&quot;\n&quot;);&#10;        &#10;        prompt.append(&quot;\n【生命体征监测】\n&quot;);&#10;        if (patient.getHeartRate() != null) prompt.append(&quot;心率: &quot;).append(patient.getHeartRate()).append(&quot;次/分\n&quot;);&#10;        if (patient.getSystolicBP() != null &amp;&amp; patient.getDiastolicBP() != null) {&#10;            prompt.append(&quot;血压: &quot;).append(patient.getSystolicBP()).append(&quot;/&quot;).append(patient.getDiastolicBP()).append(&quot;mmHg\n&quot;);&#10;        }&#10;        if (patient.getOxygenSaturation() != null) prompt.append(&quot;血氧饱和度: &quot;).append(patient.getOxygenSaturation()).append(&quot;%\n&quot;);&#10;        if (patient.getRespiratoryRate() != null) prompt.append(&quot;呼吸频率: &quot;).append(patient.getRespiratoryRate()).append(&quot;次/分\n&quot;);&#10;        &#10;        prompt.append(&quot;\n【动脉血气分析】\n&quot;);&#10;        if (patient.getpH() != null) prompt.append(&quot;pH值: &quot;).append(patient.getpH()).append(&quot;\n&quot;);&#10;        if (patient.getPaO2() != null) prompt.append(&quot;PaO2: &quot;).append(patient.getPaO2()).append(&quot;mmHg\n&quot;);&#10;        if (patient.getPaCO2() != null) prompt.append(&quot;PaCO2: &quot;).append(patient.getPaCO2()).append(&quot;mmHg\n&quot;);&#10;        if (patient.getpO2FiO2Ratio() != null) prompt.append(&quot;P/F比值(氧合指数): &quot;).append(patient.getpO2FiO2Ratio()).append(&quot;\n&quot;);&#10;        if (patient.getLactate() != null) prompt.append(&quot;血乳酸: &quot;).append(patient.getLactate()).append(&quot;mmol/L\n&quot;);&#10;        if (patient.getBicarbonate() != null) prompt.append(&quot;碳酸氢根: &quot;).append(patient.getBicarbonate()).append(&quot;mmol/L\n&quot;);&#10;        &#10;        prompt.append(&quot;\n【心肺功能评估】\n&quot;);&#10;        if (patient.getEjectionFraction() != null) prompt.append(&quot;左室射血分数(LVEF): &quot;).append(patient.getEjectionFraction()).append(&quot;%\n&quot;);&#10;        if (patient.getCardiacIndex() != null) prompt.append(&quot;心脏指数: &quot;).append(patient.getCardiacIndex()).append(&quot;\n&quot;);&#10;        &#10;        prompt.append(&quot;\n【疾病诊断及病程】\n&quot;);&#10;        if (patient.getPrimaryDiagnosis() != null) prompt.append(&quot;主要诊断: &quot;).append(patient.getPrimaryDiagnosis()).append(&quot;\n&quot;);&#10;        if (patient.getSecondaryDiagnosis() != null) prompt.append(&quot;次要诊断: &quot;).append(patient.getSecondaryDiagnosis()).append(&quot;\n&quot;);&#10;        if (patient.getIllnessDuration() != null) prompt.append(&quot;病程时间: &quot;).append(patient.getIllnessDuration()).append(&quot;天\n&quot;);&#10;        if (patient.getComorbidities() != null) prompt.append(&quot;合并疾病: &quot;).append(patient.getComorbidities()).append(&quot;\n&quot;);&#10;        if (patient.getCurrentTreatment() != null) prompt.append(&quot;当前治疗: &quot;).append(patient.getCurrentTreatment()).append(&quot;\n&quot;);&#10;        &#10;        prompt.append(&quot;\n【实验室检查】\n&quot;);&#10;        if (patient.getHemoglobin() != null) prompt.append(&quot;血红蛋白: &quot;).append(patient.getHemoglobin()).append(&quot;g/L\n&quot;);&#10;        if (patient.getPlateletCount() != null) prompt.append(&quot;血小板: &quot;).append(patient.getPlateletCount()).append(&quot;×10⁹/L\n&quot;);&#10;        if (patient.getCreatinine() != null) prompt.append(&quot;肌酐: &quot;).append(patient.getCreatinine()).append(&quot;μmol/L\n&quot;);&#10;        if (patient.getBilirubin() != null) prompt.append(&quot;胆红素: &quot;).append(patient.getBilirubin()).append(&quot;μmol/L\n&quot;);&#10;        &#10;        prompt.append(&quot;\n【系统风险评分】\n&quot;);&#10;        prompt.append(&quot;ECMO实施推荐指数: &quot;).append(String.format(&quot;%.1f&quot;, riskScore)).append(&quot;/100分\n&quot;);&#10;        if (riskScore &gt;= 80) {&#10;            prompt.append(&quot;风险等级: 高推荐 (绿色区间)\n&quot;);&#10;        } else if (riskScore &gt;= 60) {&#10;            prompt.append(&quot;风险等级: 谨慎推荐 (黄色区间)\n&quot;);&#10;        } else {&#10;            prompt.append(&quot;风险等级: 低推荐 (红色区间)\n&quot;);&#10;        }&#10;        &#10;        prompt.append(&quot;\n【评估任务要求】\n&quot;);&#10;        prompt.append(&quot;请作为ECMO专家，结合患者的临床资料和系统评分，提供专业的ECMO适应症评估。\n&quot;);&#10;        prompt.append(&quot;必须严格按照以下JSON格式返回详细的评估结果，不得省略任何字段：\n\n&quot;);&#10;        &#10;        prompt.append(&quot;```json\n&quot;);&#10;        prompt.append(&quot;{\n&quot;);&#10;        prompt.append(&quot;  \&quot;canUseECMO\&quot;: true,\n&quot;);&#10;        prompt.append(&quot;  \&quot;diagnosis\&quot;: \&quot;详细的诊断分析，包括患者当前病情严重程度、心肺功能状态、预后评估等，至少100字\&quot;,\n&quot;);&#10;        prompt.append(&quot;  \&quot;evidence\&quot;: \&quot;具体的诊断依据，包括符合的适应症条件、关键临床指标分析、相关指南标准等，至少80字\&quot;,\n&quot;);&#10;        prompt.append(&quot;  \&quot;confidence\&quot;: 0.85,\n&quot;);&#10;        prompt.append(&quot;  \&quot;supportReasons\&quot;: [\n&quot;);&#10;        prompt.append(&quot;    \&quot;支持使用ECMO的具体理由1 - 详细说明\&quot;,\n&quot;);&#10;        prompt.append(&quot;    \&quot;支持使用ECMO的具体理由2 - 详细说明\&quot;,\n&quot;);&#10;        prompt.append(&quot;    \&quot;支持使用ECMO的具体理由3 - 详细说明\&quot;\n&quot;);&#10;        prompt.append(&quot;  ],\n&quot;);&#10;        prompt.append(&quot;  \&quot;opposeReasons\&quot;: [\n&quot;);&#10;        prompt.append(&quot;    \&quot;需要注意的风险因素1 - 详细说明\&quot;,\n&quot;);&#10;        prompt.append(&quot;    \&quot;需要注意的风险因素2 - 详细说明\&quot;\n&quot;);&#10;        prompt.append(&quot;  ],\n&quot;);&#10;        prompt.append(&quot;  \&quot;finalRecommendation\&quot;: \&quot;推荐使用/谨慎评估/不推荐使用\&quot;,\n&quot;);&#10;        prompt.append(&quot;  \&quot;recommendations\&quot;: [\n&quot;);&#10;        prompt.append(&quot;    \&quot;具体临床建议1 - 详细的操作指导\&quot;,\n&quot;);&#10;        prompt.append(&quot;    \&quot;具体临床建议2 - 详细的监测要求\&quot;,\n&quot;);&#10;        prompt.append(&quot;    \&quot;具体临床建议3 - 详细的护理要点\&quot;\n&quot;);&#10;        prompt.append(&quot;  ],\n&quot;);&#10;        prompt.append(&quot;  \&quot;contraindications\&quot;: \&quot;详细的禁忌症分析，包括绝对禁忌症和相对禁忌症\&quot;,\n&quot;);&#10;        prompt.append(&quot;  \&quot;precautions\&quot;: \&quot;详细的注意事项和风险防控措施\&quot;\n&quot;);&#10;        prompt.append(&quot;}\n&quot;);&#10;        prompt.append(&quot;```\n&quot;);&#10;        &#10;        prompt.append(&quot;\n【重要提醒】\n&quot;);&#10;        prompt.append(&quot;1. 所有文字描述必须详细、专业、具有临床指导价值\n&quot;);&#10;        prompt.append(&quot;2. 支持理由和反对理由都必须基于具体的临床证据\n&quot;);&#10;        prompt.append(&quot;3. 建议措施要具体可操作，符合临床实际\n&quot;);&#10;        prompt.append(&quot;4. 必须严格按照JSON格式输出，不要添加其他解释文字\n&quot;);&#10;        &#10;        return prompt.toString();&#10;    }&#10;&#10;    /**&#10;     * 解析AI响应&#10;     */&#10;    private ECMOAssessment parseAIResponse(String aiResponse, String patientId, Double riskScore) {&#10;        ECMOAssessment assessment = new ECMOAssessment();&#10;        assessment.setPatientId(patientId);&#10;        assessment.setRiskScore(riskScore);&#10;        &#10;        try {&#10;            // 尝试解析JSON响应&#10;            String cleanResponse = aiResponse.trim();&#10;            if (cleanResponse.startsWith(&quot;```json&quot;)) {&#10;                cleanResponse = cleanResponse.substring(7);&#10;            }&#10;            if (cleanResponse.endsWith(&quot;```&quot;)) {&#10;                cleanResponse = cleanResponse.substring(0, cleanResponse.length() - 3);&#10;            }&#10;            &#10;            // 解析核心字段&#10;            assessment.setCanUseECMO(cleanResponse.contains(&quot;\&quot;canUseECMO\&quot;: true&quot;));&#10;            assessment.setDiagnosis(extractValue(cleanResponse, &quot;diagnosis&quot;));&#10;            assessment.setEvidence(extractValue(cleanResponse, &quot;evidence&quot;));&#10;            assessment.setConfidence(extractDoubleValue(cleanResponse, &quot;confidence&quot;, 0.8));&#10;            assessment.setFinalRecommendation(extractValue(cleanResponse, &quot;finalRecommendation&quot;));&#10;            assessment.setContraindications(extractValue(cleanResponse, &quot;contraindications&quot;));&#10;            assessment.setPrecautions(extractValue(cleanResponse, &quot;precautions&quot;));&#10;            &#10;            // 解析支持和反对理由&#10;            List&lt;String&gt; supportReasons = extractArrayValue(cleanResponse, &quot;supportReasons&quot;);&#10;            List&lt;String&gt; opposeReasons = extractArrayValue(cleanResponse, &quot;opposeReasons&quot;);&#10;            List&lt;String&gt; recommendations = extractArrayValue(cleanResponse, &quot;recommendations&quot;);&#10;            &#10;            assessment.setSupportReasons(supportReasons);&#10;            assessment.setOpposeReasons(opposeReasons);&#10;            assessment.setRecommendations(recommendations);&#10;            &#10;        } catch (Exception e) {&#10;            // 如果解析失败，使用基于风险评分的默认值&#10;            assessment = createDefaultAssessment(patientId, riskScore);&#10;        }&#10;        &#10;        // 如果关键字段为空，使用默认值&#10;        if (assessment.getDiagnosis() == null || assessment.getDiagnosis().equals(&quot;未提供&quot;) || assessment.getDiagnosis().equals(&quot;解析错误&quot;)) {&#10;            assessment = createDefaultAssessment(patientId, riskScore);&#10;        }&#10;        &#10;        return assessment;&#10;    }&#10;    &#10;    /**&#10;     * 创建基于风险评分的默认评估结果&#10;     */&#10;    private ECMOAssessment createDefaultAssessment(String patientId, Double riskScore) {&#10;        ECMOAssessment assessment = new ECMOAssessment();&#10;        assessment.setPatientId(patientId);&#10;        assessment.setRiskScore(riskScore);&#10;        &#10;        // 根据风险评分确定推荐结果&#10;        boolean recommend = riskScore &gt;= 60;&#10;        assessment.setCanUseECMO(recommend);&#10;        &#10;        // 设置诊断信息&#10;        if (riskScore &gt;= 80) {&#10;            assessment.setDiagnosis(&quot;患者临床指标符合ECMO适应症，系统综合评估后强烈推荐使用ECMO治疗&quot;);&#10;            assessment.setEvidence(&quot;基于患者年龄、病程、血气分析、心肺功能等多项指标综合评估，符合ELSO指南推荐标准&quot;);&#10;            assessment.setFinalRecommendation(&quot;推荐使用&quot;);&#10;            assessment.setConfidence(0.9);&#10;        } else if (riskScore &gt;= 60) {&#10;            assessment.setDiagnosis(&quot;患者部分指标符合ECMO适应症，但存在一定风险因素，建议谨慎评估&quot;);&#10;            assessment.setEvidence(&quot;患者病情复杂，需要重症医学科和ECMO团队共同评估决策&quot;);&#10;            assessment.setFinalRecommendation(&quot;谨慎评估&quot;);&#10;            assessment.setConfidence(0.75);&#10;        } else {&#10;            assessment.setDiagnosis(&quot;患者当前状态不建议使用ECMO，存在较多禁忌症或不利因素&quot;);&#10;            assessment.setEvidence(&quot;基于风险评估，患者可能从ECMO治疗中获益有限，建议优先其他治疗方案&quot;);&#10;            assessment.setFinalRecommendation(&quot;不推荐使用&quot;);&#10;            assessment.setConfidence(0.8);&#10;        }&#10;        &#10;        // 设置支持理由&#10;        List&lt;String&gt; supportReasons = new ArrayList&lt;&gt;();&#10;        if (riskScore &gt;= 80) {&#10;            supportReasons.add(&quot;患者年龄适宜，预期获益良好&quot;);&#10;            supportReasons.add(&quot;心肺功能指标符合ECMO适应症&quot;);&#10;            supportReasons.add(&quot;病情处于可逆阶段&quot;);&#10;            supportReasons.add(&quot;符合国际ELSO指南推荐标准&quot;);&#10;        } else if (riskScore &gt;= 60) {&#10;            supportReasons.add(&quot;部分临床指标支持ECMO使用&quot;);&#10;            supportReasons.add(&quot;患者病情可能从ECMO中获益&quot;);&#10;        } else {&#10;            supportReasons.add(&quot;患者生命体征相对稳定&quot;);&#10;            supportReasons.add(&quot;可考虑其他替代治疗方案&quot;);&#10;        }&#10;        assessment.setSupportReasons(supportReasons);&#10;        &#10;        // 设置反对理由&#10;        List&lt;String&gt; opposeReasons = new ArrayList&lt;&gt;();&#10;        if (riskScore &lt; 80) {&#10;            if (riskScore &lt; 40) {&#10;                opposeReasons.add(&quot;患者年龄或合并症增加治疗风险&quot;);&#10;                opposeReasons.add(&quot;病程较长，可逆性有限&quot;);&#10;                opposeReasons.add(&quot;ECMO相关并发症风险较高&quot;);&#10;            } else if (riskScore &lt; 60) {&#10;                opposeReasons.add(&quot;存在相对禁忌症需要权衡&quot;);&#10;                opposeReasons.add(&quot;需要评估ECMO获益风险比&quot;);&#10;            }&#10;        } else {&#10;            opposeReasons.add(&quot;需要密切监测ECMO相关并发症&quot;);&#10;            opposeReasons.add(&quot;需要经验丰富的ECMO团队&quot;);&#10;        }&#10;        assessment.setOpposeReasons(opposeReasons);&#10;        &#10;        // 设置详细建议&#10;        List&lt;String&gt; recommendations = new ArrayList&lt;&gt;();&#10;        if (riskScore &gt;= 80) {&#10;            recommendations.add(&quot;建议尽快启动ECMO治疗&quot;);&#10;            recommendations.add(&quot;完善术前评估和设备准备&quot;);&#10;            recommendations.add(&quot;组建专业ECMO团队&quot;);&#10;            recommendations.add(&quot;制定详细的脱机计划&quot;);&#10;        } else if (riskScore &gt;= 60) {&#10;            recommendations.add(&quot;建议多学科团队会诊讨论&quot;);&#10;            recommendations.add(&quot;完善相关检查评估&quot;);&#10;            recommendations.add(&quot;权衡获益风险比&quot;);&#10;            recommendations.add(&quot;考虑其他治疗选择&quot;);&#10;        } else {&#10;            recommendations.add(&quot;建议优先考虑其他治疗方案&quot;);&#10;            recommendations.add(&quot;密切观察病情变化&quot;);&#10;            recommendations.add(&quot;必要时重新评估ECMO适应症&quot;);&#10;        }&#10;        assessment.setRecommendations(recommendations);&#10;        &#10;        // 设置禁忌症和注意事项&#10;        if (riskScore &lt; 60) {&#10;            assessment.setContraindications(&quot;年龄过大、不可逆性疾病、严重多器官功能衰竭、活动性出血等&quot;);&#10;            assessment.setPrecautions(&quot;需要评估患者整体预后，考虑生活质量和医疗资源配置&quot;);&#10;        } else {&#10;            assessment.setContraindications(&quot;无绝对禁忌症，需注意相对禁忌症&quot;);&#10;            assessment.setPrecautions(&quot;严密监测凝血功能、感染指标、器官功能等&quot;);&#10;        }&#10;        &#10;        return assessment;&#10;    }&#10;    &#10;    /**&#10;     * 从文本中提取数组值&#10;     */&#10;    private List&lt;String&gt; extractArrayValue(String text, String key) {&#10;        List&lt;String&gt; result = new ArrayList&lt;&gt;();&#10;        try {&#10;            String pattern = &quot;\&quot;&quot; + key + &quot;\&quot;\\s*:\\s*\\[([^\\]]*?)\\]&quot;;&#10;            java.util.regex.Pattern p = java.util.regex.Pattern.compile(pattern, java.util.regex.Pattern.DOTALL);&#10;            java.util.regex.Matcher m = p.matcher(text);&#10;            &#10;            if (m.find()) {&#10;                String arrayContent = m.group(1);&#10;                // 简单解析数组内容&#10;                String[] items = arrayContent.split(&quot;\&quot;,\\s*\&quot;&quot;);&#10;                for (String item : items) {&#10;                    String cleanItem = item.replace(&quot;\&quot;&quot;, &quot;&quot;).trim();&#10;                    if (!cleanItem.isEmpty()) {&#10;                        result.add(cleanItem);&#10;                    }&#10;                }&#10;            }&#10;            &#10;            // 如果解析失败或结果为空，返回默认值&#10;            if (result.isEmpty()) {&#10;                if (key.equals(&quot;supportReasons&quot;)) {&#10;                    result.add(&quot;需要进一步评估临床指标&quot;);&#10;                    result.add(&quot;建议多学科团队讨论&quot;);&#10;                } else if (key.equals(&quot;opposeReasons&quot;)) {&#10;                    result.add(&quot;需要权衡获益风险比&quot;);&#10;                    result.add(&quot;评估患者整体状况&quot;);&#10;                } else if (key.equals(&quot;recommendations&quot;)) {&#10;                    result.add(&quot;完善相关检查&quot;);&#10;                    result.add(&quot;密切监测病情变化&quot;);&#10;                }&#10;            }&#10;            &#10;        } catch (Exception e) {&#10;            // 返回默认值&#10;            result.add(&quot;系统解析异常，请人工评估&quot;);&#10;        }&#10;        &#10;        return result;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.fox.alibabadeepseekdemo.service;&#10;&#10;import com.fox.alibabadeepseekdemo.entity.ECMOAssessment;&#10;import com.fox.alibabadeepseekdemo.entity.PatientParameters;&#10;import org.springframework.ai.chat.client.ChatClient;&#10;import org.springframework.stereotype.Service;&#10;&#10;import java.util.*;&#10;&#10;/**&#10; * ECMO诊疗专家服务&#10; * 实现4个核心输出：ECMO诊断结果、诊断原因、诊断依据、置信度&#10; * 以及动态风险评分和决策辅助卡功能&#10; */&#10;@Service&#10;public class ECMOExpertService {&#10;&#10;    private final ChatClient chatClient;&#10;&#10;    public ECMOExpertService(ChatClient.Builder chatClientBuilder) {&#10;        this.chatClient = chatClientBuilder.build();&#10;    }&#10;&#10;    /**&#10;     * 评估患者是否适合使用ECMO&#10;     */&#10;    public ECMOAssessment assessPatientForECMO(PatientParameters patient) {&#10;        try {&#10;            // 1. 计算风险评分&#10;            Double riskScore = calculateRiskScore(patient);&#10;&#10;            // 2. 构建专业的ECMO评估提示词&#10;            String prompt = buildECMOAssessmentPrompt(patient, riskScore);&#10;&#10;            // 3. 调用AI进行专业评估&#10;            String aiResponse = chatClient.prompt()&#10;                    .user(prompt)&#10;                    .call()&#10;                    .content();&#10;&#10;            // 4. 解析AI响应并构建评估结果&#10;            ECMOAssessment assessment = parseAIResponse(aiResponse, patient.getPatientId(), riskScore);&#10;&#10;            // 5. 添加动态风险评分和决策辅助信息&#10;            enhanceWithRiskAssessment(assessment, patient, riskScore);&#10;&#10;            return assessment;&#10;&#10;        } catch (Exception e) {&#10;            // 创建错误响应&#10;            return createErrorAssessment(patient.getPatientId(), e.getMessage());&#10;        }&#10;    }&#10;&#10;    /**&#10;     * 计算ECMO实施推荐指数 (0-100)&#10;     */&#10;    private Double calculateRiskScore(PatientParameters patient) {&#10;        double score = 100.0; // 基础分数&#10;        List&lt;String&gt; riskFactors = new ArrayList&lt;&gt;();&#10;&#10;        // 年龄评估 (最大扣分20分)&#10;        if (patient.getAge() != null) {&#10;            if (patient.getAge() &gt; 70) {&#10;                score -= 20;&#10;                riskFactors.add(&quot;年龄&gt;70岁&quot;);&#10;            } else if (patient.getAge() &gt; 65) {&#10;                score -= 10;&#10;                riskFactors.add(&quot;年龄&gt;65岁&quot;);&#10;            }&#10;        }&#10;&#10;        // 疾病持续时间评估 (最大扣分15分)&#10;        if (patient.getIllnessDuration() != null) {&#10;            if (patient.getIllnessDuration() &gt; 7) {&#10;                score -= 15;&#10;                riskFactors.add(&quot;心肺衰竭超7天&quot;);&#10;            } else if (patient.getIllnessDuration() &gt; 5) {&#10;                score -= 8;&#10;                riskFactors.add(&quot;心肺衰竭超5天&quot;);&#10;            }&#10;        }&#10;&#10;        // 血气分析评估 (最大扣分25分)&#10;        if (patient.getpO2FiO2Ratio() != null) {&#10;            if (patient.getpO2FiO2Ratio() &lt; 80) {&#10;                score -= 25;&#10;                riskFactors.add(&quot;P/F比值&lt;80&quot;);&#10;            } else if (patient.getpO2FiO2Ratio() &lt; 100) {&#10;                score -= 15;&#10;                riskFactors.add(&quot;P/F比值&lt;100&quot;);&#10;            }&#10;        }&#10;&#10;        // 心脏功能评估 (最大扣分20分)&#10;        if (patient.getEjectionFraction() != null) {&#10;            if (patient.getEjectionFraction() &lt; 20) {&#10;                score -= 20;&#10;                riskFactors.add(&quot;射血分数&lt;20%&quot;);&#10;            } else if (patient.getEjectionFraction() &lt; 30) {&#10;                score -= 10;&#10;                riskFactors.add(&quot;射血分数&lt;30%&quot;);&#10;            }&#10;        }&#10;&#10;        // 乳酸水平评估 (最大扣分15分)&#10;        if (patient.getLactate() != null) {&#10;            if (patient.getLactate() &gt; 10) {&#10;                score -= 15;&#10;                riskFactors.add(&quot;乳酸&gt;10mmol/L&quot;);&#10;            } else if (patient.getLactate() &gt; 5) {&#10;                score -= 8;&#10;                riskFactors.add(&quot;乳酸&gt;5mmol/L&quot;);&#10;            }&#10;        }&#10;&#10;        // 肾功能评估 (最大扣分10分)&#10;        if (patient.getCreatinine() != null) {&#10;            if (patient.getCreatinine() &gt; 300) {&#10;                score -= 10;&#10;                riskFactors.add(&quot;肌酐&gt;300μmol/L&quot;);&#10;            } else if (patient.getCreatinine() &gt; 200) {&#10;                score -= 5;&#10;                riskFactors.add(&quot;肌酐&gt;200μmol/L&quot;);&#10;            }&#10;        }&#10;&#10;        return Math.max(0, Math.min(100, score));&#10;    }&#10;&#10;    /**&#10;     * 构建ECMO评估提示词&#10;     */&#10;    private String buildECMOAssessmentPrompt(PatientParameters patient, Double riskScore) {&#10;        StringBuilder prompt = new StringBuilder();&#10;        &#10;        prompt.append(&quot;作为ECMO领域的国际顶级专家，请基于ELSO指南、中国ECMO专家共识等权威标准，对以下患者进行全面的ECMO适应症评估。\n\n&quot;);&#10;        &#10;        prompt.append(&quot;【患者临床资料】\n&quot;);&#10;        prompt.append(&quot;患者ID: &quot;).append(patient.getPatientId()).append(&quot;\n&quot;);&#10;        prompt.append(&quot;年龄: &quot;).append(patient.getAge() != null ? patient.getAge() + &quot;岁&quot; : &quot;未提供&quot;).append(&quot;\n&quot;);&#10;        prompt.append(&quot;性别: &quot;).append(patient.getGender() != null ? patient.getGender() : &quot;未提供&quot;).append(&quot;\n&quot;);&#10;        &#10;        prompt.append(&quot;\n【生命体征监测】\n&quot;);&#10;        if (patient.getHeartRate() != null) prompt.append(&quot;心率: &quot;).append(patient.getHeartRate()).append(&quot;次/分\n&quot;);&#10;        if (patient.getSystolicBP() != null &amp;&amp; patient.getDiastolicBP() != null) {&#10;            prompt.append(&quot;血压: &quot;).append(patient.getSystolicBP()).append(&quot;/&quot;).append(patient.getDiastolicBP()).append(&quot;mmHg\n&quot;);&#10;        }&#10;        if (patient.getOxygenSaturation() != null) prompt.append(&quot;血氧饱和度: &quot;).append(patient.getOxygenSaturation()).append(&quot;%\n&quot;);&#10;        if (patient.getRespiratoryRate() != null) prompt.append(&quot;呼吸频率: &quot;).append(patient.getRespiratoryRate()).append(&quot;次/分\n&quot;);&#10;        &#10;        prompt.append(&quot;\n【动脉血气分析】\n&quot;);&#10;        if (patient.getpH() != null) prompt.append(&quot;pH值: &quot;).append(patient.getpH()).append(&quot;\n&quot;);&#10;        if (patient.getPaO2() != null) prompt.append(&quot;PaO2: &quot;).append(patient.getPaO2()).append(&quot;mmHg\n&quot;);&#10;        if (patient.getPaCO2() != null) prompt.append(&quot;PaCO2: &quot;).append(patient.getPaCO2()).append(&quot;mmHg\n&quot;);&#10;        if (patient.getpO2FiO2Ratio() != null) prompt.append(&quot;P/F比值(氧合指数): &quot;).append(patient.getpO2FiO2Ratio()).append(&quot;\n&quot;);&#10;        if (patient.getLactate() != null) prompt.append(&quot;血乳酸: &quot;).append(patient.getLactate()).append(&quot;mmol/L\n&quot;);&#10;        if (patient.getBicarbonate() != null) prompt.append(&quot;碳酸氢根: &quot;).append(patient.getBicarbonate()).append(&quot;mmol/L\n&quot;);&#10;        &#10;        prompt.append(&quot;\n【心肺功能评估】\n&quot;);&#10;        if (patient.getEjectionFraction() != null) prompt.append(&quot;左室射血分数(LVEF): &quot;).append(patient.getEjectionFraction()).append(&quot;%\n&quot;);&#10;        if (patient.getCardiacIndex() != null) prompt.append(&quot;心脏指数: &quot;).append(patient.getCardiacIndex()).append(&quot;\n&quot;);&#10;        &#10;        prompt.append(&quot;\n【疾病诊断及病程】\n&quot;);&#10;        if (patient.getPrimaryDiagnosis() != null) prompt.append(&quot;主要诊断: &quot;).append(patient.getPrimaryDiagnosis()).append(&quot;\n&quot;);&#10;        if (patient.getSecondaryDiagnosis() != null) prompt.append(&quot;次要诊断: &quot;).append(patient.getSecondaryDiagnosis()).append(&quot;\n&quot;);&#10;        if (patient.getIllnessDuration() != null) prompt.append(&quot;病程时间: &quot;).append(patient.getIllnessDuration()).append(&quot;天\n&quot;);&#10;        if (patient.getComorbidities() != null) prompt.append(&quot;合并疾病: &quot;).append(patient.getComorbidities()).append(&quot;\n&quot;);&#10;        if (patient.getCurrentTreatment() != null) prompt.append(&quot;当前治疗: &quot;).append(patient.getCurrentTreatment()).append(&quot;\n&quot;);&#10;        &#10;        prompt.append(&quot;\n【实验室检查】\n&quot;);&#10;        if (patient.getHemoglobin() != null) prompt.append(&quot;血红蛋白: &quot;).append(patient.getHemoglobin()).append(&quot;g/L\n&quot;);&#10;        if (patient.getPlateletCount() != null) prompt.append(&quot;血小板: &quot;).append(patient.getPlateletCount()).append(&quot;×10⁹/L\n&quot;);&#10;        if (patient.getCreatinine() != null) prompt.append(&quot;肌酐: &quot;).append(patient.getCreatinine()).append(&quot;μmol/L\n&quot;);&#10;        if (patient.getBilirubin() != null) prompt.append(&quot;胆红素: &quot;).append(patient.getBilirubin()).append(&quot;μmol/L\n&quot;);&#10;        &#10;        prompt.append(&quot;\n【系统风险评分】\n&quot;);&#10;        prompt.append(&quot;ECMO实施推荐指数: &quot;).append(String.format(&quot;%.1f&quot;, riskScore)).append(&quot;/100分\n&quot;);&#10;        if (riskScore &gt;= 80) {&#10;            prompt.append(&quot;风险等级: 高推荐 (绿色区间)\n&quot;);&#10;        } else if (riskScore &gt;= 60) {&#10;            prompt.append(&quot;风险等级: 谨慎推荐 (黄色区间)\n&quot;);&#10;        } else {&#10;            prompt.append(&quot;风险等级: 低推荐 (红色区间)\n&quot;);&#10;        }&#10;        &#10;        prompt.append(&quot;\n【评估任务要求】\n&quot;);&#10;        prompt.append(&quot;请作为ECMO专家，结合患者的临床资料和系统评分，提供专业的ECMO适应症评估。\n&quot;);&#10;        prompt.append(&quot;必须严格按照以下JSON格式返回详细的评估结果，不得省略任何字段：\n\n&quot;);&#10;        &#10;        prompt.append(&quot;```json\n&quot;);&#10;        prompt.append(&quot;{\n&quot;);&#10;        prompt.append(&quot;  \&quot;canUseECMO\&quot;: true,\n&quot;);&#10;        prompt.append(&quot;  \&quot;diagnosis\&quot;: \&quot;详细的诊断分析，包括患者当前病情严重程度、心肺功能状态、预后评估等，至少100字\&quot;,\n&quot;);&#10;        prompt.append(&quot;  \&quot;evidence\&quot;: \&quot;具体的诊断依据，包括符合的适应症条件、关键临床指标分析、相关指南标准等，至少80字\&quot;,\n&quot;);&#10;        prompt.append(&quot;  \&quot;confidence\&quot;: 0.85,\n&quot;);&#10;        prompt.append(&quot;  \&quot;supportReasons\&quot;: [\n&quot;);&#10;        prompt.append(&quot;    \&quot;支持使用ECMO的具体理由1 - 详细说明\&quot;,\n&quot;);&#10;        prompt.append(&quot;    \&quot;支持使用ECMO的具体理由2 - 详细说明\&quot;,\n&quot;);&#10;        prompt.append(&quot;    \&quot;支持使用ECMO的具体理由3 - 详细说明\&quot;\n&quot;);&#10;        prompt.append(&quot;  ],\n&quot;);&#10;        prompt.append(&quot;  \&quot;opposeReasons\&quot;: [\n&quot;);&#10;        prompt.append(&quot;    \&quot;需要注意的风险因素1 - 详细说明\&quot;,\n&quot;);&#10;        prompt.append(&quot;    \&quot;需要注意的风险因素2 - 详细说明\&quot;\n&quot;);&#10;        prompt.append(&quot;  ],\n&quot;);&#10;        prompt.append(&quot;  \&quot;finalRecommendation\&quot;: \&quot;推荐使用/谨慎评估/不推荐使用\&quot;,\n&quot;);&#10;        prompt.append(&quot;  \&quot;recommendations\&quot;: [\n&quot;);&#10;        prompt.append(&quot;    \&quot;具体临床建议1 - 详细的操作指导\&quot;,\n&quot;);&#10;        prompt.append(&quot;    \&quot;具体临床建议2 - 详细的监测要求\&quot;,\n&quot;);&#10;        prompt.append(&quot;    \&quot;具体临床建议3 - 详细的护理要点\&quot;\n&quot;);&#10;        prompt.append(&quot;  ],\n&quot;);&#10;        prompt.append(&quot;  \&quot;contraindications\&quot;: \&quot;详细的禁忌症分析，包括绝对禁忌症和相对禁忌症\&quot;,\n&quot;);&#10;        prompt.append(&quot;  \&quot;precautions\&quot;: \&quot;详细的注意事项和风险防控措施\&quot;\n&quot;);&#10;        prompt.append(&quot;}\n&quot;);&#10;        prompt.append(&quot;```\n&quot;);&#10;        &#10;        prompt.append(&quot;\n【重要提醒】\n&quot;);&#10;        prompt.append(&quot;1. 所有文字描述必须详细、专业、具有临床指导价值\n&quot;);&#10;        prompt.append(&quot;2. 支持理由和反对理由都必须基于具体的临床证据\n&quot;);&#10;        prompt.append(&quot;3. 建议措施要具体可操作，符合临床实际\n&quot;);&#10;        prompt.append(&quot;4. 必须严格按照JSON格式输出，不要添加其他解释文字\n&quot;);&#10;        &#10;        return prompt.toString();&#10;    }&#10;&#10;    /**&#10;     * 解析AI响应&#10;     */&#10;    private ECMOAssessment parseAIResponse(String aiResponse, String patientId, Double riskScore) {&#10;        ECMOAssessment assessment = new ECMOAssessment();&#10;        assessment.setPatientId(patientId);&#10;        assessment.setRiskScore(riskScore);&#10;        &#10;        try {&#10;            // 尝试解析JSON响应&#10;            String cleanResponse = aiResponse.trim();&#10;            if (cleanResponse.startsWith(&quot;```json&quot;)) {&#10;                cleanResponse = cleanResponse.substring(7);&#10;            }&#10;            if (cleanResponse.endsWith(&quot;```&quot;)) {&#10;                cleanResponse = cleanResponse.substring(0, cleanResponse.length() - 3);&#10;            }&#10;            &#10;            // 解析核心字段&#10;            assessment.setCanUseECMO(cleanResponse.contains(&quot;\&quot;canUseECMO\&quot;: true&quot;));&#10;            assessment.setDiagnosis(extractValue(cleanResponse, &quot;diagnosis&quot;));&#10;            assessment.setEvidence(extractValue(cleanResponse, &quot;evidence&quot;));&#10;            assessment.setConfidence(extractDoubleValue(cleanResponse, &quot;confidence&quot;, 0.8));&#10;            assessment.setFinalRecommendation(extractValue(cleanResponse, &quot;finalRecommendation&quot;));&#10;            assessment.setContraindications(extractValue(cleanResponse, &quot;contraindications&quot;));&#10;            assessment.setPrecautions(extractValue(cleanResponse, &quot;precautions&quot;));&#10;            &#10;            // 解析支持和反对理由&#10;            List&lt;String&gt; supportReasons = extractArrayValue(cleanResponse, &quot;supportReasons&quot;);&#10;            List&lt;String&gt; opposeReasons = extractArrayValue(cleanResponse, &quot;opposeReasons&quot;);&#10;            List&lt;String&gt; recommendations = extractArrayValue(cleanResponse, &quot;recommendations&quot;);&#10;            &#10;            assessment.setSupportReasons(supportReasons);&#10;            assessment.setOpposeReasons(opposeReasons);&#10;            assessment.setRecommendations(recommendations);&#10;            &#10;        } catch (Exception e) {&#10;            // 如果解析失败，使用基于风险评分的默认值&#10;            assessment = createDefaultAssessment(patientId, riskScore);&#10;        }&#10;        &#10;        // 如果关键字段为空，使用默认值&#10;        if (assessment.getDiagnosis() == null || assessment.getDiagnosis().equals(&quot;未提供&quot;) || assessment.getDiagnosis().equals(&quot;解析错误&quot;)) {&#10;            assessment = createDefaultAssessment(patientId, riskScore);&#10;        }&#10;        &#10;        return assessment;&#10;    }&#10;    &#10;    /**&#10;     * 创建基于风险评分的默认评估结果&#10;     */&#10;    private ECMOAssessment createDefaultAssessment(String patientId, Double riskScore) {&#10;        ECMOAssessment assessment = new ECMOAssessment();&#10;        assessment.setPatientId(patientId);&#10;        assessment.setRiskScore(riskScore);&#10;        &#10;        // 根据风险评分确定推荐结果&#10;        boolean recommend = riskScore &gt;= 60;&#10;        assessment.setCanUseECMO(recommend);&#10;        &#10;        // 设置诊断信息&#10;        if (riskScore &gt;= 80) {&#10;            assessment.setDiagnosis(&quot;患者临床指标符合ECMO适应症，系统综合评估后强烈推荐使用ECMO治疗&quot;);&#10;            assessment.setEvidence(&quot;基于患者年龄、病程、血气分析、心肺功能等多项指标综合评估，符合ELSO指南推荐标准&quot;);&#10;            assessment.setFinalRecommendation(&quot;推荐使用&quot;);&#10;            assessment.setConfidence(0.9);&#10;        } else if (riskScore &gt;= 60) {&#10;            assessment.setDiagnosis(&quot;患者部分指标符合ECMO适应症，但存在一定风险因素，建议谨慎评估&quot;);&#10;            assessment.setEvidence(&quot;患者病情复杂，需要重症医学科和ECMO团队共同评估决策&quot;);&#10;            assessment.setFinalRecommendation(&quot;谨慎评估&quot;);&#10;            assessment.setConfidence(0.75);&#10;        } else {&#10;            assessment.setDiagnosis(&quot;患者当前状态不建议使用ECMO，存在较多禁忌症或不利因素&quot;);&#10;            assessment.setEvidence(&quot;基于风险评估，患者可能从ECMO治疗中获益有限，建议优先其他治疗方案&quot;);&#10;            assessment.setFinalRecommendation(&quot;不推荐使用&quot;);&#10;            assessment.setConfidence(0.8);&#10;        }&#10;        &#10;        // 设置支持理由&#10;        List&lt;String&gt; supportReasons = new ArrayList&lt;&gt;();&#10;        if (riskScore &gt;= 80) {&#10;            supportReasons.add(&quot;患者年龄适宜，预期获益良好&quot;);&#10;            supportReasons.add(&quot;心肺功能指标符合ECMO适应症&quot;);&#10;            supportReasons.add(&quot;病情处于可逆阶段&quot;);&#10;            supportReasons.add(&quot;符合国际ELSO指南推荐标准&quot;);&#10;        } else if (riskScore &gt;= 60) {&#10;            supportReasons.add(&quot;部分临床指标支持ECMO使用&quot;);&#10;            supportReasons.add(&quot;患者病情可能从ECMO中获益&quot;);&#10;        } else {&#10;            supportReasons.add(&quot;患者生命体征相对稳定&quot;);&#10;            supportReasons.add(&quot;可考虑其他替代治疗方案&quot;);&#10;        }&#10;        assessment.setSupportReasons(supportReasons);&#10;        &#10;        // 设置反对理由&#10;        List&lt;String&gt; opposeReasons = new ArrayList&lt;&gt;();&#10;        if (riskScore &lt; 80) {&#10;            if (riskScore &lt; 40) {&#10;                opposeReasons.add(&quot;患者年龄或合并症增加治疗风险&quot;);&#10;                opposeReasons.add(&quot;病程较长，可逆性有限&quot;);&#10;                opposeReasons.add(&quot;ECMO相关并发症风险较高&quot;);&#10;            } else if (riskScore &lt; 60) {&#10;                opposeReasons.add(&quot;存在相对禁忌症需要权衡&quot;);&#10;                opposeReasons.add(&quot;需要评估ECMO获益风险比&quot;);&#10;            }&#10;        } else {&#10;            opposeReasons.add(&quot;需要密切监测ECMO相关并发症&quot;);&#10;            opposeReasons.add(&quot;需要经验丰富的ECMO团队&quot;);&#10;        }&#10;        assessment.setOpposeReasons(opposeReasons);&#10;        &#10;        // 设置详细建议&#10;        List&lt;String&gt; recommendations = new ArrayList&lt;&gt;();&#10;        if (riskScore &gt;= 80) {&#10;            recommendations.add(&quot;建议尽快启动ECMO治疗&quot;);&#10;            recommendations.add(&quot;完善术前评估和设备准备&quot;);&#10;            recommendations.add(&quot;组建专业ECMO团队&quot;);&#10;            recommendations.add(&quot;制定详细的脱机计划&quot;);&#10;        } else if (riskScore &gt;= 60) {&#10;            recommendations.add(&quot;建议多学科团队会诊讨论&quot;);&#10;            recommendations.add(&quot;完善相关检查评估&quot;);&#10;            recommendations.add(&quot;权衡获益风险比&quot;);&#10;            recommendations.add(&quot;考虑其他治疗选择&quot;);&#10;        } else {&#10;            recommendations.add(&quot;建议优先考虑其他治疗方案&quot;);&#10;            recommendations.add(&quot;密切观察病情变化&quot;);&#10;            recommendations.add(&quot;必要时重新评估ECMO适应症&quot;);&#10;        }&#10;        assessment.setRecommendations(recommendations);&#10;        &#10;        // 设置禁忌症和注意事项&#10;        if (riskScore &lt; 60) {&#10;            assessment.setContraindications(&quot;年龄过大、不可逆性疾病、严重多器官功能衰竭、活动性出血等&quot;);&#10;            assessment.setPrecautions(&quot;需要评估患者整体预后，考虑生活质量和医疗资源配置&quot;);&#10;        } else {&#10;            assessment.setContraindications(&quot;无绝对禁忌症，需注意相对禁忌症&quot;);&#10;            assessment.setPrecautions(&quot;严密监测凝血功能、感染指标、器官功能等&quot;);&#10;        }&#10;        &#10;        return assessment;&#10;    }&#10;    &#10;    /**&#10;     * 增强风险评估信息&#10;     */&#10;    private void enhanceWithRiskAssessment(ECMOAssessment assessment, PatientParameters patient, Double riskScore) {&#10;        // 设置风险等级和颜色&#10;        if (riskScore &gt;= 80) {&#10;            assessment.setRiskLevel(&quot;高推荐&quot;);&#10;            assessment.setRiskColor(&quot;green&quot;);&#10;        } else if (riskScore &gt;= 60) {&#10;            assessment.setRiskLevel(&quot;谨慎推荐&quot;);&#10;            assessment.setRiskColor(&quot;yellow&quot;);&#10;        } else {&#10;            assessment.setRiskLevel(&quot;不推荐&quot;);&#10;            assessment.setRiskColor(&quot;red&quot;);&#10;        }&#10;        &#10;        // 计算关键风险因素&#10;        List&lt;String&gt; keyRiskFactors = new ArrayList&lt;&gt;();&#10;        if (patient.getAge() != null &amp;&amp; patient.getAge() &gt; 70) {&#10;            keyRiskFactors.add(&quot;年龄&gt;70岁(-20分)&quot;);&#10;        }&#10;        if (patient.getIllnessDuration() != null &amp;&amp; patient.getIllnessDuration() &gt; 7) {&#10;            keyRiskFactors.add(&quot;心肺衰竭超7天(-15分)&quot;);&#10;        }&#10;        if (patient.getpO2FiO2Ratio() != null &amp;&amp; patient.getpO2FiO2Ratio() &lt; 80) {&#10;            keyRiskFactors.add(&quot;P/F比值&lt;80(-25分)&quot;);&#10;        }&#10;        if (patient.getEjectionFraction() != null &amp;&amp; patient.getEjectionFraction() &lt; 20) {&#10;            keyRiskFactors.add(&quot;射血分数&lt;20%(-20分)&quot;);&#10;        }&#10;        if (patient.getLactate() != null &amp;&amp; patient.getLactate() &gt; 10) {&#10;            keyRiskFactors.add(&quot;乳酸&gt;10mmol/L(-15分)&quot;);&#10;        }&#10;        if (patient.getCreatinine() != null &amp;&amp; patient.getCreatinine() &gt; 300) {&#10;            keyRiskFactors.add(&quot;肌酐&gt;300μmol/L(-10分)&quot;);&#10;        }&#10;        &#10;        if (keyRiskFactors.isEmpty()) {&#10;            keyRiskFactors.add(&quot;暂无显著风险因素&quot;);&#10;        }&#10;        assessment.setKeyRiskFactors(keyRiskFactors);&#10;        &#10;        // 设置指南参考&#10;        Map&lt;String, String&gt; guidelines = new HashMap&lt;&gt;();&#10;        guidelines.put(&quot;ELSO指南&quot;, &quot;体外生命支持组织(ELSO)指南2017版 - 成人心肺ECMO适应症标准&quot;);&#10;        guidelines.put(&quot;中国指南&quot;, &quot;中国体外膜肺氧合临床应用专家共识(2018版) - 适应症与禁忌症&quot;);&#10;        guidelines.put(&quot;欧洲指南&quot;, &quot;欧洲重症医学会ECMO指南 - 重症心肺衰竭患者管理&quot;);&#10;        guidelines.put(&quot;美国指南&quot;, &quot;美国重症医学会ECMO临床实践指南 - 患者选择标准&quot;);&#10;        assessment.setGuidelineReferences(guidelines);&#10;        &#10;        // 设置详细评分&#10;        Map&lt;String, Object&gt; detailedScores = new HashMap&lt;&gt;();&#10;        detailedScores.put(&quot;总体推荐指数&quot;, String.format(&quot;%.1f/100&quot;, riskScore));&#10;        &#10;        // 年龄评分&#10;        int ageScore = 100;&#10;        if (patient.getAge() != null) {&#10;            if (patient.getAge() &gt; 70) ageScore = 60;&#10;            else if (patient.getAge() &gt; 65) ageScore = 80;&#10;            else if (patient.getAge() &lt; 18) ageScore = 70;&#10;        }&#10;        detailedScores.put(&quot;年龄适宜度&quot;, ageScore + &quot;/100&quot;);&#10;        &#10;        // 心肺功能评分&#10;        int cardiopulmonaryScore = 50;&#10;        if (patient.getpO2FiO2Ratio() != null) {&#10;            if (patient.getpO2FiO2Ratio() &gt;= 200) cardiopulmonaryScore = 90;&#10;            else if (patient.getpO2FiO2Ratio() &gt;= 150) cardiopulmonaryScore = 80;&#10;            else if (patient.getpO2FiO2Ratio() &gt;= 100) cardiopulmonaryScore = 70;&#10;            else if (patient.getpO2FiO2Ratio() &gt;= 80) cardiopulmonaryScore = 60;&#10;            else cardiopulmonaryScore = 30;&#10;        }&#10;        detailedScores.put(&quot;心肺功能&quot;, cardiopulmonaryScore + &quot;/100&quot;);&#10;        &#10;        // 病程评分&#10;        int durationScore = 90;&#10;        if (patient.getIllnessDuration() != null) {&#10;            if (patient.getIllnessDuration() &gt; 10) durationScore = 40;&#10;            else if (patient.getIllnessDuration() &gt; 7) durationScore = 60;&#10;            else if (patient.getIllnessDuration() &gt; 5) durationScore = 80;&#10;        }&#10;        detailedScores.put(&quot;病程时效性&quot;, durationScore + &quot;/100&quot;);&#10;        &#10;        assessment.setDetailedScores(detailedScores);&#10;    }&#10;    &#10;    /**&#10;     * 创建错误评估结果&#10;     */&#10;    private ECMOAssessment createErrorAssessment(String patientId, String errorMessage) {&#10;        ECMOAssessment errorAssessment = new ECMOAssessment();&#10;        errorAssessment.setPatientId(patientId);&#10;        errorAssessment.setCanUseECMO(false);&#10;        errorAssessment.setDiagnosis(&quot;系统评估异常，无法完成ECMO适应症分析&quot;);&#10;        errorAssessment.setEvidence(&quot;系统技术故障: &quot; + errorMessage + &quot;。建议人工评估或重新提交患者数据&quot;);&#10;        errorAssessment.setConfidence(0.0);&#10;        errorAssessment.setRiskScore(0.0);&#10;        errorAssessment.setRiskLevel(&quot;系统异常&quot;);&#10;        errorAssessment.setRiskColor(&quot;gray&quot;);&#10;        errorAssessment.setFinalRecommendation(&quot;请重新评估或咨询ECMO专科医生&quot;);&#10;        &#10;        List&lt;String&gt; errorRecommendations = Arrays.asList(&#10;            &quot;检查并完善患者临床数据&quot;,&#10;            &quot;重新提交评估请求&quot;,&#10;            &quot;联系ECMO专科医生进行人工评估&quot;,&#10;            &quot;确认网络连接和系统状态&quot;&#10;        );&#10;        errorAssessment.setRecommendations(errorRecommendations);&#10;        &#10;        errorAssessment.setSupportReasons(Arrays.asList(&quot;建议人工评估患者情况&quot;));&#10;        errorAssessment.setOpposeReasons(Arrays.asList(&quot;系统无法提供可靠评估&quot;));&#10;        errorAssessment.setContraindications(&quot;系统故障，无法评估禁忌症&quot;);&#10;        errorAssessment.setPrecautions(&quot;请立即联系专业医疗团队进行评估&quot;);&#10;        &#10;        return errorAssessment;&#10;    }&#10;    &#10;    /**&#10;     * 从文本中提取值&#10;     */&#10;    private String extractValue(String text, String key) {&#10;        try {&#10;            String pattern = &quot;\&quot;&quot; + key + &quot;\&quot;\\s*:\\s*\&quot;([^\&quot;]*?)\&quot;&quot;;&#10;            java.util.regex.Pattern p = java.util.regex.Pattern.compile(pattern, java.util.regex.Pattern.DOTALL);&#10;            java.util.regex.Matcher m = p.matcher(text);&#10;            if (m.find()) {&#10;                String value = m.group(1).trim();&#10;                return value.isEmpty() ? &quot;数据解析异常&quot; : value;&#10;            }&#10;            return &quot;未提供相关信息&quot;;&#10;        } catch (Exception e) {&#10;            return &quot;解析错误，请检查数据格式&quot;;&#10;        }&#10;    }&#10;    &#10;    /**&#10;     * 从文本中提取数值&#10;     */&#10;    private Double extractDoubleValue(String text, String key, Double defaultValue) {&#10;        try {&#10;            String pattern = &quot;\&quot;&quot; + key + &quot;\&quot;\\s*:\\s*([0-9.]+)&quot;;&#10;            java.util.regex.Pattern p = java.util.regex.Pattern.compile(pattern);&#10;            java.util.regex.Matcher m = p.matcher(text);&#10;            if (m.find()) {&#10;                return Double.parseDouble(m.group(1));&#10;            }&#10;            return defaultValue;&#10;        } catch (Exception e) {&#10;            return defaultValue;&#10;        }&#10;    }&#10;    &#10;    /**&#10;     * 从文本中提取数组值&#10;     */&#10;    private List&lt;String&gt; extractArrayValue(String text, String key) {&#10;        List&lt;String&gt; result = new ArrayList&lt;&gt;();&#10;        try {&#10;            String pattern = &quot;\&quot;&quot; + key + &quot;\&quot;\\s*:\\s*\\[([^\\]]*?)\\]&quot;;&#10;            java.util.regex.Pattern p = java.util.regex.Pattern.compile(pattern, java.util.regex.Pattern.DOTALL);&#10;            java.util.regex.Matcher m = p.matcher(text);&#10;            &#10;            if (m.find()) {&#10;                String arrayContent = m.group(1);&#10;                // 简单解析数组内容&#10;                String[] items = arrayContent.split(&quot;\&quot;,\\s*\&quot;&quot;);&#10;                for (String item : items) {&#10;                    String cleanItem = item.replace(&quot;\&quot;&quot;, &quot;&quot;).trim();&#10;                    if (!cleanItem.isEmpty()) {&#10;                        result.add(cleanItem);&#10;                    }&#10;                }&#10;            }&#10;            &#10;            // 如果解析失败或结果为空，返回默认值&#10;            if (result.isEmpty()) {&#10;                if (key.equals(&quot;supportReasons&quot;)) {&#10;                    result.add(&quot;需要进一步评估临床指标&quot;);&#10;                    result.add(&quot;建议多学科团队讨论&quot;);&#10;                } else if (key.equals(&quot;opposeReasons&quot;)) {&#10;                    result.add(&quot;需要权衡获益风险比&quot;);&#10;                    result.add(&quot;评估患者整体状况&quot;);&#10;                } else if (key.equals(&quot;recommendations&quot;)) {&#10;                    result.add(&quot;完善相关检查&quot;);&#10;                    result.add(&quot;密切监测病情变化&quot;);&#10;                }&#10;            }&#10;            &#10;        } catch (Exception e) {&#10;            // 返回默认值&#10;            result.add(&quot;系统解析异常，请人工评估&quot;);&#10;        }&#10;        &#10;        return result;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/alibaba-deepseek-demo/src/main/resources/static/ecmo-expert.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/alibaba-deepseek-demo/src/main/resources/static/ecmo-expert.css" />
              <option name="originalContent" value="/* ECMO诊疗专家系统样式 */&#10;* {&#10;    margin: 0;&#10;    padding: 0;&#10;    box-sizing: border-box;&#10;}&#10;&#10;body {&#10;    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;&#10;    background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);&#10;    min-height: 100vh;&#10;    color: #333;&#10;}&#10;&#10;.container {&#10;    display: flex;&#10;    flex-direction: column;&#10;    min-height: 100vh;&#10;}&#10;&#10;/* 头部样式 */&#10;.header {&#10;    background: rgba(255, 255, 255, 0.95);&#10;    backdrop-filter: blur(10px);&#10;    border-bottom: 1px solid rgba(255, 255, 255, 0.2);&#10;    padding: 1rem 2rem;&#10;    box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);&#10;}&#10;&#10;.header-content {&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;    max-width: 1400px;&#10;    margin: 0 auto;&#10;}&#10;&#10;.header h1 {&#10;    font-size: 1.8rem;&#10;    font-weight: 700;&#10;    color: #2c5aa0;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.user-info {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 1rem;&#10;}&#10;&#10;.user-info span {&#10;    color: #666;&#10;    font-weight: 500;&#10;}&#10;&#10;.btn-logout {&#10;    padding: 0.5rem 1rem;&#10;    background: #ff4757;&#10;    color: white;&#10;    border: none;&#10;    border-radius: 8px;&#10;    cursor: pointer;&#10;    font-weight: 500;&#10;    transition: all 0.3s ease;&#10;}&#10;&#10;.btn-logout:hover {&#10;    background: #ff3742;&#10;    transform: translateY(-1px);&#10;}&#10;&#10;/* 主内容区域 */&#10;.main-content {&#10;    display: flex;&#10;    flex: 1;&#10;    max-width: 1400px;&#10;    margin: 0 auto;&#10;    width: 100%;&#10;    gap: 2rem;&#10;    padding: 2rem;&#10;}&#10;&#10;/* 侧边栏 */&#10;.sidebar {&#10;    width: 280px;&#10;    background: rgba(255, 255, 255, 0.95);&#10;    backdrop-filter: blur(10px);&#10;    border-radius: 16px;&#10;    padding: 2rem;&#10;    height: fit-content;&#10;    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);&#10;    position: sticky;&#10;    top: 2rem;&#10;}&#10;&#10;.nav-menu {&#10;    display: flex;&#10;    flex-direction: column;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.nav-item {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 1rem;&#10;    padding: 1rem 1.5rem;&#10;    background: transparent;&#10;    border: none;&#10;    border-radius: 12px;&#10;    cursor: pointer;&#10;    font-size: 1rem;&#10;    font-weight: 500;&#10;    color: #666;&#10;    transition: all 0.3s ease;&#10;    text-align: left;&#10;}&#10;&#10;.nav-item:hover {&#10;    background: #f8f9fa;&#10;    color: #2c5aa0;&#10;    transform: translateX(4px);&#10;}&#10;&#10;.nav-item.active {&#10;    background: linear-gradient(135deg, #2c5aa0, #3b82f6);&#10;    color: white;&#10;    box-shadow: 0 4px 15px rgba(44, 90, 160, 0.3);&#10;}&#10;&#10;/* 内容区域 */&#10;.content {&#10;    flex: 1;&#10;    background: rgba(255, 255, 255, 0.95);&#10;    backdrop-filter: blur(10px);&#10;    border-radius: 16px;&#10;    padding: 2rem;&#10;    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);&#10;}&#10;&#10;.section {&#10;    display: none;&#10;}&#10;&#10;.section.active {&#10;    display: block;&#10;}&#10;&#10;.section-header {&#10;    margin-bottom: 2rem;&#10;    text-align: center;&#10;}&#10;&#10;.section-header h2 {&#10;    font-size: 2rem;&#10;    font-weight: 700;&#10;    color: #2c5aa0;&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.section-desc {&#10;    color: #666;&#10;    font-size: 1.1rem;&#10;}&#10;&#10;/* 表单样式 */&#10;.assessment-form, .quick-form {&#10;    max-width: 900px;&#10;    margin: 0 auto;&#10;}&#10;&#10;.form-group-section {&#10;    background: #f8f9fa;&#10;    border-radius: 12px;&#10;    padding: 1.5rem;&#10;    margin-bottom: 2rem;&#10;    border: 1px solid #e9ecef;&#10;}&#10;&#10;.form-group-section h3 {&#10;    color: #2c5aa0;&#10;    font-size: 1.3rem;&#10;    font-weight: 600;&#10;    margin-bottom: 1.5rem;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.form-row {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));&#10;    gap: 1rem;&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;.form-group {&#10;    display: flex;&#10;    flex-direction: column;&#10;}&#10;&#10;.form-group.full-width {&#10;    grid-column: 1 / -1;&#10;}&#10;&#10;.form-group label {&#10;    font-weight: 600;&#10;    color: #333;&#10;    margin-bottom: 0.5rem;&#10;    font-size: 0.9rem;&#10;}&#10;&#10;.form-group input,&#10;.form-group select,&#10;.form-group textarea {&#10;    padding: 0.75rem 1rem;&#10;    border: 2px solid #e9ecef;&#10;    border-radius: 8px;&#10;    font-size: 1rem;&#10;    transition: all 0.3s ease;&#10;    background: white;&#10;}&#10;&#10;.form-group input:focus,&#10;.form-group select:focus,&#10;.form-group textarea:focus {&#10;    outline: none;&#10;    border-color: #3b82f6;&#10;    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);&#10;}&#10;&#10;.form-group textarea {&#10;    resize: vertical;&#10;    min-height: 80px;&#10;}&#10;&#10;.form-actions {&#10;    display: flex;&#10;    justify-content: center;&#10;    gap: 1rem;&#10;    margin-top: 2rem;&#10;    padding-top: 2rem;&#10;    border-top: 1px solid #e9ecef;&#10;}&#10;&#10;.btn-primary, .btn-secondary {&#10;    padding: 1rem 2rem;&#10;    border: none;&#10;    border-radius: 12px;&#10;    font-size: 1rem;&#10;    font-weight: 600;&#10;    cursor: pointer;&#10;    transition: all 0.3s ease;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;    min-width: 140px;&#10;    justify-content: center;&#10;}&#10;&#10;.btn-primary {&#10;    background: linear-gradient(135deg, #2c5aa0, #3b82f6);&#10;    color: white;&#10;    box-shadow: 0 4px 15px rgba(44, 90, 160, 0.3);&#10;}&#10;&#10;.btn-primary:hover {&#10;    transform: translateY(-2px);&#10;    box-shadow: 0 6px 20px rgba(44, 90, 160, 0.4);&#10;}&#10;&#10;.btn-primary:disabled {&#10;    opacity: 0.6;&#10;    cursor: not-allowed;&#10;    transform: none;&#10;}&#10;&#10;.btn-secondary {&#10;    background: #6c757d;&#10;    color: white;&#10;}&#10;&#10;.btn-secondary:hover {&#10;    background: #5a6268;&#10;    transform: translateY(-2px);&#10;}&#10;&#10;/* 模态框样式 */&#10;.modal {&#10;    display: none;&#10;    position: fixed;&#10;    z-index: 1000;&#10;    left: 0;&#10;    top: 0;&#10;    width: 100%;&#10;    height: 100%;&#10;    background: rgba(0, 0, 0, 0.5);&#10;    backdrop-filter: blur(5px);&#10;}&#10;&#10;.modal-content {&#10;    background: white;&#10;    margin: 3% auto;&#10;    padding: 0;&#10;    border-radius: 20px;&#10;    width: 95%;&#10;    max-width: 1200px; /* 扩大最大宽度 */&#10;    max-height: 90vh;&#10;    overflow: hidden;&#10;    box-shadow: 0 25px 80px rgba(0, 0, 0, 0.15);&#10;    animation: modalSlideIn 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);&#10;}&#10;&#10;@keyframes modalSlideIn {&#10;    from {&#10;        opacity: 0;&#10;        transform: translateY(-50px) scale(0.9);&#10;    }&#10;    to {&#10;        opacity: 1;&#10;        transform: translateY(0) scale(1);&#10;    }&#10;}&#10;&#10;.modal-header {&#10;    padding: 2rem;&#10;    border-bottom: 1px solid #e9ecef;&#10;    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;    color: white;&#10;    text-align: center;&#10;}&#10;&#10;.modal-header h2 {&#10;    font-size: 1.8rem;&#10;    font-weight: 700;&#10;    margin: 0;&#10;    text-shadow: 0 2px 4px rgba(0,0,0,0.1);&#10;}&#10;&#10;.modal-close {&#10;    background: none;&#10;    border: none;&#10;    font-size: 1.5rem;&#10;    color: white;&#10;    cursor: pointer;&#10;    padding: 0.25rem;&#10;    border-radius: 4px;&#10;    transition: all 0.2s ease;&#10;}&#10;&#10;.modal-close:hover {&#10;    background: rgba(255, 255, 255, 0.2);&#10;}&#10;&#10;.modal-body {&#10;    padding: 0;&#10;    max-height: 75vh;&#10;    overflow-y: auto;&#10;    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);&#10;}&#10;&#10;/* 评估结果整体容器 */&#10;.result-summary {&#10;    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;    color: white;&#10;    padding: 2rem;&#10;    margin: 0;&#10;}&#10;&#10;/* 结果头部 - 水平布局优化 */&#10;.result-header {&#10;    display: grid;&#10;    grid-template-columns: 2fr 1fr;&#10;    gap: 2rem;&#10;    align-items: start;&#10;    margin-bottom: 0;&#10;}&#10;&#10;/* 诊断结果区域 */&#10;.diagnosis-result {&#10;    display: flex;&#10;    flex-direction: column;&#10;    gap: 1rem;&#10;}&#10;&#10;.diagnosis-result h3 {&#10;    font-size: 2rem;&#10;    font-weight: 800;&#10;    margin: 0;&#10;    text-shadow: 0 2px 4px rgba(0,0,0,0.2);&#10;    line-height: 1.2;&#10;}&#10;&#10;.diagnosis-result p {&#10;    font-size: 1.1rem;&#10;    line-height: 1.6;&#10;    margin: 0;&#10;    opacity: 0.95;&#10;    background: rgba(255,255,255,0.1);&#10;    padding: 1rem;&#10;    border-radius: 12px;&#10;    backdrop-filter: blur(10px);&#10;}&#10;&#10;/* 风险评分可视化区域 */&#10;.risk-score-visual {&#10;    background: rgba(255,255,255,0.15);&#10;    border-radius: 16px;&#10;    padding: 1.5rem;&#10;    backdrop-filter: blur(15px);&#10;    border: 1px solid rgba(255,255,255,0.2);&#10;}&#10;&#10;.risk-score-visual h4 {&#10;    font-size: 1.2rem;&#10;    font-weight: 700;&#10;    margin: 0 0 1rem 0;&#10;    text-align: center;&#10;}&#10;&#10;/* 风险进度条 */&#10;.risk-progress-container {&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;.risk-progress-bar {&#10;    position: relative;&#10;    height: 24px;&#10;    background: rgba(255,255,255,0.3);&#10;    border-radius: 12px;&#10;    overflow: hidden;&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.risk-progress-fill {&#10;    height: 100%;&#10;    border-radius: 12px;&#10;    transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);&#10;    position: relative;&#10;    overflow: hidden;&#10;}&#10;&#10;.risk-score-text {&#10;    position: absolute;&#10;    top: 50%;&#10;    left: 50%;&#10;    transform: translate(-50%, -50%);&#10;    font-weight: 700;&#10;    font-size: 0.9rem;&#10;    color: white;&#10;    text-shadow: 0 1px 2px rgba(0,0,0,0.3);&#10;    z-index: 2;&#10;}&#10;&#10;/* 风险等级指示器 */&#10;.risk-level-indicators {&#10;    display: flex;&#10;    justify-content: space-between;&#10;    font-size: 0.75rem;&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;.risk-indicator {&#10;    padding: 0.25rem 0.5rem;&#10;    border-radius: 6px;&#10;    font-weight: 600;&#10;    background: rgba(255,255,255,0.2);&#10;    backdrop-filter: blur(10px);&#10;}&#10;&#10;.risk-indicator.red { border-left: 3px solid #ff6b6b; }&#10;.risk-indicator.yellow { border-left: 3px solid #ffa502; }&#10;.risk-indicator.green { border-left: 3px solid #2ed573; }&#10;&#10;/* 风险等级徽章 */&#10;.risk-level-badge {&#10;    text-align: center;&#10;    padding: 0.75rem;&#10;    border-radius: 12px;&#10;    font-weight: 700;&#10;    font-size: 1rem;&#10;    background: rgba(255,255,255,0.2);&#10;    backdrop-filter: blur(10px);&#10;    border: 2px solid rgba(255,255,255,0.3);&#10;}&#10;&#10;.risk-level-badge.green {&#10;    background: linear-gradient(135deg, #2ed573, #17c0eb);&#10;    border-color: rgba(46,213,115,0.3);&#10;}&#10;.risk-level-badge.yellow {&#10;    background: linear-gradient(135deg, #ffa502, #ff6348);&#10;    border-color: rgba(255,165,2,0.3);&#10;}&#10;.risk-level-badge.red {&#10;    background: linear-gradient(135deg, #ff6b6b, #ee5a6f);&#10;    border-color: rgba(255,107,107,0.3);&#10;}&#10;&#10;/* 关键风险因素 */&#10;.key-risk-factors {&#10;    margin-top: 1rem;&#10;}&#10;&#10;.key-risk-factors h5 {&#10;    font-size: 1rem;&#10;    font-weight: 600;&#10;    margin: 0 0 0.5rem 0;&#10;    text-align: center;&#10;}&#10;&#10;.key-risk-factors ul {&#10;    list-style: none;&#10;    padding: 0;&#10;    margin: 0;&#10;}&#10;&#10;.key-risk-factors li {&#10;    background: rgba(255,255,255,0.1);&#10;    padding: 0.5rem 0.75rem;&#10;    margin-bottom: 0.25rem;&#10;    border-radius: 8px;&#10;    font-size: 0.85rem;&#10;    backdrop-filter: blur(5px);&#10;}&#10;&#10;/* 主要内容区域 - 网格布局 */&#10;.result-main-content {&#10;    display: grid;&#10;    grid-template-columns: 1fr 1fr;&#10;    gap: 0;&#10;    background: white;&#10;}&#10;&#10;/* 4个核心输出 */&#10;.core-outputs {&#10;    padding: 2rem;&#10;    background: linear-gradient(135deg, #f8f9ff 0%, #e6f3ff 100%);&#10;    border-right: 1px solid #e0e6ed;&#10;}&#10;&#10;.core-outputs h3 {&#10;    color: #2d3436;&#10;    font-size: 1.4rem;&#10;    font-weight: 700;&#10;    margin: 0 0 1.5rem 0;&#10;    text-align: center;&#10;    padding-bottom: 0.5rem;&#10;    border-bottom: 2px solid #6c5ce7;&#10;}&#10;&#10;.output-card {&#10;    background: white;&#10;    border-radius: 12px;&#10;    padding: 1.5rem;&#10;    margin-bottom: 1.5rem;&#10;    box-shadow: 0 4px 20px rgba(0,0,0,0.06);&#10;    border-left: 4px solid #6c5ce7;&#10;    transition: all 0.3s ease;&#10;}&#10;&#10;.output-card:hover {&#10;    transform: translateY(-2px);&#10;    box-shadow: 0 8px 30px rgba(0,0,0,0.1);&#10;}&#10;&#10;.output-card h4 {&#10;    color: #2d3436;&#10;    font-size: 1.1rem;&#10;    font-weight: 600;&#10;    margin: 0 0 1rem 0;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.output-card p {&#10;    color: #636e72;&#10;    line-height: 1.6;&#10;    margin: 0;&#10;    font-size: 0.95rem;&#10;}&#10;&#10;/* 置信度显示 */&#10;.confidence-display {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 1rem;&#10;}&#10;&#10;.confidence-bar {&#10;    flex: 1;&#10;    height: 12px;&#10;    background: #e9ecef;&#10;    border-radius: 6px;&#10;    overflow: hidden;&#10;}&#10;&#10;.confidence-fill {&#10;    height: 100%;&#10;    border-radius: 6px;&#10;    transition: all 0.8s ease;&#10;}&#10;&#10;.confidence-display span {&#10;    font-weight: 700;&#10;    font-size: 1.1rem;&#10;    color: #2d3436;&#10;    min-width: 45px;&#10;}&#10;&#10;/* 决策支持区域 */&#10;.decision-support-area {&#10;    padding: 2rem;&#10;    background: linear-gradient(135deg, #fff8e6 0%, #fff2cc 100%);&#10;}&#10;&#10;.decision-support-area h3 {&#10;    color: #2d3436;&#10;    font-size: 1.4rem;&#10;    font-weight: 700;&#10;    margin: 0 0 1.5rem 0;&#10;    text-align: center;&#10;    padding-bottom: 0.5rem;&#10;    border-bottom: 2px solid #fdcb6e;&#10;}&#10;&#10;/* 决策辅助卡 */&#10;.decision-support {&#10;    display: grid;&#10;    grid-template-columns: 1fr;&#10;    gap: 1.5rem;&#10;}&#10;&#10;.support-section, .oppose-section {&#10;    background: white;&#10;    border-radius: 12px;&#10;    padding: 1.5rem;&#10;    box-shadow: 0 4px 20px rgba(0,0,0,0.06);&#10;    transition: all 0.3s ease;&#10;}&#10;&#10;.support-section:hover, .oppose-section:hover {&#10;    transform: translateY(-2px);&#10;    box-shadow: 0 8px 30px rgba(0,0,0,0.1);&#10;}&#10;&#10;.support-section {&#10;    border-left: 4px solid #00b894;&#10;}&#10;&#10;.oppose-section {&#10;    border-left: 4px solid #e17055;&#10;}&#10;&#10;.support-section h4, .oppose-section h4 {&#10;    font-size: 1.1rem;&#10;    font-weight: 600;&#10;    margin: 0 0 1rem 0;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.support-section h4 { color: #00b894; }&#10;.oppose-section h4 { color: #e17055; }&#10;&#10;.support-section ul, .oppose-section ul {&#10;    list-style: none;&#10;    padding: 0;&#10;    margin: 0;&#10;}&#10;&#10;.support-section li, .oppose-section li {&#10;    padding: 0.75rem 0;&#10;    border-bottom: 1px solid #f1f3f4;&#10;    color: #636e72;&#10;    line-height: 1.5;&#10;    position: relative;&#10;    padding-left: 1.5rem;&#10;}&#10;&#10;.support-section li:before {&#10;    content: &quot;✓&quot;;&#10;    position: absolute;&#10;    left: 0;&#10;    color: #00b894;&#10;    font-weight: 700;&#10;}&#10;&#10;.oppose-section li:before {&#10;    content: &quot;!&quot;;&#10;    position: absolute;&#10;    left: 0;&#10;    color: #e17055;&#10;    font-weight: 700;&#10;}&#10;&#10;.support-section li:last-child, .oppose-section li:last-child {&#10;    border-bottom: none;&#10;}&#10;&#10;/* 详细信息区域 - 全宽 */&#10;.detailed-info {&#10;    grid-column: 1 / -1;&#10;    padding: 2rem;&#10;    background: linear-gradient(135deg, #f0f4f8 0%, #e2e8f0 100%);&#10;    border-top: 1px solid #e0e6ed;&#10;}&#10;&#10;/* 建议措施 */&#10;.recommendations {&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.recommendations h4 {&#10;    color: #2d3436;&#10;    font-size: 1.2rem;&#10;    font-weight: 700;&#10;    margin: 0 0 1rem 0;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.recommendations ul {&#10;    list-style: none;&#10;    padding: 0;&#10;    margin: 0;&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));&#10;    gap: 1rem;&#10;}&#10;&#10;.recommendations li {&#10;    background: white;&#10;    padding: 1rem;&#10;    border-radius: 8px;&#10;    box-shadow: 0 2px 10px rgba(0,0,0,0.05);&#10;    border-left: 3px solid #74b9ff;&#10;    color: #636e72;&#10;    line-height: 1.5;&#10;}&#10;&#10;/* 指南引用和详细评分 */&#10;.guidelines, .detailed-scores {&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.guidelines h4, .detailed-scores h4 {&#10;    color: #2d3436;&#10;    font-size: 1.2rem;&#10;    font-weight: 700;&#10;    margin: 0 0 1rem 0;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.guideline-item {&#10;    background: white;&#10;    padding: 1rem;&#10;    margin-bottom: 0.5rem;&#10;    border-radius: 8px;&#10;    box-shadow: 0 2px 10px rgba(0,0,0,0.05);&#10;    border-left: 3px solid #a29bfe;&#10;}&#10;&#10;.guideline-item strong {&#10;    color: #2d3436;&#10;}&#10;&#10;.scores-breakdown {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));&#10;    gap: 1rem;&#10;}&#10;&#10;.score-item {&#10;    background: white;&#10;    padding: 1rem;&#10;    border-radius: 8px;&#10;    box-shadow: 0 2px 10px rgba(0,0,0,0.05);&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;    border-left: 3px solid #fd79a8;&#10;}&#10;&#10;.score-label {&#10;    color: #636e72;&#10;    font-weight: 500;&#10;}&#10;&#10;.score-value {&#10;    color: #2d3436;&#10;    font-weight: 700;&#10;}&#10;&#10;/* 响应式设计 */&#10;@media (max-width: 1024px) {&#10;    .modal-content {&#10;        width: 98%;&#10;        max-width: 95vw;&#10;    }&#10;&#10;    .result-header {&#10;        grid-template-columns: 1fr;&#10;        gap: 1.5rem;&#10;    }&#10;&#10;    .result-main-content {&#10;        grid-template-columns: 1fr;&#10;    }&#10;&#10;    .core-outputs {&#10;        border-right: none;&#10;        border-bottom: 1px solid #e0e6ed;&#10;    }&#10;}&#10;&#10;@media (max-width: 768px) {&#10;    .modal-content {&#10;        margin: 1% auto;&#10;        max-height: 98vh;&#10;    }&#10;&#10;    .modal-header {&#10;        padding: 1.5rem;&#10;    }&#10;&#10;    .result-summary {&#10;        padding: 1.5rem;&#10;    }&#10;&#10;    .core-outputs, .decision-support-area, .detailed-info {&#10;        padding: 1.5rem;&#10;    }&#10;&#10;    .recommendations ul {&#10;        grid-template-columns: 1fr;&#10;    }&#10;&#10;    .scores-breakdown {&#10;        grid-template-columns: 1fr;&#10;    }&#10;}&#10;&#10;/* 加载动画 */&#10;.loading {&#10;    display: inline-block;&#10;    width: 20px;&#10;    height: 20px;&#10;    border: 3px solid rgba(255, 255, 255, 0.3);&#10;    border-radius: 50%;&#10;    border-top-color: white;&#10;    animation: spin 1s ease-in-out infinite;&#10;}&#10;&#10;@keyframes spin {&#10;    to { transform: rotate(360deg); }&#10;}&#10;&#10;/* 成功/错误状态 */&#10;.alert {&#10;    padding: 1rem;&#10;    border-radius: 8px;&#10;    margin-bottom: 1rem;&#10;    border: 1px solid transparent;&#10;}&#10;&#10;.alert-success {&#10;    background: #d4edda;&#10;    border-color: #c3e6cb;&#10;    color: #155724;&#10;}&#10;&#10;.alert-error {&#10;    background: #f8d7da;&#10;    border-color: #f5c6cb;&#10;    color: #721c24;&#10;}&#10;&#10;.alert-warning {&#10;    background: #fff3cd;&#10;    border-color: #ffeaa7;&#10;    color: #856404;&#10;}&#10;" />
              <option name="updatedContent" value="/* ECMO诊疗专家系统样式 */&#10;* {&#10;    margin: 0;&#10;    padding: 0;&#10;    box-sizing: border-box;&#10;}&#10;&#10;body {&#10;    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;&#10;    background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);&#10;    min-height: 100vh;&#10;    color: #333;&#10;}&#10;&#10;.container {&#10;    display: flex;&#10;    flex-direction: column;&#10;    min-height: 100vh;&#10;}&#10;&#10;/* 头部样式 */&#10;.header {&#10;    background: rgba(255, 255, 255, 0.95);&#10;    backdrop-filter: blur(10px);&#10;    border-bottom: 1px solid rgba(255, 255, 255, 0.2);&#10;    padding: 1rem 2rem;&#10;    box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);&#10;}&#10;&#10;.header-content {&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;    max-width: 1400px;&#10;    margin: 0 auto;&#10;}&#10;&#10;.header h1 {&#10;    font-size: 1.8rem;&#10;    font-weight: 700;&#10;    color: #2c5aa0;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.user-info {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 1rem;&#10;}&#10;&#10;.user-info span {&#10;    color: #666;&#10;    font-weight: 500;&#10;}&#10;&#10;.btn-logout {&#10;    padding: 0.5rem 1rem;&#10;    background: #ff4757;&#10;    color: white;&#10;    border: none;&#10;    border-radius: 8px;&#10;    cursor: pointer;&#10;    font-weight: 500;&#10;    transition: all 0.3s ease;&#10;}&#10;&#10;.btn-logout:hover {&#10;    background: #ff3742;&#10;    transform: translateY(-1px);&#10;}&#10;&#10;/* 主内容区域 */&#10;.main-content {&#10;    display: flex;&#10;    flex: 1;&#10;    max-width: 1400px;&#10;    margin: 0 auto;&#10;    width: 100%;&#10;    gap: 2rem;&#10;    padding: 2rem;&#10;}&#10;&#10;/* 侧边栏 */&#10;.sidebar {&#10;    width: 280px;&#10;    background: rgba(255, 255, 255, 0.95);&#10;    backdrop-filter: blur(10px);&#10;    border-radius: 16px;&#10;    padding: 2rem;&#10;    height: fit-content;&#10;    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);&#10;    position: sticky;&#10;    top: 2rem;&#10;}&#10;&#10;.nav-menu {&#10;    display: flex;&#10;    flex-direction: column;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.nav-item {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 1rem;&#10;    padding: 1rem 1.5rem;&#10;    background: transparent;&#10;    border: none;&#10;    border-radius: 12px;&#10;    cursor: pointer;&#10;    font-size: 1rem;&#10;    font-weight: 500;&#10;    color: #666;&#10;    transition: all 0.3s ease;&#10;    text-align: left;&#10;}&#10;&#10;.nav-item:hover {&#10;    background: #f8f9fa;&#10;    color: #2c5aa0;&#10;    transform: translateX(4px);&#10;}&#10;&#10;.nav-item.active {&#10;    background: linear-gradient(135deg, #2c5aa0, #3b82f6);&#10;    color: white;&#10;    box-shadow: 0 4px 15px rgba(44, 90, 160, 0.3);&#10;}&#10;&#10;/* 内容区域 */&#10;.content {&#10;    flex: 1;&#10;    background: rgba(255, 255, 255, 0.95);&#10;    backdrop-filter: blur(10px);&#10;    border-radius: 16px;&#10;    padding: 2rem;&#10;    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);&#10;}&#10;&#10;.section {&#10;    display: none;&#10;}&#10;&#10;.section.active {&#10;    display: block;&#10;}&#10;&#10;.section-header {&#10;    margin-bottom: 2rem;&#10;    text-align: center;&#10;}&#10;&#10;.section-header h2 {&#10;    font-size: 2rem;&#10;    font-weight: 700;&#10;    color: #2c5aa0;&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.section-desc {&#10;    color: #666;&#10;    font-size: 1.1rem;&#10;}&#10;&#10;/* 表单样式 */&#10;.assessment-form, .quick-form {&#10;    max-width: 900px;&#10;    margin: 0 auto;&#10;}&#10;&#10;.form-group-section {&#10;    background: #f8f9fa;&#10;    border-radius: 12px;&#10;    padding: 1.5rem;&#10;    margin-bottom: 2rem;&#10;    border: 1px solid #e9ecef;&#10;}&#10;&#10;.form-group-section h3 {&#10;    color: #2c5aa0;&#10;    font-size: 1.3rem;&#10;    font-weight: 600;&#10;    margin-bottom: 1.5rem;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.form-row {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));&#10;    gap: 1rem;&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;.form-group {&#10;    display: flex;&#10;    flex-direction: column;&#10;}&#10;&#10;.form-group.full-width {&#10;    grid-column: 1 / -1;&#10;}&#10;&#10;.form-group label {&#10;    font-weight: 600;&#10;    color: #333;&#10;    margin-bottom: 0.5rem;&#10;    font-size: 0.9rem;&#10;}&#10;&#10;.form-group input,&#10;.form-group select,&#10;.form-group textarea {&#10;    padding: 0.75rem 1rem;&#10;    border: 2px solid #e9ecef;&#10;    border-radius: 8px;&#10;    font-size: 1rem;&#10;    transition: all 0.3s ease;&#10;    background: white;&#10;}&#10;&#10;.form-group input:focus,&#10;.form-group select:focus,&#10;.form-group textarea:focus {&#10;    outline: none;&#10;    border-color: #3b82f6;&#10;    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);&#10;}&#10;&#10;.form-group textarea {&#10;    resize: vertical;&#10;    min-height: 80px;&#10;}&#10;&#10;.form-actions {&#10;    display: flex;&#10;    justify-content: center;&#10;    gap: 1rem;&#10;    margin-top: 2rem;&#10;    padding-top: 2rem;&#10;    border-top: 1px solid #e9ecef;&#10;}&#10;&#10;.btn-primary, .btn-secondary {&#10;    padding: 1rem 2rem;&#10;    border: none;&#10;    border-radius: 12px;&#10;    font-size: 1rem;&#10;    font-weight: 600;&#10;    cursor: pointer;&#10;    transition: all 0.3s ease;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;    min-width: 140px;&#10;    justify-content: center;&#10;}&#10;&#10;.btn-primary {&#10;    background: linear-gradient(135deg, #2c5aa0, #3b82f6);&#10;    color: white;&#10;    box-shadow: 0 4px 15px rgba(44, 90, 160, 0.3);&#10;}&#10;&#10;.btn-primary:hover {&#10;    transform: translateY(-2px);&#10;    box-shadow: 0 6px 20px rgba(44, 90, 160, 0.4);&#10;}&#10;&#10;.btn-primary:disabled {&#10;    opacity: 0.6;&#10;    cursor: not-allowed;&#10;    transform: none;&#10;}&#10;&#10;.btn-secondary {&#10;    background: #6c757d;&#10;    color: white;&#10;}&#10;&#10;.btn-secondary:hover {&#10;    background: #5a6268;&#10;    transform: translateY(-2px);&#10;}&#10;&#10;/* 模态框样式 */&#10;.modal {&#10;    display: none;&#10;    position: fixed;&#10;    z-index: 1000;&#10;    left: 0;&#10;    top: 0;&#10;    width: 100%;&#10;    height: 100%;&#10;    background: rgba(0, 0, 0, 0.5);&#10;    backdrop-filter: blur(5px);&#10;}&#10;&#10;.modal-content {&#10;    background: white;&#10;    margin: 3% auto;&#10;    padding: 0;&#10;    border-radius: 20px;&#10;    width: 95%;&#10;    max-width: 1200px; /* 扩大最大宽度 */&#10;    max-height: 90vh;&#10;    overflow: hidden;&#10;    box-shadow: 0 25px 80px rgba(0, 0, 0, 0.15);&#10;    animation: modalSlideIn 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);&#10;}&#10;&#10;@keyframes modalSlideIn {&#10;    from {&#10;        opacity: 0;&#10;        transform: translateY(-50px) scale(0.9);&#10;    }&#10;    to {&#10;        opacity: 1;&#10;        transform: translateY(0) scale(1);&#10;    }&#10;}&#10;&#10;.modal-header {&#10;    padding: 2rem;&#10;    border-bottom: 1px solid #e9ecef;&#10;    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;    color: white;&#10;    text-align: center;&#10;}&#10;&#10;.modal-header h2 {&#10;    font-size: 1.8rem;&#10;    font-weight: 700;&#10;    margin: 0;&#10;    text-shadow: 0 2px 4px rgba(0,0,0,0.1);&#10;}&#10;&#10;.modal-close {&#10;    background: none;&#10;    border: none;&#10;    font-size: 1.5rem;&#10;    color: white;&#10;    cursor: pointer;&#10;    padding: 0.25rem;&#10;    border-radius: 4px;&#10;    transition: all 0.2s ease;&#10;}&#10;&#10;.modal-close:hover {&#10;    background: rgba(255, 255, 255, 0.2);&#10;}&#10;&#10;.modal-body {&#10;    padding: 0;&#10;    max-height: 75vh;&#10;    overflow-y: auto;&#10;    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);&#10;}&#10;&#10;/* 评估结果整体容器 */&#10;.result-summary {&#10;    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;    color: white;&#10;    padding: 2rem;&#10;    margin: 0;&#10;}&#10;&#10;/* 结果头部 - 水平布局优化 */&#10;.result-header {&#10;    display: grid;&#10;    grid-template-columns: 2fr 1fr;&#10;    gap: 2rem;&#10;    align-items: start;&#10;    margin-bottom: 0;&#10;}&#10;&#10;/* 诊断结果区域 */&#10;.diagnosis-result {&#10;    display: flex;&#10;    flex-direction: column;&#10;    gap: 1rem;&#10;}&#10;&#10;.diagnosis-result h3 {&#10;    font-size: 2rem;&#10;    font-weight: 800;&#10;    margin: 0;&#10;    text-shadow: 0 2px 4px rgba(0,0,0,0.2);&#10;    line-height: 1.2;&#10;}&#10;&#10;.diagnosis-result p {&#10;    font-size: 1.1rem;&#10;    line-height: 1.6;&#10;    margin: 0;&#10;    opacity: 0.95;&#10;    background: rgba(255,255,255,0.1);&#10;    padding: 1rem;&#10;    border-radius: 12px;&#10;    backdrop-filter: blur(10px);&#10;}&#10;&#10;/* 风险评分可视化区域 */&#10;.risk-score-visual {&#10;    background: rgba(255,255,255,0.15);&#10;    border-radius: 16px;&#10;    padding: 1.5rem;&#10;    backdrop-filter: blur(15px);&#10;    border: 1px solid rgba(255,255,255,0.2);&#10;}&#10;&#10;.risk-score-visual h4 {&#10;    font-size: 1.2rem;&#10;    font-weight: 700;&#10;    margin: 0 0 1rem 0;&#10;    text-align: center;&#10;}&#10;&#10;/* 风险进度条 */&#10;.risk-progress-container {&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;.risk-progress-bar {&#10;    position: relative;&#10;    height: 24px;&#10;    background: rgba(255,255,255,0.3);&#10;    border-radius: 12px;&#10;    overflow: hidden;&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.risk-progress-fill {&#10;    height: 100%;&#10;    border-radius: 12px;&#10;    transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);&#10;    position: relative;&#10;    overflow: hidden;&#10;}&#10;&#10;.risk-score-text {&#10;    position: absolute;&#10;    top: 50%;&#10;    left: 50%;&#10;    transform: translate(-50%, -50%);&#10;    font-weight: 700;&#10;    font-size: 0.9rem;&#10;    color: white;&#10;    text-shadow: 0 1px 2px rgba(0,0,0,0.3);&#10;    z-index: 2;&#10;}&#10;&#10;/* 风险等级指示器 */&#10;.risk-level-indicators {&#10;    display: flex;&#10;    justify-content: space-between;&#10;    font-size: 0.75rem;&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;.risk-indicator {&#10;    padding: 0.25rem 0.5rem;&#10;    border-radius: 6px;&#10;    font-weight: 600;&#10;    background: rgba(255,255,255,0.2);&#10;    backdrop-filter: blur(10px);&#10;}&#10;&#10;.risk-indicator.red { border-left: 3px solid #ff6b6b; }&#10;.risk-indicator.yellow { border-left: 3px solid #ffa502; }&#10;.risk-indicator.green { border-left: 3px solid #2ed573; }&#10;&#10;/* 风险等级徽章 */&#10;.risk-level-badge {&#10;    text-align: center;&#10;    padding: 0.75rem;&#10;    border-radius: 12px;&#10;    font-weight: 700;&#10;    font-size: 1rem;&#10;    background: rgba(255,255,255,0.2);&#10;    backdrop-filter: blur(10px);&#10;    border: 2px solid rgba(255,255,255,0.3);&#10;}&#10;&#10;.risk-level-badge.green {&#10;    background: linear-gradient(135deg, #2ed573, #17c0eb);&#10;    border-color: rgba(46,213,115,0.3);&#10;}&#10;.risk-level-badge.yellow {&#10;    background: linear-gradient(135deg, #ffa502, #ff6348);&#10;    border-color: rgba(255,165,2,0.3);&#10;}&#10;.risk-level-badge.red {&#10;    background: linear-gradient(135deg, #ff6b6b, #ee5a6f);&#10;    border-color: rgba(255,107,107,0.3);&#10;}&#10;&#10;/* 关键风险因素 */&#10;.key-risk-factors {&#10;    margin-top: 1rem;&#10;}&#10;&#10;.key-risk-factors h5 {&#10;    font-size: 1rem;&#10;    font-weight: 600;&#10;    margin: 0 0 0.5rem 0;&#10;    text-align: center;&#10;}&#10;&#10;.key-risk-factors ul {&#10;    list-style: none;&#10;    padding: 0;&#10;    margin: 0;&#10;}&#10;&#10;.key-risk-factors li {&#10;    background: rgba(255,255,255,0.1);&#10;    padding: 0.5rem 0.75rem;&#10;    margin-bottom: 0.25rem;&#10;    border-radius: 8px;&#10;    font-size: 0.85rem;&#10;    backdrop-filter: blur(5px);&#10;}&#10;&#10;/* 主要内容区域 - 网格布局 */&#10;.result-main-content {&#10;    display: grid;&#10;    grid-template-columns: 1fr 1fr;&#10;    gap: 0;&#10;    background: white;&#10;}&#10;&#10;/* 4个核心输出 */&#10;.core-outputs {&#10;    padding: 2rem;&#10;    background: linear-gradient(135deg, #f8f9ff 0%, #e6f3ff 100%);&#10;    border-right: 1px solid #e0e6ed;&#10;}&#10;&#10;.core-outputs h3 {&#10;    color: #2d3436;&#10;    font-size: 1.4rem;&#10;    font-weight: 700;&#10;    margin: 0 0 1.5rem 0;&#10;    text-align: center;&#10;    padding-bottom: 0.5rem;&#10;    border-bottom: 2px solid #6c5ce7;&#10;}&#10;&#10;.output-card {&#10;    background: white;&#10;    border-radius: 12px;&#10;    padding: 1.5rem;&#10;    margin-bottom: 1.5rem;&#10;    box-shadow: 0 4px 20px rgba(0,0,0,0.06);&#10;    border-left: 4px solid #6c5ce7;&#10;    transition: all 0.3s ease;&#10;}&#10;&#10;.output-card:hover {&#10;    transform: translateY(-2px);&#10;    box-shadow: 0 8px 30px rgba(0,0,0,0.1);&#10;}&#10;&#10;.output-card h4 {&#10;    color: #2d3436;&#10;    font-size: 1.1rem;&#10;    font-weight: 600;&#10;    margin: 0 0 1rem 0;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.output-card p {&#10;    color: #636e72;&#10;    line-height: 1.6;&#10;    margin: 0;&#10;    font-size: 0.95rem;&#10;}&#10;&#10;/* 置信度显示 */&#10;.confidence-display {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 1rem;&#10;}&#10;&#10;.confidence-bar {&#10;    flex: 1;&#10;    height: 12px;&#10;    background: #e9ecef;&#10;    border-radius: 6px;&#10;    overflow: hidden;&#10;}&#10;&#10;.confidence-fill {&#10;    height: 100%;&#10;    border-radius: 6px;&#10;    transition: all 0.8s ease;&#10;}&#10;&#10;.confidence-display span {&#10;    font-weight: 700;&#10;    font-size: 1.1rem;&#10;    color: #2d3436;&#10;    min-width: 45px;&#10;}&#10;&#10;/* 决策支持区域 */&#10;.decision-support-area {&#10;    padding: 2rem;&#10;    background: linear-gradient(135deg, #fff8e6 0%, #fff2cc 100%);&#10;}&#10;&#10;.decision-support-area h3 {&#10;    color: #2d3436;&#10;    font-size: 1.4rem;&#10;    font-weight: 700;&#10;    margin: 0 0 1.5rem 0;&#10;    text-align: center;&#10;    padding-bottom: 0.5rem;&#10;    border-bottom: 2px solid #fdcb6e;&#10;}&#10;&#10;/* 决策辅助卡 */&#10;.decision-support {&#10;    display: grid;&#10;    grid-template-columns: 1fr;&#10;    gap: 1.5rem;&#10;}&#10;&#10;.support-section, .oppose-section {&#10;    background: white;&#10;    border-radius: 12px;&#10;    padding: 1.5rem;&#10;    box-shadow: 0 4px 20px rgba(0,0,0,0.06);&#10;    transition: all 0.3s ease;&#10;}&#10;&#10;.support-section:hover, .oppose-section:hover {&#10;    transform: translateY(-2px);&#10;    box-shadow: 0 8px 30px rgba(0,0,0,0.1);&#10;}&#10;&#10;.support-section {&#10;    border-left: 4px solid #00b894;&#10;}&#10;&#10;.oppose-section {&#10;    border-left: 4px solid #e17055;&#10;}&#10;&#10;.support-section h4, .oppose-section h4 {&#10;    font-size: 1.1rem;&#10;    font-weight: 600;&#10;    margin: 0 0 1rem 0;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.support-section h4 { color: #00b894; }&#10;.oppose-section h4 { color: #e17055; }&#10;&#10;.support-section ul, .oppose-section ul {&#10;    list-style: none;&#10;    padding: 0;&#10;    margin: 0;&#10;}&#10;&#10;.support-section li, .oppose-section li {&#10;    padding: 0.75rem 0;&#10;    border-bottom: 1px solid #f1f3f4;&#10;    color: #636e72;&#10;    line-height: 1.5;&#10;    position: relative;&#10;    padding-left: 1.5rem;&#10;}&#10;&#10;.support-section li:before {&#10;    content: &quot;✓&quot;;&#10;    position: absolute;&#10;    left: 0;&#10;    color: #00b894;&#10;    font-weight: 700;&#10;}&#10;&#10;.oppose-section li:before {&#10;    content: &quot;!&quot;;&#10;    position: absolute;&#10;    left: 0;&#10;    color: #e17055;&#10;    font-weight: 700;&#10;}&#10;&#10;.support-section li:last-child, .oppose-section li:last-child {&#10;    border-bottom: none;&#10;}&#10;&#10;/* 详细信息区域 - 全宽 */&#10;.detailed-info {&#10;    grid-column: 1 / -1;&#10;    padding: 2rem;&#10;    background: linear-gradient(135deg, #f0f4f8 0%, #e2e8f0 100%);&#10;    border-top: 1px solid #e0e6ed;&#10;}&#10;&#10;/* 建议措施 */&#10;.recommendations {&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.recommendations h4 {&#10;    color: #2d3436;&#10;    font-size: 1.2rem;&#10;    font-weight: 700;&#10;    margin: 0 0 1rem 0;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.recommendations ul {&#10;    list-style: none;&#10;    padding: 0;&#10;    margin: 0;&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));&#10;    gap: 1rem;&#10;}&#10;&#10;.recommendations li {&#10;    background: white;&#10;    padding: 1rem;&#10;    border-radius: 8px;&#10;    box-shadow: 0 2px 10px rgba(0,0,0,0.05);&#10;    border-left: 3px solid #74b9ff;&#10;    color: #636e72;&#10;    line-height: 1.5;&#10;}&#10;&#10;/* 指南引用和详细评分 */&#10;.guidelines, .detailed-scores {&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.guidelines h4, .detailed-scores h4 {&#10;    color: #2d3436;&#10;    font-size: 1.2rem;&#10;    font-weight: 700;&#10;    margin: 0 0 1rem 0;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.guideline-item {&#10;    background: white;&#10;    padding: 1rem;&#10;    margin-bottom: 0.5rem;&#10;    border-radius: 8px;&#10;    box-shadow: 0 2px 10px rgba(0,0,0,0.05);&#10;    border-left: 3px solid #a29bfe;&#10;}&#10;&#10;.guideline-item strong {&#10;    color: #2d3436;&#10;}&#10;&#10;.scores-breakdown {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));&#10;    gap: 1rem;&#10;}&#10;&#10;.score-item {&#10;    background: white;&#10;    padding: 1rem;&#10;    border-radius: 8px;&#10;    box-shadow: 0 2px 10px rgba(0,0,0,0.05);&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;    border-left: 3px solid #fd79a8;&#10;}&#10;&#10;.score-label {&#10;    color: #636e72;&#10;    font-weight: 500;&#10;}&#10;&#10;.score-value {&#10;    color: #2d3436;&#10;    font-weight: 700;&#10;}&#10;&#10;/* ECMO诊疗数据库样式 */&#10;.knowledge-content {&#10;    display: grid;&#10;    grid-template-columns: 1fr;&#10;    gap: 2rem;&#10;    max-width: 1200px;&#10;    margin: 0 auto;&#10;}&#10;&#10;/* 数据库分类卡片 */&#10;.knowledge-category {&#10;    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);&#10;    border-radius: 20px;&#10;    padding: 0;&#10;    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);&#10;    overflow: hidden;&#10;    margin-bottom: 2rem;&#10;    transition: all 0.3s ease;&#10;}&#10;&#10;.knowledge-category:hover {&#10;    transform: translateY(-5px);&#10;    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.25);&#10;}&#10;&#10;.category-header {&#10;    background: rgba(255, 255, 255, 0.1);&#10;    backdrop-filter: blur(10px);&#10;    padding: 2rem;&#10;    color: white;&#10;    text-align: center;&#10;    border-bottom: 1px solid rgba(255, 255, 255, 0.2);&#10;}&#10;&#10;.category-header h3 {&#10;    font-size: 1.6rem;&#10;    font-weight: 700;&#10;    margin: 0 0 0.5rem 0;&#10;    text-shadow: 0 2px 4px rgba(0,0,0,0.1);&#10;}&#10;&#10;.category-header p {&#10;    font-size: 1rem;&#10;    opacity: 0.9;&#10;    margin: 0;&#10;}&#10;&#10;.category-content {&#10;    background: white;&#10;    padding: 2rem;&#10;}&#10;&#10;/* 数据项网格布局 */&#10;.data-grid {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));&#10;    gap: 1.5rem;&#10;}&#10;&#10;.data-item {&#10;    background: linear-gradient(135deg, #f8f9ff 0%, #e6f3ff 100%);&#10;    border-radius: 12px;&#10;    padding: 1.5rem;&#10;    border-left: 4px solid #6c5ce7;&#10;    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);&#10;    transition: all 0.3s ease;&#10;}&#10;&#10;.data-item:hover {&#10;    transform: translateY(-3px);&#10;    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);&#10;    border-left-color: #a29bfe;&#10;}&#10;&#10;.data-item h4 {&#10;    color: #2d3436;&#10;    font-size: 1.1rem;&#10;    font-weight: 700;&#10;    margin: 0 0 1rem 0;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.data-item .icon {&#10;    width: 20px;&#10;    height: 20px;&#10;    background: #6c5ce7;&#10;    border-radius: 50%;&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: center;&#10;    color: white;&#10;    font-size: 0.8rem;&#10;    font-weight: 700;&#10;}&#10;&#10;.data-item p, .data-item ul {&#10;    color: #636e72;&#10;    line-height: 1.6;&#10;    margin: 0;&#10;    font-size: 0.95rem;&#10;}&#10;&#10;.data-item ul {&#10;    list-style: none;&#10;    padding: 0;&#10;}&#10;&#10;.data-item li {&#10;    padding: 0.5rem 0;&#10;    border-bottom: 1px solid rgba(108, 92, 231, 0.1);&#10;    position: relative;&#10;    padding-left: 1.5rem;&#10;}&#10;&#10;.data-item li:before {&#10;    content: &quot;•&quot;;&#10;    position: absolute;&#10;    left: 0;&#10;    color: #6c5ce7;&#10;    font-weight: 700;&#10;    font-size: 1.2rem;&#10;}&#10;&#10;.data-item li:last-child {&#10;    border-bottom: none;&#10;}&#10;&#10;/* 重要提示框 */&#10;.knowledge-alert {&#10;    background: linear-gradient(135deg, #ff7675 0%, #e17055 100%);&#10;    color: white;&#10;    padding: 1.5rem;&#10;    border-radius: 12px;&#10;    margin: 1.5rem 0;&#10;    border-left: 4px solid #d63031;&#10;    box-shadow: 0 4px 15px rgba(255, 118, 117, 0.3);&#10;}&#10;&#10;.knowledge-alert h4 {&#10;    margin: 0 0 0.5rem 0;&#10;    font-size: 1.1rem;&#10;    font-weight: 700;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.knowledge-alert p {&#10;    margin: 0;&#10;    opacity: 0.95;&#10;    line-height: 1.5;&#10;}&#10;&#10;/* 成功提示框 */&#10;.knowledge-success {&#10;    background: linear-gradient(135deg, #00b894 0%, #00cec9 100%);&#10;    color: white;&#10;    padding: 1.5rem;&#10;    border-radius: 12px;&#10;    margin: 1.5rem 0;&#10;    border-left: 4px solid #00a085;&#10;    box-shadow: 0 4px 15px rgba(0, 184, 148, 0.3);&#10;}&#10;&#10;.knowledge-success h4 {&#10;    margin: 0 0 0.5rem 0;&#10;    font-size: 1.1rem;&#10;    font-weight: 700;&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;}&#10;&#10;/* 参数表格样式 */&#10;.parameter-table {&#10;    width: 100%;&#10;    border-collapse: collapse;&#10;    margin: 1rem 0;&#10;    background: white;&#10;    border-radius: 8px;&#10;    overflow: hidden;&#10;    box-shadow: 0 2px 10px rgba(0,0,0,0.05);&#10;}&#10;&#10;.parameter-table th {&#10;    background: linear-gradient(135deg, #6c5ce7, #a29bfe);&#10;    color: white;&#10;    padding: 1rem;&#10;    font-weight: 600;&#10;    text-align: left;&#10;    font-size: 0.9rem;&#10;}&#10;&#10;.parameter-table td {&#10;    padding: 0.75rem 1rem;&#10;    border-bottom: 1px solid #f1f3f4;&#10;    color: #636e72;&#10;    font-size: 0.9rem;&#10;}&#10;&#10;.parameter-table tr:hover td {&#10;    background: #f8f9ff;&#10;}&#10;&#10;.parameter-table tr:last-child td {&#10;    border-bottom: none;&#10;}&#10;&#10;/* 统计数据展示 */&#10;.stats-grid {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));&#10;    gap: 1rem;&#10;    margin: 2rem 0;&#10;}&#10;&#10;.stat-card {&#10;    background: linear-gradient(135deg, #74b9ff 0%, #0984e3 100%);&#10;    color: white;&#10;    padding: 1.5rem;&#10;    border-radius: 12px;&#10;    text-align: center;&#10;    box-shadow: 0 4px 15px rgba(116, 185, 255, 0.3);&#10;}&#10;&#10;.stat-number {&#10;    font-size: 2rem;&#10;    font-weight: 700;&#10;    margin-bottom: 0.5rem;&#10;    text-shadow: 0 2px 4px rgba(0,0,0,0.1);&#10;}&#10;&#10;.stat-label {&#10;    font-size: 0.9rem;&#10;    opacity: 0.9;&#10;    font-weight: 500;&#10;}&#10;&#10;/* 响应式设计 */&#10;@media (max-width: 1024px) {&#10;    .modal-content {&#10;        width: 98%;&#10;        max-width: 95vw;&#10;    }&#10;&#10;    .result-header {&#10;        grid-template-columns: 1fr;&#10;        gap: 1.5rem;&#10;    }&#10;&#10;    .result-main-content {&#10;        grid-template-columns: 1fr;&#10;    }&#10;&#10;    .core-outputs {&#10;        border-right: none;&#10;        border-bottom: 1px solid #e0e6ed;&#10;    }&#10;&#10;    .knowledge-content {&#10;        grid-template-columns: 1fr;&#10;    }&#10;    &#10;    .data-grid {&#10;        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));&#10;    }&#10;}&#10;&#10;@media (max-width: 768px) {&#10;    .modal-content {&#10;        margin: 1% auto;&#10;        max-height: 98vh;&#10;    }&#10;&#10;    .modal-header {&#10;        padding: 1.5rem;&#10;    }&#10;&#10;    .result-summary {&#10;        padding: 1.5rem;&#10;    }&#10;&#10;    .core-outputs, .decision-support-area, .detailed-info {&#10;        padding: 1.5rem;&#10;    }&#10;&#10;    .recommendations ul {&#10;        grid-template-columns: 1fr;&#10;    }&#10;&#10;    .scores-breakdown {&#10;        grid-template-columns: 1fr;&#10;    }&#10;    &#10;    .category-header {&#10;        padding: 1.5rem;&#10;    }&#10;    &#10;    .category-content {&#10;        padding: 1.5rem;&#10;    }&#10;    &#10;    .data-grid {&#10;        grid-template-columns: 1fr;&#10;    }&#10;    &#10;    .stats-grid {&#10;        grid-template-columns: repeat(2, 1fr);&#10;    }&#10;}&#10;&#10;/* 加载动画 */&#10;.loading {&#10;    display: inline-block;&#10;    width: 20px;&#10;    height: 20px;&#10;    border: 3px solid rgba(255, 255, 255, 0.3);&#10;    border-radius: 50%;&#10;    border-top-color: white;&#10;    animation: spin 1s ease-in-out infinite;&#10;}&#10;&#10;@keyframes spin {&#10;    to { transform: rotate(360deg); }&#10;}&#10;&#10;/* 成功/错误状态 */&#10;.alert {&#10;    padding: 1rem;&#10;    border-radius: 8px;&#10;    margin-bottom: 1rem;&#10;    border: 1px solid transparent;&#10;}&#10;&#10;.alert-success {&#10;    background: #d4edda;&#10;    border-color: #c3e6cb;&#10;    color: #155724;&#10;}&#10;&#10;.alert-error {&#10;    background: #f8d7da;&#10;    border-color: #f5c6cb;&#10;    color: #721c24;&#10;}&#10;&#10;.alert-warning {&#10;    background: #fff3cd;&#10;    border-color: #ffeaa7;&#10;    color: #856404;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/alibaba-deepseek-demo/src/main/resources/static/ecmo-expert.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/alibaba-deepseek-demo/src/main/resources/static/ecmo-expert.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;zh-CN&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;ECMO诊疗专家系统&lt;/title&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/ecmo-expert.css&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;!-- 头部 --&gt;&#10;        &lt;header class=&quot;header&quot;&gt;&#10;            &lt;div class=&quot;header-content&quot;&gt;&#10;                &lt;h1&gt;&lt;i class=&quot;icon-heart&quot;&gt;&lt;/i&gt; ECMO诊疗专家系统&lt;/h1&gt;&#10;                &lt;div class=&quot;user-info&quot;&gt;&#10;                    &lt;span id=&quot;username&quot;&gt;医生用户&lt;/span&gt;&#10;                    &lt;button class=&quot;btn-logout&quot; onclick=&quot;logout()&quot;&gt;退出&lt;/button&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/header&gt;&#10;&#10;        &lt;!-- 主要内容区域 --&gt;&#10;        &lt;div class=&quot;main-content&quot;&gt;&#10;            &lt;!-- 侧边栏 --&gt;&#10;            &lt;aside class=&quot;sidebar&quot;&gt;&#10;                &lt;nav class=&quot;nav-menu&quot;&gt;&#10;                    &lt;button class=&quot;nav-item active&quot; onclick=&quot;showSection('assessment')&quot;&gt;&#10;                        &lt;i class=&quot;icon-stethoscope&quot;&gt;&lt;/i&gt;&#10;                        ECMO评估&#10;                    &lt;/button&gt;&#10;                    &lt;button class=&quot;nav-item&quot; onclick=&quot;showSection('history')&quot;&gt;&#10;                        &lt;i class=&quot;icon-history&quot;&gt;&lt;/i&gt;&#10;                        评估历史&#10;                    &lt;/button&gt;&#10;                    &lt;button class=&quot;nav-item&quot; onclick=&quot;showSection('knowledge')&quot;&gt;&#10;                        &lt;i class=&quot;icon-book&quot;&gt;&lt;/i&gt;&#10;                        知识库&#10;                    &lt;/button&gt;&#10;                    &lt;button class=&quot;nav-item&quot; onclick=&quot;showSection('quick')&quot;&gt;&#10;                        &lt;i class=&quot;icon-zap&quot;&gt;&lt;/i&gt;&#10;                        快速评估&#10;                    &lt;/button&gt;&#10;                &lt;/nav&gt;&#10;            &lt;/aside&gt;&#10;&#10;            &lt;!-- 内容区域 --&gt;&#10;            &lt;main class=&quot;content&quot;&gt;&#10;                &lt;!-- ECMO评估页面 --&gt;&#10;                &lt;div id=&quot;assessment-section&quot; class=&quot;section active&quot;&gt;&#10;                    &lt;div class=&quot;section-header&quot;&gt;&#10;                        &lt;h2&gt;ECMO适应症评估&lt;/h2&gt;&#10;                        &lt;p class=&quot;section-desc&quot;&gt;请填写患者的详细参数进行专业ECMO评估&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;form id=&quot;ecmo-form&quot; class=&quot;assessment-form&quot;&gt;&#10;                        &lt;!-- 基本信息 --&gt;&#10;                        &lt;div class=&quot;form-group-section&quot;&gt;&#10;                            &lt;h3&gt;基本信息&lt;/h3&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;patientId&quot;&gt;患者ID&lt;/label&gt;&#10;                                    &lt;input type=&quot;text&quot; id=&quot;patientId&quot; name=&quot;patientId&quot; placeholder=&quot;自动生成或手动输入&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;age&quot;&gt;年龄 *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;age&quot; name=&quot;age&quot; required min=&quot;0&quot; max=&quot;120&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;gender&quot;&gt;性别 *&lt;/label&gt;&#10;                                    &lt;select id=&quot;gender&quot; name=&quot;gender&quot; required&gt;&#10;                                        &lt;option value=&quot;&quot;&gt;请选择&lt;/option&gt;&#10;                                        &lt;option value=&quot;男&quot;&gt;男&lt;/option&gt;&#10;                                        &lt;option value=&quot;女&quot;&gt;女&lt;/option&gt;&#10;                                    &lt;/select&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;weight&quot;&gt;体重 (kg) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;weight&quot; name=&quot;weight&quot; required min=&quot;1&quot; step=&quot;0.1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;height&quot;&gt;身高 (cm)&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;height&quot; name=&quot;height&quot; min=&quot;50&quot; step=&quot;0.1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- 生命体征 --&gt;&#10;                        &lt;div class=&quot;form-group-section&quot;&gt;&#10;                            &lt;h3&gt;生命体征&lt;/h3&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;heartRate&quot;&gt;心率 (次/分) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;heartRate&quot; name=&quot;heartRate&quot; required min=&quot;30&quot; max=&quot;200&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;systolicBP&quot;&gt;收缩压 (mmHg) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;systolicBP&quot; name=&quot;systolicBP&quot; required min=&quot;50&quot; max=&quot;250&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;diastolicBP&quot;&gt;舒张压 (mmHg) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;diastolicBP&quot; name=&quot;diastolicBP&quot; required min=&quot;30&quot; max=&quot;150&quot;&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;temperature&quot;&gt;体温 (°C)&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;temperature&quot; name=&quot;temperature&quot; min=&quot;30&quot; max=&quot;45&quot; step=&quot;0.1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;respiratoryRate&quot;&gt;呼吸频率 (次/分) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;respiratoryRate&quot; name=&quot;respiratoryRate&quot; required min=&quot;5&quot; max=&quot;60&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;oxygenSaturation&quot;&gt;血氧饱和度 (%) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;oxygenSaturation&quot; name=&quot;oxygenSaturation&quot; required min=&quot;50&quot; max=&quot;100&quot; step=&quot;0.1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- 血气分析 --&gt;&#10;                        &lt;div class=&quot;form-group-section&quot;&gt;&#10;                            &lt;h3&gt;血气分析&lt;/h3&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;ph&quot;&gt;pH *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;ph&quot; name=&quot;ph&quot; required min=&quot;6.8&quot; max=&quot;7.8&quot; step=&quot;0.01&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;pco2&quot;&gt;PCO2 (mmHg) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;pco2&quot; name=&quot;pco2&quot; required min=&quot;10&quot; max=&quot;100&quot; step=&quot;0.1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;po2&quot;&gt;PO2 (mmHg) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;po2&quot; name=&quot;po2&quot; required min=&quot;30&quot; max=&quot;500&quot; step=&quot;0.1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;hco3&quot;&gt;HCO3- (mEq/L)&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;hco3&quot; name=&quot;hco3&quot; min=&quot;5&quot; max=&quot;40&quot; step=&quot;0.1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;lactate&quot;&gt;乳酸 (mmol/L) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;lactate&quot; name=&quot;lactate&quot; required min=&quot;0.5&quot; max=&quot;20&quot; step=&quot;0.1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- 心脏功能 --&gt;&#10;                        &lt;div class=&quot;form-group-section&quot;&gt;&#10;                            &lt;h3&gt;心脏功能&lt;/h3&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;ejectionFraction&quot;&gt;射血分数 (%) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;ejectionFraction&quot; name=&quot;ejectionFraction&quot; required min=&quot;10&quot; max=&quot;80&quot; step=&quot;1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;troponinI&quot;&gt;肌钙蛋白I (ng/mL)&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;troponinI&quot; name=&quot;troponinI&quot; min=&quot;0&quot; step=&quot;0.01&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;bnp&quot;&gt;BNP (pg/mL)&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;bnp&quot; name=&quot;bnp&quot; min=&quot;0&quot; step=&quot;1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group full-width&quot;&gt;&#10;                                    &lt;label for=&quot;ecgFindings&quot;&gt;心电图表现&lt;/label&gt;&#10;                                    &lt;input type=&quot;text&quot; id=&quot;ecgFindings&quot; name=&quot;ecgFindings&quot; placeholder=&quot;如：窦性心动过速、ST段压低等&quot;&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- 临床状况 --&gt;&#10;                        &lt;div class=&quot;form-group-section&quot;&gt;&#10;                            &lt;h3&gt;临床状况&lt;/h3&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;glasgowComaScale&quot;&gt;GCS评分 *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;glasgowComaScale&quot; name=&quot;glasgowComaScale&quot; required min=&quot;3&quot; max=&quot;15&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;onVentilator&quot;&gt;机械通气&lt;/label&gt;&#10;                                    &lt;select id=&quot;onVentilator&quot; name=&quot;onVentilator&quot;&gt;&#10;                                        &lt;option value=&quot;false&quot;&gt;否&lt;/option&gt;&#10;                                        &lt;option value=&quot;true&quot;&gt;是&lt;/option&gt;&#10;                                    &lt;/select&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;onVasopressors&quot;&gt;血管活性药物&lt;/label&gt;&#10;                                    &lt;select id=&quot;onVasopressors&quot; name=&quot;onVasopressors&quot;&gt;&#10;                                        &lt;option value=&quot;false&quot;&gt;否&lt;/option&gt;&#10;                                        &lt;option value=&quot;true&quot;&gt;是&lt;/option&gt;&#10;                                    &lt;/select&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group full-width&quot;&gt;&#10;                                    &lt;label for=&quot;primaryDiagnosis&quot;&gt;主要诊断 *&lt;/label&gt;&#10;                                    &lt;input type=&quot;text&quot; id=&quot;primaryDiagnosis&quot; name=&quot;primaryDiagnosis&quot; required placeholder=&quot;如：急性心肌梗死、ARDS等&quot;&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group full-width&quot;&gt;&#10;                                    &lt;label for=&quot;clinicalPresentation&quot;&gt;临床表现&lt;/label&gt;&#10;                                    &lt;textarea id=&quot;clinicalPresentation&quot; name=&quot;clinicalPresentation&quot; rows=&quot;3&quot; placeholder=&quot;患者的主要临床症状和体征&quot;&gt;&lt;/textarea&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div class=&quot;form-actions&quot;&gt;&#10;                            &lt;button type=&quot;button&quot; class=&quot;btn-secondary&quot; onclick=&quot;resetForm()&quot;&gt;重置&lt;/button&gt;&#10;                            &lt;button type=&quot;submit&quot; class=&quot;btn-primary&quot; id=&quot;assess-btn&quot;&gt;&#10;                                &lt;i class=&quot;icon-stethoscope&quot;&gt;&lt;/i&gt;&#10;                                开始评估&#10;                            &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/form&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- 评估历史页面 --&gt;&#10;                &lt;div id=&quot;history-section&quot; class=&quot;section&quot;&gt;&#10;                    &lt;div class=&quot;section-header&quot;&gt;&#10;                        &lt;h2&gt;评估历史&lt;/h2&gt;&#10;                        &lt;p class=&quot;section-desc&quot;&gt;查看历史ECMO评估记录&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div id=&quot;history-list&quot; class=&quot;history-list&quot;&gt;&#10;                        &lt;div class=&quot;empty-state&quot;&gt;&#10;                            &lt;i class=&quot;icon-history&quot;&gt;&lt;/i&gt;&#10;                            &lt;p&gt;暂无评估记录&lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- 知识库页面 --&gt;&#10;                &lt;div id=&quot;knowledge-section&quot; class=&quot;section&quot;&gt;&#10;                    &lt;div class=&quot;section-header&quot;&gt;&#10;                        &lt;h2&gt;ECMO知识库&lt;/h2&gt;&#10;                        &lt;p class=&quot;section-desc&quot;&gt;ECMO相关临床指南和参考资料&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;knowledge-content&quot;&gt;&#10;                        &lt;div class=&quot;knowledge-card&quot;&gt;&#10;                            &lt;h3&gt;ECMO适应症&lt;/h3&gt;&#10;                            &lt;ul id=&quot;indications-list&quot;&gt;&#10;                                &lt;li&gt;急性呼吸窘迫综合征(ARDS)，P/F比&lt;100，FiO2&gt;0.9&lt;/li&gt;&#10;                                &lt;li&gt;心源性休克，药物治疗无效&lt;/li&gt;&#10;                                &lt;li&gt;急性心肌炎伴心源性休克&lt;/li&gt;&#10;                            &lt;/ul&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;knowledge-card&quot;&gt;&#10;                            &lt;h3&gt;ECMO禁忌症&lt;/h3&gt;&#10;                            &lt;ul id=&quot;contraindications-list&quot;&gt;&#10;                                &lt;li&gt;不可逆转的疾病终末期&lt;/li&gt;&#10;                                &lt;li&gt;严重的多器官功能衰竭&lt;/li&gt;&#10;                                &lt;li&gt;恶性肿瘤晚期&lt;/li&gt;&#10;                            &lt;/ul&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- 快速评估页面 --&gt;&#10;                &lt;div id=&quot;quick-section&quot; class=&quot;section&quot;&gt;&#10;                    &lt;div class=&quot;section-header&quot;&gt;&#10;                        &lt;h2&gt;快速评估&lt;/h2&gt;&#10;                        &lt;p class=&quot;section-desc&quot;&gt;基于关键指标的快速ECMO评估&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;form id=&quot;quick-form&quot; class=&quot;quick-form&quot;&gt;&#10;                        &lt;div class=&quot;form-row&quot;&gt;&#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;quickAge&quot;&gt;年龄&lt;/label&gt;&#10;                                &lt;input type=&quot;number&quot; id=&quot;quickAge&quot; name=&quot;age&quot; required&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;quickGender&quot;&gt;性别&lt;/label&gt;&#10;                                &lt;select id=&quot;quickGender&quot; name=&quot;gender&quot; required&gt;&#10;                                    &lt;option value=&quot;&quot;&gt;请选择&lt;/option&gt;&#10;                                    &lt;option value=&quot;男&quot;&gt;男&lt;/option&gt;&#10;                                    &lt;option value=&quot;女&quot;&gt;女&lt;/option&gt;&#10;                                &lt;/select&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;quickWeight&quot;&gt;体重(kg)&lt;/label&gt;&#10;                                &lt;input type=&quot;number&quot; id=&quot;quickWeight&quot; name=&quot;weight&quot; required&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;form-row&quot;&gt;&#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;quickPo2&quot;&gt;PO2(mmHg)&lt;/label&gt;&#10;                                &lt;input type=&quot;number&quot; id=&quot;quickPo2&quot; name=&quot;po2&quot; required&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;quickSpo2&quot;&gt;血氧饱和度(%)&lt;/label&gt;&#10;                                &lt;input type=&quot;number&quot; id=&quot;quickSpo2&quot; name=&quot;oxygenSaturation&quot; required&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;quickEf&quot;&gt;射血分数(%)&lt;/label&gt;&#10;                                &lt;input type=&quot;number&quot; id=&quot;quickEf&quot; name=&quot;ejectionFraction&quot; required&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;form-row&quot;&gt;&#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;quickLactate&quot;&gt;乳酸(mmol/L)&lt;/label&gt;&#10;                                &lt;input type=&quot;number&quot; id=&quot;quickLactate&quot; name=&quot;lactate&quot; required&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;quickDiagnosis&quot;&gt;主要诊断&lt;/label&gt;&#10;                                &lt;input type=&quot;text&quot; id=&quot;quickDiagnosis&quot; name=&quot;primaryDiagnosis&quot; required&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;form-actions&quot;&gt;&#10;                            &lt;button type=&quot;submit&quot; class=&quot;btn-primary&quot; id=&quot;quick-assess-btn&quot;&gt;&#10;                                &lt;i class=&quot;icon-zap&quot;&gt;&lt;/i&gt;&#10;                                快速评估&#10;                            &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/form&gt;&#10;&#10;                    &lt;!-- 快速评估结果 --&gt;&#10;                    &lt;div id=&quot;quick-result&quot; class=&quot;assessment-result&quot; style=&quot;display: none;&quot;&gt;&#10;                        &lt;h3&gt;快速评估结果&lt;/h3&gt;&#10;                        &lt;div id=&quot;quick-result-content&quot;&gt;&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/main&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;!-- 评估结果模态框 --&gt;&#10;    &lt;div id=&quot;result-modal&quot; class=&quot;modal&quot;&gt;&#10;        &lt;div class=&quot;modal-content&quot;&gt;&#10;            &lt;div class=&quot;modal-header&quot;&gt;&#10;                &lt;h2&gt;ECMO评估结果&lt;/h2&gt;&#10;                &lt;span class=&quot;close&quot; onclick=&quot;closeModal()&quot;&gt;&amp;times;&lt;/span&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;modal-body&quot; id=&quot;modal-body&quot;&gt;&#10;                &lt;!-- 评估结果内容 --&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;modal-footer&quot;&gt;&#10;                &lt;button class=&quot;btn-secondary&quot; onclick=&quot;closeModal()&quot;&gt;关闭&lt;/button&gt;&#10;                &lt;button class=&quot;btn-primary&quot; onclick=&quot;saveAssessment()&quot;&gt;保存结果&lt;/button&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;!-- 评估结果模板 --&gt;&#10;    &lt;div id=&quot;result-template&quot; style=&quot;display: none;&quot;&gt;&#10;        &lt;div class=&quot;result-summary&quot;&gt;&#10;            &lt;div class=&quot;result-header&quot;&gt;&#10;                &lt;div class=&quot;diagnosis-result&quot;&gt;&#10;                    &lt;h3 id=&quot;ecmo-recommendation&quot;&gt;ECMO诊断结果&lt;/h3&gt;&#10;                    &lt;p id=&quot;diagnosis-text&quot;&gt;诊断原因&lt;/p&gt;&#10;                &lt;/div&gt;&#10;                &lt;!-- 动态风险评分可视化 --&gt;&#10;                &lt;div class=&quot;risk-score-visual&quot;&gt;&#10;                    &lt;h4&gt;ECMO实施推荐指数&lt;/h4&gt;&#10;                    &lt;div class=&quot;risk-progress-container&quot;&gt;&#10;                        &lt;div class=&quot;risk-progress-bar&quot;&gt;&#10;                            &lt;div id=&quot;risk-progress-fill&quot; class=&quot;risk-progress-fill&quot;&gt;&lt;/div&gt;&#10;                            &lt;div class=&quot;risk-score-text&quot;&gt;&#10;                                &lt;span id=&quot;risk-score-value&quot;&gt;0&lt;/span&gt;/100&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;risk-level-indicators&quot;&gt;&#10;                            &lt;span class=&quot;risk-indicator red&quot;&gt;不推荐 (0-59)&lt;/span&gt;&#10;                            &lt;span class=&quot;risk-indicator yellow&quot;&gt;谨慎 (60-79)&lt;/span&gt;&#10;                            &lt;span class=&quot;risk-indicator green&quot;&gt;推荐 (80-100)&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div id=&quot;risk-level-badge&quot; class=&quot;risk-level-badge&quot;&gt;风险等级&lt;/div&gt;&#10;&#10;                    &lt;!-- 关键扣分点 --&gt;&#10;                    &lt;div class=&quot;key-risk-factors&quot;&gt;&#10;                        &lt;h5&gt;关键风险因素&lt;/h5&gt;&#10;                        &lt;ul id=&quot;key-risk-list&quot;&gt;&lt;/ul&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- 主要内容区域 - 优化布局 --&gt;&#10;        &lt;div class=&quot;result-main-content&quot;&gt;&#10;            &lt;!-- 4个核心输出 --&gt;&#10;            &lt;div class=&quot;core-outputs&quot;&gt;&#10;                &lt;h3&gt; 核心评估结果&lt;/h3&gt;&#10;&#10;                &lt;div class=&quot;output-card&quot;&gt;&#10;                    &lt;h4&gt; 诊断依据&lt;/h4&gt;&#10;                    &lt;p id=&quot;evidence-text&quot;&gt;&lt;/p&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;output-card&quot;&gt;&#10;                    &lt;h4&gt; 置信度评估&lt;/h4&gt;&#10;                    &lt;div class=&quot;confidence-display&quot;&gt;&#10;                        &lt;div class=&quot;confidence-bar&quot;&gt;&#10;                            &lt;div id=&quot;confidence-fill&quot; class=&quot;confidence-fill&quot;&gt;&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;span id=&quot;confidence-value&quot;&gt;0%&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- 决策支持区域 --&gt;&#10;            &lt;div class=&quot;decision-support-area&quot;&gt;&#10;                &lt;h3&gt;⚖️ 决策辅助分析&lt;/h3&gt;&#10;&#10;                &lt;!-- 决策辅助卡 --&gt;&#10;                &lt;div class=&quot;decision-support&quot;&gt;&#10;                    &lt;div class=&quot;support-section&quot;&gt;&#10;                        &lt;h4&gt;✅ 支持使用依据&lt;/h4&gt;&#10;                        &lt;ul id=&quot;support-reasons-list&quot;&gt;&lt;/ul&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div class=&quot;oppose-section&quot;&gt;&#10;                        &lt;h4&gt;⚠️ 风险注意事项&lt;/h4&gt;&#10;                        &lt;ul id=&quot;oppose-reasons-list&quot;&gt;&lt;/ul&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- 详细信息区域 - 全宽显示 --&gt;&#10;        &lt;div class=&quot;detailed-info&quot;&gt;&#10;            &lt;!-- 详细建议 --&gt;&#10;            &lt;div class=&quot;recommendations&quot;&gt;&#10;                &lt;h4&gt; 临床建议措施&lt;/h4&gt;&#10;                &lt;ul id=&quot;recommendations-list&quot;&gt;&lt;/ul&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- 专家共识引用 --&gt;&#10;            &lt;div class=&quot;guidelines&quot;&gt;&#10;                &lt;h4&gt; 权威指南参考&lt;/h4&gt;&#10;                &lt;div id=&quot;guidelines-list&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- 详细评分 --&gt;&#10;            &lt;div class=&quot;detailed-scores&quot;&gt;&#10;                &lt;h4&gt; 详细评分分析&lt;/h4&gt;&#10;                &lt;div id=&quot;scores-breakdown&quot; class=&quot;scores-breakdown&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;script src=&quot;/static/ecmo-expert.js&quot;&gt;&lt;/script&gt;&#10;    &lt;script&gt;&#10;        // 全局函数&#10;        function showSection(section) {&#10;            window.ecmoSystem.showSection(section);&#10;        }&#10;&#10;        function resetForm() {&#10;            document.getElementById('ecmo-form').reset();&#10;            window.ecmoSystem.setDefaultValues();&#10;        }&#10;&#10;        function closeModal() {&#10;            window.ecmoSystem.closeModal();&#10;        }&#10;&#10;        function saveAssessment() {&#10;            window.ecmoSystem.saveCurrentAssessment();&#10;        }&#10;&#10;        function deleteAssessment(assessmentId) {&#10;            window.ecmoSystem.deleteAssessment(assessmentId);&#10;        }&#10;&#10;        function logout() {&#10;            localStorage.removeItem('username');&#10;            window.location.href = '/static/login.html';&#10;        }&#10;&#10;        // 初始化系统&#10;        window.addEventListener('DOMContentLoaded', () =&gt; {&#10;            window.ecmoSystem = new ECMOExpertSystem();&#10;        });&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;zh-CN&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;ECMO诊疗专家系统&lt;/title&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/ecmo-expert.css&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;!-- 头部 --&gt;&#10;        &lt;header class=&quot;header&quot;&gt;&#10;            &lt;div class=&quot;header-content&quot;&gt;&#10;                &lt;h1&gt;&lt;i class=&quot;icon-heart&quot;&gt;&lt;/i&gt; ECMO诊疗专家系统&lt;/h1&gt;&#10;                &lt;div class=&quot;user-info&quot;&gt;&#10;                    &lt;span id=&quot;username&quot;&gt;医生用户&lt;/span&gt;&#10;                    &lt;button class=&quot;btn-logout&quot; onclick=&quot;logout()&quot;&gt;退出&lt;/button&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/header&gt;&#10;&#10;        &lt;!-- 主要内容区域 --&gt;&#10;        &lt;div class=&quot;main-content&quot;&gt;&#10;            &lt;!-- 侧边栏 --&gt;&#10;            &lt;aside class=&quot;sidebar&quot;&gt;&#10;                &lt;nav class=&quot;nav-menu&quot;&gt;&#10;                    &lt;button class=&quot;nav-item active&quot; onclick=&quot;showSection('assessment')&quot;&gt;&#10;                        &lt;i class=&quot;icon-stethoscope&quot;&gt;&lt;/i&gt;&#10;                        ECMO评估&#10;                    &lt;/button&gt;&#10;                    &lt;button class=&quot;nav-item&quot; onclick=&quot;showSection('history')&quot;&gt;&#10;                        &lt;i class=&quot;icon-history&quot;&gt;&lt;/i&gt;&#10;                        评估历史&#10;                    &lt;/button&gt;&#10;                    &lt;button class=&quot;nav-item&quot; onclick=&quot;showSection('knowledge')&quot;&gt;&#10;                        &lt;i class=&quot;icon-book&quot;&gt;&lt;/i&gt;&#10;                        知识库&#10;                    &lt;/button&gt;&#10;                    &lt;button class=&quot;nav-item&quot; onclick=&quot;showSection('quick')&quot;&gt;&#10;                        &lt;i class=&quot;icon-zap&quot;&gt;&lt;/i&gt;&#10;                        快速评估&#10;                    &lt;/button&gt;&#10;                &lt;/nav&gt;&#10;            &lt;/aside&gt;&#10;&#10;            &lt;!-- 内容区域 --&gt;&#10;            &lt;main class=&quot;content&quot;&gt;&#10;                &lt;!-- ECMO评估页面 --&gt;&#10;                &lt;div id=&quot;assessment-section&quot; class=&quot;section active&quot;&gt;&#10;                    &lt;div class=&quot;section-header&quot;&gt;&#10;                        &lt;h2&gt;ECMO适应症评估&lt;/h2&gt;&#10;                        &lt;p class=&quot;section-desc&quot;&gt;请填写患者的详细参数进行专业ECMO评估&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;form id=&quot;ecmo-form&quot; class=&quot;assessment-form&quot;&gt;&#10;                        &lt;!-- 基本信息 --&gt;&#10;                        &lt;div class=&quot;form-group-section&quot;&gt;&#10;                            &lt;h3&gt;基本信息&lt;/h3&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;patientId&quot;&gt;患者ID&lt;/label&gt;&#10;                                    &lt;input type=&quot;text&quot; id=&quot;patientId&quot; name=&quot;patientId&quot; placeholder=&quot;自动生成或手动输入&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;age&quot;&gt;年龄 *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;age&quot; name=&quot;age&quot; required min=&quot;0&quot; max=&quot;120&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;gender&quot;&gt;性别 *&lt;/label&gt;&#10;                                    &lt;select id=&quot;gender&quot; name=&quot;gender&quot; required&gt;&#10;                                        &lt;option value=&quot;&quot;&gt;请选择&lt;/option&gt;&#10;                                        &lt;option value=&quot;男&quot;&gt;男&lt;/option&gt;&#10;                                        &lt;option value=&quot;女&quot;&gt;女&lt;/option&gt;&#10;                                    &lt;/select&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;weight&quot;&gt;体重 (kg) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;weight&quot; name=&quot;weight&quot; required min=&quot;1&quot; step=&quot;0.1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;height&quot;&gt;身高 (cm)&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;height&quot; name=&quot;height&quot; min=&quot;50&quot; step=&quot;0.1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- 生命体征 --&gt;&#10;                        &lt;div class=&quot;form-group-section&quot;&gt;&#10;                            &lt;h3&gt;生命体征&lt;/h3&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;heartRate&quot;&gt;心率 (次/分) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;heartRate&quot; name=&quot;heartRate&quot; required min=&quot;30&quot; max=&quot;200&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;systolicBP&quot;&gt;收缩压 (mmHg) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;systolicBP&quot; name=&quot;systolicBP&quot; required min=&quot;50&quot; max=&quot;250&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;diastolicBP&quot;&gt;舒张压 (mmHg) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;diastolicBP&quot; name=&quot;diastolicBP&quot; required min=&quot;30&quot; max=&quot;150&quot;&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;temperature&quot;&gt;体温 (°C)&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;temperature&quot; name=&quot;temperature&quot; min=&quot;30&quot; max=&quot;45&quot; step=&quot;0.1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;respiratoryRate&quot;&gt;呼吸频率 (次/分) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;respiratoryRate&quot; name=&quot;respiratoryRate&quot; required min=&quot;5&quot; max=&quot;60&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;oxygenSaturation&quot;&gt;血氧饱和度 (%) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;oxygenSaturation&quot; name=&quot;oxygenSaturation&quot; required min=&quot;50&quot; max=&quot;100&quot; step=&quot;0.1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- 血气分析 --&gt;&#10;                        &lt;div class=&quot;form-group-section&quot;&gt;&#10;                            &lt;h3&gt;血气分析&lt;/h3&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;ph&quot;&gt;pH *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;ph&quot; name=&quot;ph&quot; required min=&quot;6.8&quot; max=&quot;7.8&quot; step=&quot;0.01&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;pco2&quot;&gt;PCO2 (mmHg) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;pco2&quot; name=&quot;pco2&quot; required min=&quot;10&quot; max=&quot;100&quot; step=&quot;0.1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;po2&quot;&gt;PO2 (mmHg) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;po2&quot; name=&quot;po2&quot; required min=&quot;30&quot; max=&quot;500&quot; step=&quot;0.1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;hco3&quot;&gt;HCO3- (mEq/L)&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;hco3&quot; name=&quot;hco3&quot; min=&quot;5&quot; max=&quot;40&quot; step=&quot;0.1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;lactate&quot;&gt;乳酸 (mmol/L) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;lactate&quot; name=&quot;lactate&quot; required min=&quot;0.5&quot; max=&quot;20&quot; step=&quot;0.1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- 心脏功能 --&gt;&#10;                        &lt;div class=&quot;form-group-section&quot;&gt;&#10;                            &lt;h3&gt;心脏功能&lt;/h3&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;ejectionFraction&quot;&gt;射血分数 (%) *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;ejectionFraction&quot; name=&quot;ejectionFraction&quot; required min=&quot;10&quot; max=&quot;80&quot; step=&quot;1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;troponinI&quot;&gt;肌钙蛋白I (ng/mL)&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;troponinI&quot; name=&quot;troponinI&quot; min=&quot;0&quot; step=&quot;0.01&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;bnp&quot;&gt;BNP (pg/mL)&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;bnp&quot; name=&quot;bnp&quot; min=&quot;0&quot; step=&quot;1&quot;&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group full-width&quot;&gt;&#10;                                    &lt;label for=&quot;ecgFindings&quot;&gt;心电图表现&lt;/label&gt;&#10;                                    &lt;input type=&quot;text&quot; id=&quot;ecgFindings&quot; name=&quot;ecgFindings&quot; placeholder=&quot;如：窦性心动过速、ST段压低等&quot;&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- 临床状况 --&gt;&#10;                        &lt;div class=&quot;form-group-section&quot;&gt;&#10;                            &lt;h3&gt;临床状况&lt;/h3&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;glasgowComaScale&quot;&gt;GCS评分 *&lt;/label&gt;&#10;                                    &lt;input type=&quot;number&quot; id=&quot;glasgowComaScale&quot; name=&quot;glasgowComaScale&quot; required min=&quot;3&quot; max=&quot;15&quot;&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;onVentilator&quot;&gt;机械通气&lt;/label&gt;&#10;                                    &lt;select id=&quot;onVentilator&quot; name=&quot;onVentilator&quot;&gt;&#10;                                        &lt;option value=&quot;false&quot;&gt;否&lt;/option&gt;&#10;                                        &lt;option value=&quot;true&quot;&gt;是&lt;/option&gt;&#10;                                    &lt;/select&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div class=&quot;form-group&quot;&gt;&#10;                                    &lt;label for=&quot;onVasopressors&quot;&gt;血管活性药物&lt;/label&gt;&#10;                                    &lt;select id=&quot;onVasopressors&quot; name=&quot;onVasopressors&quot;&gt;&#10;                                        &lt;option value=&quot;false&quot;&gt;否&lt;/option&gt;&#10;                                        &lt;option value=&quot;true&quot;&gt;是&lt;/option&gt;&#10;                                    &lt;/select&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group full-width&quot;&gt;&#10;                                    &lt;label for=&quot;primaryDiagnosis&quot;&gt;主要诊断 *&lt;/label&gt;&#10;                                    &lt;input type=&quot;text&quot; id=&quot;primaryDiagnosis&quot; name=&quot;primaryDiagnosis&quot; required placeholder=&quot;如：急性心肌梗死、ARDS等&quot;&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-row&quot;&gt;&#10;                                &lt;div class=&quot;form-group full-width&quot;&gt;&#10;                                    &lt;label for=&quot;clinicalPresentation&quot;&gt;临床表现&lt;/label&gt;&#10;                                    &lt;textarea id=&quot;clinicalPresentation&quot; name=&quot;clinicalPresentation&quot; rows=&quot;3&quot; placeholder=&quot;患者的主要临床症状和体征&quot;&gt;&lt;/textarea&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div class=&quot;form-actions&quot;&gt;&#10;                            &lt;button type=&quot;button&quot; class=&quot;btn-secondary&quot; onclick=&quot;resetForm()&quot;&gt;重置&lt;/button&gt;&#10;                            &lt;button type=&quot;submit&quot; class=&quot;btn-primary&quot; id=&quot;assess-btn&quot;&gt;&#10;                                &lt;i class=&quot;icon-stethoscope&quot;&gt;&lt;/i&gt;&#10;                                开始评估&#10;                            &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/form&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- 评估历史页面 --&gt;&#10;                &lt;div id=&quot;history-section&quot; class=&quot;section&quot;&gt;&#10;                    &lt;div class=&quot;section-header&quot;&gt;&#10;                        &lt;h2&gt;评估历史&lt;/h2&gt;&#10;                        &lt;p class=&quot;section-desc&quot;&gt;查看历史ECMO评估记录&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div id=&quot;history-list&quot; class=&quot;history-list&quot;&gt;&#10;                        &lt;div class=&quot;empty-state&quot;&gt;&#10;                            &lt;i class=&quot;icon-history&quot;&gt;&lt;/i&gt;&#10;                            &lt;p&gt;暂无评估记录&lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- ECMO诊疗数据库页面 --&gt;&#10;                &lt;div id=&quot;knowledge-section&quot; class=&quot;section&quot;&gt;&#10;                    &lt;div class=&quot;section-header&quot;&gt;&#10;                        &lt;h2&gt; ECMO诊疗数据库&lt;/h2&gt;&#10;                        &lt;p class=&quot;section-desc&quot;&gt;全面的ECMO临床数据、指南标准和诊疗参考&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;knowledge-content&quot;&gt;&#10;                        &lt;!-- 适应症与禁忌症 --&gt;&#10;                        &lt;div class=&quot;knowledge-category&quot;&gt;&#10;                            &lt;div class=&quot;category-header&quot;&gt;&#10;                                &lt;h3&gt; 适应症与禁忌症&lt;/h3&gt;&#10;                                &lt;p&gt;基于国际权威指南的ECMO使用标准&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;category-content&quot;&gt;&#10;                                &lt;div class=&quot;data-grid&quot;&gt;&#10;                                    &lt;div class=&quot;data-item&quot;&gt;&#10;                                        &lt;h4&gt;&lt;span class=&quot;icon&quot;&gt;✓&lt;/span&gt;呼吸系统适应症&lt;/h4&gt;&#10;                                        &lt;ul&gt;&#10;                                            &lt;li&gt;严重ARDS: P/F比 &lt; 80，持续6小时以上&lt;/li&gt;&#10;                                            &lt;li&gt;难治性呼吸衰竭: FiO2 &gt; 90%，PEEP ≥ 15cmH2O&lt;/li&gt;&#10;                                            &lt;li&gt;肺移植术后原发性移植物功能障碍&lt;/li&gt;&#10;                                            &lt;li&gt;支气管胸膜瘘伴严重呼吸衰竭&lt;/li&gt;&#10;                                            &lt;li&gt;严重哮喘持续状态&lt;/li&gt;&#10;                                            &lt;li&gt;肺出血伴呼吸衰竭&lt;/li&gt;&#10;                                        &lt;/ul&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;data-item&quot;&gt;&#10;                                        &lt;h4&gt;&lt;span class=&quot;icon&quot;&gt;♥&lt;/span&gt;循环系统适应症&lt;/h4&gt;&#10;                                        &lt;ul&gt;&#10;                                            &lt;li&gt;心源性休克: CI &lt; 2.2L/min/m²&lt;/li&gt;&#10;                                            &lt;li&gt;急性心肌梗死并发心源性休克&lt;/li&gt;&#10;                                            &lt;li&gt;暴发性心肌炎&lt;/li&gt;&#10;                                            &lt;li&gt;心脏术后低心排综合征&lt;/li&gt;&#10;                                            &lt;li&gt;心脏骤停后综合征&lt;/li&gt;&#10;                                            &lt;li&gt;药物中毒致心脏停跳&lt;/li&gt;&#10;                                        &lt;/ul&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;data-item&quot;&gt;&#10;                                        &lt;h4&gt;&lt;span class=&quot;icon&quot;&gt;⚠&lt;/span&gt;绝对禁忌症&lt;/h4&gt;&#10;                                        &lt;ul&gt;&#10;                                            &lt;li&gt;不可逆转的疾病终末期&lt;/li&gt;&#10;                                            &lt;li&gt;晚期恶性肿瘤(预期生存期&lt;6个月)&lt;/li&gt;&#10;                                            &lt;li&gt;严重不可逆性脑损伤&lt;/li&gt;&#10;                                            &lt;li&gt;不可控制的出血&lt;/li&gt;&#10;                                            &lt;li&gt;严重免疫缺陷病&lt;/li&gt;&#10;                                            &lt;li&gt;患者/家属拒绝&lt;/li&gt;&#10;                                        &lt;/ul&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;data-item&quot;&gt;&#10;                                        &lt;h4&gt;&lt;span class=&quot;icon&quot;&gt;!&lt;/span&gt;相对禁忌症&lt;/h4&gt;&#10;                                        &lt;ul&gt;&#10;                                            &lt;li&gt;年龄 &gt; 75岁&lt;/li&gt;&#10;                                            &lt;li&gt;机械通气 &gt; 7天&lt;/li&gt;&#10;                                            &lt;li&gt;多器官功能衰竭 &gt; 48小时&lt;/li&gt;&#10;                                            &lt;li&gt;不可逆性神经系统疾病&lt;/li&gt;&#10;                                            &lt;li&gt;严重外周血管疾病&lt;/li&gt;&#10;                                            &lt;li&gt;严重肥胖(BMI &gt; 40)&lt;/li&gt;&#10;                                        &lt;/ul&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                                &#10;                                &lt;div class=&quot;knowledge-alert&quot;&gt;&#10;                                    &lt;h4&gt;⚠️ 重要提醒&lt;/h4&gt;&#10;                                    &lt;p&gt;ECMO适应症评估需要多学科团队讨论，综合考虑患者的基础疾病、预后、家庭意愿等多方面因素。&lt;/p&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- 临床参数标准 --&gt;&#10;                        &lt;div class=&quot;knowledge-category&quot;&gt;&#10;                            &lt;div class=&quot;category-header&quot;&gt;&#10;                                &lt;h3&gt; 临床参数标准&lt;/h3&gt;&#10;                                &lt;p&gt;ECMO评估关键指标的正常值与异常标准&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;category-content&quot;&gt;&#10;                                &lt;table class=&quot;parameter-table&quot;&gt;&#10;                                    &lt;thead&gt;&#10;                                        &lt;tr&gt;&#10;                                            &lt;th&gt;参数&lt;/th&gt;&#10;                                            &lt;th&gt;正常范围&lt;/th&gt;&#10;                                            &lt;th&gt;ECMO考虑值&lt;/th&gt;&#10;                                            &lt;th&gt;紧急指征值&lt;/th&gt;&#10;                                        &lt;/tr&gt;&#10;                                    &lt;/thead&gt;&#10;                                    &lt;tbody&gt;&#10;                                        &lt;tr&gt;&#10;                                            &lt;td&gt;P/F比值&lt;/td&gt;&#10;                                            &lt;td&gt;&gt; 300&lt;/td&gt;&#10;                                            &lt;td&gt;100-150&lt;/td&gt;&#10;                                            &lt;td&gt;&lt; 80&lt;/td&gt;&#10;                                        &lt;/tr&gt;&#10;                                        &lt;tr&gt;&#10;                                            &lt;td&gt;左室射血分数(%)&lt;/td&gt;&#10;                                            &lt;td&gt;55-70&lt;/td&gt;&#10;                                            &lt;td&gt;20-30&lt;/td&gt;&#10;                                            &lt;td&gt;&lt; 20&lt;/td&gt;&#10;                                        &lt;/tr&gt;&#10;                                        &lt;tr&gt;&#10;                                            &lt;td&gt;心脏指数(L/min/m²)&lt;/td&gt;&#10;                                            &lt;td&gt;2.5-4.0&lt;/td&gt;&#10;                                            &lt;td&gt;1.8-2.2&lt;/td&gt;&#10;                                            &lt;td&gt;&lt; 1.8&lt;/td&gt;&#10;                                        &lt;/tr&gt;&#10;                                        &lt;tr&gt;&#10;                                            &lt;td&gt;乳酸(mmol/L)&lt;/td&gt;&#10;                                            &lt;td&gt;0.5-2.2&lt;/td&gt;&#10;                                            &lt;td&gt;4.0-8.0&lt;/td&gt;&#10;                                            &lt;td&gt;&gt; 10&lt;/td&gt;&#10;                                        &lt;/tr&gt;&#10;                                        &lt;tr&gt;&#10;                                            &lt;td&gt;pH值&lt;/td&gt;&#10;                                            &lt;td&gt;7.35-7.45&lt;/td&gt;&#10;                                            &lt;td&gt;7.20-7.30&lt;/td&gt;&#10;                                            &lt;td&gt;&lt; 7.20&lt;/td&gt;&#10;                                        &lt;/tr&gt;&#10;                                        &lt;tr&gt;&#10;                                            &lt;td&gt;中心静脉氧饱和度(%)&lt;/td&gt;&#10;                                            &lt;td&gt;65-70&lt;/td&gt;&#10;                                            &lt;td&gt;50-60&lt;/td&gt;&#10;                                            &lt;td&gt;&lt; 50&lt;/td&gt;&#10;                                        &lt;/tr&gt;&#10;                                    &lt;/tbody&gt;&#10;                                &lt;/table&gt;&#10;&#10;                                &lt;div class=&quot;stats-grid&quot;&gt;&#10;                                    &lt;div class=&quot;stat-card&quot;&gt;&#10;                                        &lt;div class=&quot;stat-number&quot;&gt;24-48h&lt;/div&gt;&#10;                                        &lt;div class=&quot;stat-label&quot;&gt;最佳启动时机&lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;stat-card&quot;&gt;&#10;                                        &lt;div class=&quot;stat-number&quot;&gt;70-85%&lt;/div&gt;&#10;                                        &lt;div class=&quot;stat-label&quot;&gt;成功脱机率&lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;stat-card&quot;&gt;&#10;                                        &lt;div class=&quot;stat-number&quot;&gt;45-65%&lt;/div&gt;&#10;                                        &lt;div class=&quot;stat-label&quot;&gt;总体生存率&lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;stat-card&quot;&gt;&#10;                                        &lt;div class=&quot;stat-number&quot;&gt;3-14天&lt;/div&gt;&#10;                                        &lt;div class=&quot;stat-label&quot;&gt;平均支持时间&lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- 并发症管理 --&gt;&#10;                        &lt;div class=&quot;knowledge-category&quot;&gt;&#10;                            &lt;div class=&quot;category-header&quot;&gt;&#10;                                &lt;h3&gt;⚕️ 并发症管理&lt;/h3&gt;&#10;                                &lt;p&gt;ECMO常见并发症的预防、识别与处理策略&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;category-content&quot;&gt;&#10;                                &lt;div class=&quot;data-grid&quot;&gt;&#10;                                    &lt;div class=&quot;data-item&quot;&gt;&#10;                                        &lt;h4&gt;&lt;span class=&quot;icon&quot;&gt;&lt;/span&gt;出血并发症&lt;/h4&gt;&#10;                                        &lt;p&gt;&lt;strong&gt;发生率:&lt;/strong&gt; 30-50%&lt;/p&gt;&#10;                                        &lt;ul&gt;&#10;                                            &lt;li&gt;颅内出血: 最严重，发生率3-8%&lt;/li&gt;&#10;                                            &lt;li&gt;胃肠道出血: 常见，需要内镜检查&lt;/li&gt;&#10;                                            &lt;li&gt;插管部位出血: 局部压迫止血&lt;/li&gt;&#10;                                            &lt;li&gt;手术部位出血: 可能需要再次手术&lt;/li&gt;&#10;                                        &lt;/ul&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;data-item&quot;&gt;&#10;                                        &lt;h4&gt;&lt;span class=&quot;icon&quot;&gt;&lt;/span&gt;神经系统并发症&lt;/h4&gt;&#10;                                        &lt;p&gt;&lt;strong&gt;发生率:&lt;/strong&gt; 10-15%&lt;/p&gt;&#10;                                        &lt;ul&gt;&#10;                                            &lt;li&gt;脑梗塞: 血栓栓塞所致&lt;/li&gt;&#10;                                            &lt;li&gt;脑出血: 抗凝过度或血小板减少&lt;/li&gt;&#10;                                            &lt;li&gt;癫痫: 脑血流灌注异常&lt;/li&gt;&#10;                                            &lt;li&gt;意识障碍: 多因素导致&lt;/li&gt;&#10;                                        &lt;/ul&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;data-item&quot;&gt;&#10;                                        &lt;h4&gt;&lt;span class=&quot;icon&quot;&gt;&lt;/span&gt;循环系统并发症&lt;/h4&gt;&#10;                                        &lt;p&gt;&lt;strong&gt;发生率:&lt;/strong&gt; 20-30%&lt;/p&gt;&#10;                                        &lt;ul&gt;&#10;                                            &lt;li&gt;下肢缺血: 插管侧血流减少&lt;/li&gt;&#10;                                            &lt;li&gt;血栓形成: 回路内凝血激活&lt;/li&gt;&#10;                                            &lt;li&gt;心律失常: 心肌缺血或电解质紊乱&lt;/li&gt;&#10;                                            &lt;li&gt;心包积液: 心脏手术后常见&lt;/li&gt;&#10;                                        &lt;/ul&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;data-item&quot;&gt;&#10;                                        &lt;h4&gt;&lt;span class=&quot;icon&quot;&gt;&lt;/span&gt;感染并发症&lt;/h4&gt;&#10;                                        &lt;p&gt;&lt;strong&gt;发生率:&lt;/strong&gt; 15-25%&lt;/p&gt;&#10;                                        &lt;ul&gt;&#10;                                            &lt;li&gt;导管相关血流感染: 最常见&lt;/li&gt;&#10;                                            &lt;li&gt;呼吸机相关肺炎: VAP风险增加&lt;/li&gt;&#10;                                            &lt;li&gt;泌尿系感染: 留置导尿管所致&lt;/li&gt;&#10;                                            &lt;li&gt;手术切口感染: 免疫功能下降&lt;/li&gt;&#10;                                        &lt;/ul&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- 权威指南引用 --&gt;&#10;                        &lt;div class=&quot;knowledge-category&quot;&gt;&#10;                            &lt;div class=&quot;category-header&quot;&gt;&#10;                                &lt;h3&gt; 权威指南引用&lt;/h3&gt;&#10;                                &lt;p&gt;国际国内ECMO相关权威指南与专家共识&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;category-content&quot;&gt;&#10;                                &lt;div class=&quot;data-grid&quot;&gt;&#10;                                    &lt;div class=&quot;data-item&quot;&gt;&#10;                                        &lt;h4&gt;&lt;span class=&quot;icon&quot;&gt;&lt;/span&gt;ELSO指南 2017版&lt;/h4&gt;&#10;                                        &lt;p&gt;体外生命支持组织(ELSO)制定的国际权威指南，涵盖成人、儿童ECMO的适应症、禁忌症、管理要点等。&lt;/p&gt;&#10;                                        &lt;ul&gt;&#10;                                            &lt;li&gt;成人呼吸ECMO指南&lt;/li&gt;&#10;                                            &lt;li&gt;成人心脏ECMO指南&lt;/li&gt;&#10;                                            &lt;li&gt;ECMO质量管理标准&lt;/li&gt;&#10;                                        &lt;/ul&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;data-item&quot;&gt;&#10;                                        &lt;h4&gt;&lt;span class=&quot;icon&quot;&gt;&lt;/span&gt;中国ECMO专家共识&lt;/h4&gt;&#10;                                        &lt;p&gt;中国体外膜肺氧合临床应用专家共识(2018版)，结合国情制定的临床应用标准。&lt;/p&gt;&#10;                                        &lt;ul&gt;&#10;                                            &lt;li&gt;适应症与禁忌症&lt;/li&gt;&#10;                                            &lt;li&gt;团队建设要求&lt;/li&gt;&#10;                                            &lt;li&gt;质量控制标准&lt;/li&gt;&#10;                                        &lt;/ul&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;data-item&quot;&gt;&#10;                                        &lt;h4&gt;&lt;span class=&quot;icon&quot;&gt;&lt;/span&gt;欧洲重症医学会&lt;/h4&gt;&#10;                                        &lt;p&gt;ESICM发布的ECMO在重症患者中的应用指南，强调循证医学证据。&lt;/p&gt;&#10;                                        &lt;ul&gt;&#10;                                            &lt;li&gt;患者选择标准&lt;/li&gt;&#10;                                            &lt;li&gt;脱机策略&lt;/li&gt;&#10;                                            &lt;li&gt;并发症预防&lt;/li&gt;&#10;                                        &lt;/ul&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;data-item&quot;&gt;&#10;                                        &lt;h4&gt;&lt;span class=&quot;icon&quot;&gt;&lt;/span&gt;美国重症医学会&lt;/h4&gt;&#10;                                        &lt;p&gt;SCCM制定的ECMO临床实践指南，注重多学科团队协作。&lt;/p&gt;&#10;                                        &lt;ul&gt;&#10;                                            &lt;li&gt;团队培训要求&lt;/li&gt;&#10;                                            &lt;li&gt;设备配置标准&lt;/li&gt;&#10;                                            &lt;li&gt;伦理决策框架&lt;/li&gt;&#10;                                        &lt;/ul&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;&#10;                                &lt;div class=&quot;knowledge-success&quot;&gt;&#10;                                    &lt;h4&gt;✅ 循证医学证据&lt;/h4&gt;&#10;                                    &lt;p&gt;以上指南均基于大量临床研究和荟萃分析，为ECMO临床应用提供了科学依据。建议临床医生结合患者具体情况，参照相关指南进行决策。&lt;/p&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;!-- 最新研究进展 --&gt;&#10;                        &lt;div class=&quot;knowledge-category&quot;&gt;&#10;                            &lt;div class=&quot;category-header&quot;&gt;&#10;                                &lt;h3&gt; 最新研究进展&lt;/h3&gt;&#10;                                &lt;p&gt;ECMO领域的前沿研究与技术发展&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;category-content&quot;&gt;&#10;                                &lt;div class=&quot;data-grid&quot;&gt;&#10;                                    &lt;div class=&quot;data-item&quot;&gt;&#10;                                        &lt;h4&gt;&lt;span class=&quot;icon&quot;&gt;&lt;/span&gt;药物治疗优化&lt;/h4&gt;&#10;                                        &lt;ul&gt;&#10;                                            &lt;li&gt;ECMO期间药代动力学变化研究&lt;/li&gt;&#10;                                            &lt;li&gt;新型抗凝药物在ECMO中的应用&lt;/li&gt;&#10;                                            &lt;li&gt;镇静镇痛药物的剂量调整策略&lt;/li&gt;&#10;                                            &lt;li&gt;血管活性药物的合理使用&lt;/li&gt;&#10;                                        &lt;/ul&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;data-item&quot;&gt;&#10;                                        &lt;h4&gt;&lt;span class=&quot;icon&quot;&gt;&lt;/span&gt;人工智能应用&lt;/h4&gt;&#10;                                        &lt;ul&gt;&#10;                                            &lt;li&gt;机器学习预测ECMO成功率&lt;/li&gt;&#10;                                            &lt;li&gt;智能监测系统预警并发症&lt;/li&gt;&#10;                                            &lt;li&gt;自动化参数调节系统&lt;/li&gt;&#10;                                            &lt;li&gt;大数据分析优化治疗方案&lt;/li&gt;&#10;                                        &lt;/ul&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;data-item&quot;&gt;&#10;                                        &lt;h4&gt;&lt;span class=&quot;icon&quot;&gt;️&lt;/span&gt;设备技术创新&lt;/h4&gt;&#10;                                        &lt;ul&gt;&#10;                                            &lt;li&gt;新型氧合器技术&lt;/li&gt;&#10;                                            &lt;li&gt;微型化ECMO设备&lt;/li&gt;&#10;                                            &lt;li&gt;生物相容性材料应用&lt;/li&gt;&#10;                                            &lt;li&gt;远程监控技术&lt;/li&gt;&#10;                                        &lt;/ul&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;data-item&quot;&gt;&#10;                                        &lt;h4&gt;&lt;span class=&quot;icon&quot;&gt;&lt;/span&gt;临床管理改进&lt;/h4&gt;&#10;                                        &lt;ul&gt;&#10;                                            &lt;li&gt;早期活动与康复策略&lt;/li&gt;&#10;                                            &lt;li&gt;营养支持优化方案&lt;/li&gt;&#10;                                            &lt;li&gt;心理支持与家属沟通&lt;/li&gt;&#10;                                            &lt;li&gt;多学科协作模式创新&lt;/li&gt;&#10;                                        &lt;/ul&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- 快速评估页面 --&gt;&#10;                &lt;div id=&quot;quick-section&quot; class=&quot;section&quot;&gt;&#10;                    &lt;div class=&quot;section-header&quot;&gt;&#10;                        &lt;h2&gt;快速评估&lt;/h2&gt;&#10;                        &lt;p class=&quot;section-desc&quot;&gt;基于关键指标的快速ECMO评估&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;form id=&quot;quick-form&quot; class=&quot;quick-form&quot;&gt;&#10;                        &lt;div class=&quot;form-row&quot;&gt;&#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;quickAge&quot;&gt;年龄&lt;/label&gt;&#10;                                &lt;input type=&quot;number&quot; id=&quot;quickAge&quot; name=&quot;age&quot; required&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;quickGender&quot;&gt;性别&lt;/label&gt;&#10;                                &lt;select id=&quot;quickGender&quot; name=&quot;gender&quot; required&gt;&#10;                                    &lt;option value=&quot;&quot;&gt;请选择&lt;/option&gt;&#10;                                    &lt;option value=&quot;男&quot;&gt;男&lt;/option&gt;&#10;                                    &lt;option value=&quot;女&quot;&gt;女&lt;/option&gt;&#10;                                &lt;/select&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;quickWeight&quot;&gt;体重(kg)&lt;/label&gt;&#10;                                &lt;input type=&quot;number&quot; id=&quot;quickWeight&quot; name=&quot;weight&quot; required&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;form-row&quot;&gt;&#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;quickPo2&quot;&gt;PO2(mmHg)&lt;/label&gt;&#10;                                &lt;input type=&quot;number&quot; id=&quot;quickPo2&quot; name=&quot;po2&quot; required&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;quickSpo2&quot;&gt;血氧饱和度(%)&lt;/label&gt;&#10;                                &lt;input type=&quot;number&quot; id=&quot;quickSpo2&quot; name=&quot;oxygenSaturation&quot; required&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;quickEf&quot;&gt;射血分数(%)&lt;/label&gt;&#10;                                &lt;input type=&quot;number&quot; id=&quot;quickEf&quot; name=&quot;ejectionFraction&quot; required&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;form-row&quot;&gt;&#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;quickLactate&quot;&gt;乳酸(mmol/L)&lt;/label&gt;&#10;                                &lt;input type=&quot;number&quot; id=&quot;quickLactate&quot; name=&quot;lactate&quot; required&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;form-group&quot;&gt;&#10;                                &lt;label for=&quot;quickDiagnosis&quot;&gt;主要诊断&lt;/label&gt;&#10;                                &lt;input type=&quot;text&quot; id=&quot;quickDiagnosis&quot; name=&quot;primaryDiagnosis&quot; required&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;form-actions&quot;&gt;&#10;                            &lt;button type=&quot;submit&quot; class=&quot;btn-primary&quot; id=&quot;quick-assess-btn&quot;&gt;&#10;                                &lt;i class=&quot;icon-zap&quot;&gt;&lt;/i&gt;&#10;                                快速评估&#10;                            &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/form&gt;&#10;&#10;                    &lt;!-- 快速评估结果 --&gt;&#10;                    &lt;div id=&quot;quick-result&quot; class=&quot;assessment-result&quot; style=&quot;display: none;&quot;&gt;&#10;                        &lt;h3&gt;快速评估结果&lt;/h3&gt;&#10;                        &lt;div id=&quot;quick-result-content&quot;&gt;&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/main&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;!-- 评估结果模态框 --&gt;&#10;    &lt;div id=&quot;result-modal&quot; class=&quot;modal&quot;&gt;&#10;        &lt;div class=&quot;modal-content&quot;&gt;&#10;            &lt;div class=&quot;modal-header&quot;&gt;&#10;                &lt;h2&gt;ECMO评估结果&lt;/h2&gt;&#10;                &lt;span class=&quot;close&quot; onclick=&quot;closeModal()&quot;&gt;&amp;times;&lt;/span&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;modal-body&quot; id=&quot;modal-body&quot;&gt;&#10;                &lt;!-- 评估结果内容 --&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;modal-footer&quot;&gt;&#10;                &lt;button class=&quot;btn-secondary&quot; onclick=&quot;closeModal()&quot;&gt;关闭&lt;/button&gt;&#10;                &lt;button class=&quot;btn-primary&quot; onclick=&quot;saveAssessment()&quot;&gt;保存结果&lt;/button&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;!-- 评估结果模板 --&gt;&#10;    &lt;div id=&quot;result-template&quot; style=&quot;display: none;&quot;&gt;&#10;        &lt;div class=&quot;result-summary&quot;&gt;&#10;            &lt;div class=&quot;result-header&quot;&gt;&#10;                &lt;div class=&quot;diagnosis-result&quot;&gt;&#10;                    &lt;h3 id=&quot;ecmo-recommendation&quot;&gt;ECMO诊断结果&lt;/h3&gt;&#10;                    &lt;p id=&quot;diagnosis-text&quot;&gt;诊断原因&lt;/p&gt;&#10;                &lt;/div&gt;&#10;                &lt;!-- 动态风险评分可视化 --&gt;&#10;                &lt;div class=&quot;risk-score-visual&quot;&gt;&#10;                    &lt;h4&gt;ECMO实施推荐指数&lt;/h4&gt;&#10;                    &lt;div class=&quot;risk-progress-container&quot;&gt;&#10;                        &lt;div class=&quot;risk-progress-bar&quot;&gt;&#10;                            &lt;div id=&quot;risk-progress-fill&quot; class=&quot;risk-progress-fill&quot;&gt;&lt;/div&gt;&#10;                            &lt;div class=&quot;risk-score-text&quot;&gt;&#10;                                &lt;span id=&quot;risk-score-value&quot;&gt;0&lt;/span&gt;/100&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div class=&quot;risk-level-indicators&quot;&gt;&#10;                            &lt;span class=&quot;risk-indicator red&quot;&gt;不推荐 (0-59)&lt;/span&gt;&#10;                            &lt;span class=&quot;risk-indicator yellow&quot;&gt;谨慎 (60-79)&lt;/span&gt;&#10;                            &lt;span class=&quot;risk-indicator green&quot;&gt;推荐 (80-100)&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div id=&quot;risk-level-badge&quot; class=&quot;risk-level-badge&quot;&gt;风险等级&lt;/div&gt;&#10;&#10;                    &lt;!-- 关键扣分点 --&gt;&#10;                    &lt;div class=&quot;key-risk-factors&quot;&gt;&#10;                        &lt;h5&gt;关键风险因素&lt;/h5&gt;&#10;                        &lt;ul id=&quot;key-risk-list&quot;&gt;&lt;/ul&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- 主要内容区域 - 优化布局 --&gt;&#10;        &lt;div class=&quot;result-main-content&quot;&gt;&#10;            &lt;!-- 4个核心输出 --&gt;&#10;            &lt;div class=&quot;core-outputs&quot;&gt;&#10;                &lt;h3&gt; 核心评估结果&lt;/h3&gt;&#10;&#10;                &lt;div class=&quot;output-card&quot;&gt;&#10;                    &lt;h4&gt; 诊断依据&lt;/h4&gt;&#10;                    &lt;p id=&quot;evidence-text&quot;&gt;&lt;/p&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div class=&quot;output-card&quot;&gt;&#10;                    &lt;h4&gt; 置信度评估&lt;/h4&gt;&#10;                    &lt;div class=&quot;confidence-display&quot;&gt;&#10;                        &lt;div class=&quot;confidence-bar&quot;&gt;&#10;                            &lt;div id=&quot;confidence-fill&quot; class=&quot;confidence-fill&quot;&gt;&lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;span id=&quot;confidence-value&quot;&gt;0%&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- 决策支持区域 --&gt;&#10;            &lt;div class=&quot;decision-support-area&quot;&gt;&#10;                &lt;h3&gt;⚖️ 决策辅助分析&lt;/h3&gt;&#10;&#10;                &lt;!-- 决策辅助卡 --&gt;&#10;                &lt;div class=&quot;decision-support&quot;&gt;&#10;                    &lt;div class=&quot;support-section&quot;&gt;&#10;                        &lt;h4&gt;✅ 支持使用依据&lt;/h4&gt;&#10;                        &lt;ul id=&quot;support-reasons-list&quot;&gt;&lt;/ul&gt;&#10;                    &lt;/div&gt;&#10;&#10;                    &lt;div class=&quot;oppose-section&quot;&gt;&#10;                        &lt;h4&gt;⚠️ 风险注意事项&lt;/h4&gt;&#10;                        &lt;ul id=&quot;oppose-reasons-list&quot;&gt;&lt;/ul&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- 详细信息区域 - 全宽显示 --&gt;&#10;        &lt;div class=&quot;detailed-info&quot;&gt;&#10;            &lt;!-- 详细建议 --&gt;&#10;            &lt;div class=&quot;recommendations&quot;&gt;&#10;                &lt;h4&gt; 临床建议措施&lt;/h4&gt;&#10;                &lt;ul id=&quot;recommendations-list&quot;&gt;&lt;/ul&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- 专家共识引用 --&gt;&#10;            &lt;div class=&quot;guidelines&quot;&gt;&#10;                &lt;h4&gt; 权威指南参考&lt;/h4&gt;&#10;                &lt;div id=&quot;guidelines-list&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- 详细评分 --&gt;&#10;            &lt;div class=&quot;detailed-scores&quot;&gt;&#10;                &lt;h4&gt; 详细评分分析&lt;/h4&gt;&#10;                &lt;div id=&quot;scores-breakdown&quot; class=&quot;scores-breakdown&quot;&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;script src=&quot;/static/ecmo-expert.js&quot;&gt;&lt;/script&gt;&#10;    &lt;script&gt;&#10;        // 全局函数&#10;        function showSection(section) {&#10;            window.ecmoSystem.showSection(section);&#10;        }&#10;&#10;        function resetForm() {&#10;            document.getElementById('ecmo-form').reset();&#10;            window.ecmoSystem.setDefaultValues();&#10;        }&#10;&#10;        function closeModal() {&#10;            window.ecmoSystem.closeModal();&#10;        }&#10;&#10;        function saveAssessment() {&#10;            window.ecmoSystem.saveCurrentAssessment();&#10;        }&#10;&#10;        function deleteAssessment(assessmentId) {&#10;            window.ecmoSystem.deleteAssessment(assessmentId);&#10;        }&#10;&#10;        function logout() {&#10;            localStorage.removeItem('username');&#10;            window.location.href = '/static/login.html';&#10;        }&#10;&#10;        // 初始化系统&#10;        window.addEventListener('DOMContentLoaded', () =&gt; {&#10;            window.ecmoSystem = new ECMOExpertSystem();&#10;        });&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/alibaba-deepseek-demo/src/main/resources/static/ecmo-expert.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/alibaba-deepseek-demo/src/main/resources/static/ecmo-expert.js" />
              <option name="originalContent" value="// ECMO专家系统&#10;class ECMOExpertSystem {&#10;    constructor() {&#10;        this.currentAssessment = null;&#10;        this.assessmentHistory = JSON.parse(localStorage.getItem('ecmoAssessments')) || [];&#10;        &#10;        this.init();&#10;    }&#10;&#10;    // 初始化&#10;    init() {&#10;        this.loadKnowledge();&#10;        this.loadAssessmentHistory();&#10;        this.setDefaultValues();&#10;    }&#10;&#10;    // 设置默认值&#10;    setDefaultValues() {&#10;        // 全局函数（用于HTML onclick事件）&#10;        // 设置一些合理的默认值&#10;        const defaults = {&#10;            heartRate: 100,&#10;            systolicBP: 90,&#10;            diastolicBP: 60,&#10;            temperature: 37.0,&#10;            respiratoryRate: 25,&#10;            oxygenSaturation: 85,&#10;            ph: 7.25,&#10;            pco2: 45,&#10;            po2: 60,&#10;            hco3: 18,&#10;            lactate: 4.5,&#10;            ejectionFraction: 25,&#10;            glasgowComaScale: 10&#10;        };&#10;&#10;        Object.keys(defaults).forEach(key =&gt; {&#10;            const element = document.getElementById(key);&#10;            if (element &amp;&amp; !element.value) {&#10;                element.value = defaults[key];&#10;            }&#10;        });&#10;    }&#10;&#10;    // 处理完整ECMO评估&#10;    async handleECMOAssessment() {&#10;        const formData = this.getFormData('ecmo-form');&#10;        &#10;        // 显示加载状态&#10;        this.showLoading('正在进行ECMO专业评估...');&#10;&#10;        try {&#10;            const response = await fetch('/api/ecmo/assess', {&#10;                method: 'POST',&#10;                headers: {&#10;                    'Content-Type': 'application/json',&#10;                },&#10;                body: JSON.stringify(formData)&#10;            });&#10;&#10;            const result = await response.json();&#10;            &#10;            if (result.success) {&#10;                this.currentAssessment = result;&#10;                this.displayAssessmentResult(result);&#10;                this.showModal();&#10;            } else {&#10;                this.showError('评估失败: ' + (result.message || '未知错误'));&#10;        } catch (error) {&#10;            console.error('评估请求失败:', error);&#10;            this.showError('网络连接失败，请检查网络连接后重试');&#10;        } finally {&#10;            this.hideLoading();&#10;        }&#10;    }&#10;&#10;    // 处理快速评估（修复快速诊断功能）&#10;    async handleQuickAssessment() {&#10;        const formData = this.getFormData('quick-form');&#10;        &#10;        // 填充必要字段的默认值&#10;        formData.patientId = formData.patientId || `QUICK_${Date.now()}`;&#10;        formData.heartRate = formData.heartRate || 100;&#10;        formData.systolicBP = formData.systolicBP || 90;&#10;        formData.diastolicBP = formData.diastolicBP || 60;&#10;        formData.respiratoryRate = formData.respiratoryRate || 25;&#10;        formData.ph = formData.ph || 7.25;&#10;        formData.paCO2 = formData.paCO2 || 45;&#10;        formData.paO2 = formData.paO2 || formData.po2;&#10;&#10;        // 显示加载状态&#10;        document.getElementById('quick-assess-btn').innerHTML = '&lt;i class=&quot;icon-loading&quot;&gt;&lt;/i&gt; 评估中...';&#10;        document.getElementById('quick-assess-btn').disabled = true;&#10;&#10;        try {&#10;            const response = await fetch('/api/ecmo/assess', {&#10;                method: 'POST',&#10;                headers: {&#10;                    'Content-Type': 'application/json',&#10;                },&#10;                body: JSON.stringify(formData)&#10;            });&#10;&#10;            const result = await response.json();&#10;            &#10;            if (result.success) {&#10;                this.displayQuickResult(result);&#10;            } else {&#10;                this.showError('快速评估失败: ' + (result.message || '未知错误'));&#10;            }&#10;        } catch (error) {&#10;            console.error('快速评估失败:', error);&#10;            this.showError('网络连接失败，请检查网络连接后重试');&#10;        } finally {&#10;            // 恢复按钮状态&#10;            document.getElementById('quick-assess-btn').innerHTML = '&lt;i class=&quot;icon-zap&quot;&gt;&lt;/i&gt; 快速评估';&#10;            document.getElementById('quick-assess-btn').disabled = false;&#10;        }&#10;    }&#10;&#10;    // 显示快速评估结果&#10;    displayQuickResult(result) {&#10;        const quickResultDiv = document.getElementById('quick-result');&#10;        const contentDiv = document.getElementById('quick-result-content');&#10;        &#10;        const riskScore = result.riskAssessment?.riskScore || 0;&#10;        const riskLevel = result.riskAssessment?.riskLevel || '未知';&#10;        const riskColor = result.riskAssessment?.riskColor || 'gray';&#10;        &#10;        contentDiv.innerHTML = `&#10;            &lt;div class=&quot;quick-result-summary&quot;&gt;&#10;                &lt;div class=&quot;quick-recommendation ${riskColor}&quot;&gt;&#10;                    &lt;h4&gt;${result.ecmoResult || '评估结果'}&lt;/h4&gt;&#10;                    &lt;p&gt;${result.diagnosis || '诊断信息不可用'}&lt;/p&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;quick-risk-score&quot;&gt;&#10;                    &lt;h5&gt;推荐指数&lt;/h5&gt;&#10;                    &lt;div class=&quot;risk-progress-bar&quot;&gt;&#10;                        &lt;div class=&quot;risk-progress-fill&quot; style=&quot;width: ${riskScore}%; background: ${this.getRiskColor(riskScore)}&quot;&gt;&lt;/div&gt;&#10;                        &lt;div class=&quot;risk-score-text&quot;&gt;${riskScore}/100&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;risk-level ${riskColor}&quot;&gt;${riskLevel}&lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;quick-confidence&quot;&gt;&#10;                    &lt;h5&gt;置信度: ${Math.round((result.confidence || 0) * 100)}%&lt;/h5&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;quick-actions&quot;&gt;&#10;                    &lt;button class=&quot;btn-primary&quot; onclick=&quot;window.ecmoSystem.showDetailedResult()&quot;&gt;&#10;                        查看详细报告&#10;                    &lt;/button&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        `;&#10;        &#10;        quickResultDiv.style.display = 'block';&#10;        this.currentAssessment = result;&#10;    }&#10;&#10;    // 显示详细结果&#10;    showDetailedResult() {&#10;        if (this.currentAssessment) {&#10;            this.displayAssessmentResult(this.currentAssessment);&#10;            this.showModal();&#10;        }&#10;    }&#10;&#10;    // 显示评估结果（修复undefined问题和添加可视化）&#10;    displayAssessmentResult(result) {&#10;        const template = document.getElementById('result-template').innerHTML;&#10;        const modalBody = document.getElementById('modal-body');&#10;        modalBody.innerHTML = template;&#10;&#10;        // 设置核心输出&#10;        document.getElementById('ecmo-recommendation').textContent = result.ecmoResult || '评估结果不可用';&#10;        document.getElementById('diagnosis-text').textContent = result.diagnosis || '诊断信息不可用';&#10;        document.getElementById('evidence-text').textContent = result.evidence || '诊断依据不可用';&#10;&#10;        // 设置风险评分可视化（解决undefined问题）&#10;        const riskScore = result.riskAssessment?.riskScore || 0;&#10;        const riskLevel = result.riskAssessment?.riskLevel || '未评估';&#10;        const riskColor = result.riskAssessment?.riskColor || 'gray';&#10;        &#10;        // 更新风险评分进度条&#10;        const riskProgressFill = document.getElementById('risk-progress-fill');&#10;        const riskScoreValue = document.getElementById('risk-score-value');&#10;        const riskLevelBadge = document.getElementById('risk-level-badge');&#10;        &#10;        if (riskProgressFill &amp;&amp; riskScoreValue &amp;&amp; riskLevelBadge) {&#10;            riskProgressFill.style.width = `${riskScore}%`;&#10;            riskProgressFill.style.background = this.getRiskGradientColor(riskScore);&#10;            riskScoreValue.textContent = Math.round(riskScore * 10) / 10;&#10;            riskLevelBadge.textContent = riskLevel;&#10;            riskLevelBadge.className = `risk-level-badge ${riskColor}`;&#10;        }&#10;&#10;        // 设置关键风险因素&#10;        const keyRiskList = document.getElementById('key-risk-list');&#10;        const keyFactors = result.riskAssessment?.keyRiskFactors || ['暂无关键风险因素'];&#10;        if (keyRiskList) {&#10;            keyRiskList.innerHTML = keyFactors.map(factor =&gt; `&lt;li&gt;${factor}&lt;/li&gt;`).join('');&#10;        }&#10;&#10;        // 设置置信度&#10;        const confidence = (result.confidence || 0) * 100;&#10;        const confidenceFill = document.getElementById('confidence-fill');&#10;        const confidenceValue = document.getElementById('confidence-value');&#10;        &#10;        if (confidenceFill &amp;&amp; confidenceValue) {&#10;            confidenceFill.style.width = `${confidence}%`;&#10;            confidenceFill.style.background = this.getConfidenceColor(confidence);&#10;            confidenceValue.textContent = `${Math.round(confidence)}%`;&#10;        }&#10;&#10;        // 设置支持理由和反对理由&#10;        this.populateList('support-reasons-list', result.decisionCard?.supportReasons || ['需要进一步临床评估']);&#10;        this.populateList('oppose-reasons-list', result.decisionCard?.opposeReasons || ['需要权衡获益风险比']);&#10;        this.populateList('recommendations-list', result.recommendations || ['请咨询ECMO专科医生']);&#10;&#10;        // 设置指南引用&#10;        this.populateGuidelines(result.decisionCard?.guidelineReferences || {});&#10;        &#10;        // 设置详细评分&#10;        this.populateDetailedScores(result.detailedScores || {});&#10;    }&#10;&#10;    // 获取风险渐变颜色&#10;    getRiskGradientColor(score) {&#10;        if (score &gt;= 80) {&#10;            return 'linear-gradient(90deg, #4CAF50, #8BC34A)'; // 绿色渐变&#10;        } else if (score &gt;= 60) {&#10;            return 'linear-gradient(90deg, #FF9800, #FFC107)'; // 黄色渐变&#10;        } else {&#10;            return 'linear-gradient(90deg, #F44336, #FF5722)'; // 红色渐变&#10;        }&#10;    }&#10;&#10;    // 获取风险颜色&#10;    getRiskColor(score) {&#10;        if (score &gt;= 80) return '#4CAF50';&#10;        else if (score &gt;= 60) return '#FF9800';&#10;        else return '#F44336';&#10;    }&#10;&#10;    // 获取置信度颜色&#10;    getConfidenceColor(confidence) {&#10;        if (confidence &gt;= 85) return '#4CAF50';&#10;        else if (confidence &gt;= 70) return '#2196F3';&#10;        else if (confidence &gt;= 50) return '#FF9800';&#10;        else return '#F44336';&#10;    }&#10;&#10;    // 填充列表&#10;    populateList(listId, items) {&#10;        const list = document.getElementById(listId);&#10;        if (list &amp;&amp; Array.isArray(items) &amp;&amp; items.length &gt; 0) {&#10;            list.innerHTML = items.map(item =&gt; `&lt;li&gt;${item}&lt;/li&gt;`).join('');&#10;        } else if (list) {&#10;            list.innerHTML = '&lt;li&gt;暂无相关信息&lt;/li&gt;';&#10;        }&#10;    }&#10;&#10;    // 填充指南引用&#10;    populateGuidelines(guidelines) {&#10;        const guidelinesList = document.getElementById('guidelines-list');&#10;        if (guidelinesList) {&#10;            if (Object.keys(guidelines).length &gt; 0) {&#10;                guidelinesList.innerHTML = Object.entries(guidelines)&#10;                    .map(([key, value]) =&gt; `&#10;                        &lt;div class=&quot;guideline-item&quot;&gt;&#10;                            &lt;strong&gt;${key}:&lt;/strong&gt; ${value}&#10;                        &lt;/div&gt;&#10;                    `).join('');&#10;            } else {&#10;                guidelinesList.innerHTML = '&lt;div class=&quot;guideline-item&quot;&gt;请参考相关ECMO临床指南&lt;/div&gt;';&#10;            }&#10;        }&#10;    }&#10;&#10;    // 填充详细评分&#10;    populateDetailedScores(scores) {&#10;        const scoresBreakdown = document.getElementById('scores-breakdown');&#10;        if (scoresBreakdown) {&#10;            if (Object.keys(scores).length &gt; 0) {&#10;                scoresBreakdown.innerHTML = Object.entries(scores)&#10;                    .map(([key, value]) =&gt; `&#10;                        &lt;div class=&quot;score-item&quot;&gt;&#10;                            &lt;span class=&quot;score-label&quot;&gt;${key}:&lt;/span&gt;&#10;                            &lt;span class=&quot;score-value&quot;&gt;${value}&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    `).join('');&#10;            } else {&#10;                scoresBreakdown.innerHTML = '&lt;div class=&quot;score-item&quot;&gt;详细评分信息不可用&lt;/div&gt;';&#10;            }&#10;        }&#10;    }&#10;&#10;    // 获取表单数据&#10;    getFormData(formId) {&#10;        const form = document.getElementById(formId);&#10;        const formData = new FormData(form);&#10;        const data = {};&#10;&#10;        for (let [key, value] of formData.entries()) {&#10;            // 数值字段转换&#10;            if (['age', 'weight', 'height', 'heartRate', 'systolicBP', 'diastolicBP', &#10;                 'temperature', 'respiratoryRate', 'oxygenSaturation', 'ph', 'pco2', &#10;                 'po2', 'hco3', 'lactate', 'ejectionFraction', 'glasgowComaScale'].includes(key)) {&#10;                data[key] = parseFloat(value) || null;&#10;            } else if (['onVentilator', 'onVasopressors'].includes(key)) {&#10;                data[key] = value === 'true';&#10;            } else {&#10;                data[key] = value || null;&#10;            }&#10;        }&#10;&#10;        // 映射字段名&#10;        if (data.pco2) data.paCO2 = data.pco2;&#10;        if (data.po2) data.paO2 = data.po2;&#10;        if (data.hco3) data.bicarbonate = data.hco3;&#10;&#10;        return data;&#10;    }&#10;&#10;    // 保存当前评估结果&#10;    saveCurrentAssessment() {&#10;        if (!this.currentAssessment) return;&#10;&#10;        const assessment = {&#10;            id: Date.now().toString(),&#10;            timestamp: new Date().toISOString(),&#10;            patientId: this.currentAssessment.patientId,&#10;            result: this.currentAssessment.ecmoResult,&#10;            riskScore: this.currentAssessment.riskAssessment?.riskScore || 0,&#10;            confidence: this.currentAssessment.confidence || 0,&#10;            diagnosis: this.currentAssessment.diagnosis,&#10;            data: this.currentAssessment&#10;        };&#10;&#10;        this.assessmentHistory.unshift(assessment);&#10;        &#10;        // 限制历史记录数量&#10;        if (this.assessmentHistory.length &gt; 50) {&#10;            this.assessmentHistory = this.assessmentHistory.slice(0, 50);&#10;        }&#10;        &#10;        localStorage.setItem('ecmoAssessments', JSON.stringify(this.assessmentHistory));&#10;        this.showSuccess('评估结果已保存');&#10;        this.closeModal();&#10;    }&#10;&#10;    // 删除评估记录（添加删除功能）&#10;    deleteAssessment(assessmentId) {&#10;        if (confirm('确定要删除这条评估记录吗？')) {&#10;            this.assessmentHistory = this.assessmentHistory.filter(assessment =&gt; assessment.id !== assessmentId);&#10;            localStorage.setItem('ecmoAssessments', JSON.stringify(this.assessmentHistory));&#10;            this.loadAssessmentHistory();&#10;            this.showSuccess('评估记录已删除');&#10;        }&#10;    }&#10;&#10;    // 加载评估历史&#10;    loadAssessmentHistory() {&#10;        const historyList = document.getElementById('history-list');&#10;        &#10;        if (this.assessmentHistory.length === 0) {&#10;            historyList.innerHTML = `&#10;                &lt;div class=&quot;empty-state&quot;&gt;&#10;                    &lt;i class=&quot;icon-history&quot;&gt;&lt;/i&gt;&#10;                    &lt;p&gt;暂无评估记录&lt;/p&gt;&#10;                &lt;/div&gt;&#10;            `;&#10;            return;&#10;        }&#10;&#10;        historyList.innerHTML = this.assessmentHistory.map(assessment =&gt; `&#10;            &lt;div class=&quot;history-item&quot;&gt;&#10;                &lt;div class=&quot;history-header&quot;&gt;&#10;                    &lt;h4&gt;患者ID: ${assessment.patientId}&lt;/h4&gt;&#10;                    &lt;div class=&quot;history-actions&quot;&gt;&#10;                        &lt;button class=&quot;btn-view&quot; onclick=&quot;window.ecmoSystem.viewAssessment('${assessment.id}')&quot;&gt;&#10;                            查看详情&#10;                        &lt;/button&gt;&#10;                        &lt;button class=&quot;btn-delete&quot; onclick=&quot;window.ecmoSystem.deleteAssessment('${assessment.id}')&quot;&gt;&#10;                            删除&#10;                        &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;history-content&quot;&gt;&#10;                    &lt;div class=&quot;history-result ${assessment.data.riskAssessment?.riskColor || 'gray'}&quot;&gt;&#10;                        &lt;strong&gt;评估结果:&lt;/strong&gt; ${assessment.result}&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;history-score&quot;&gt;&#10;                        &lt;strong&gt;推荐指数:&lt;/strong&gt; ${Math.round(assessment.riskScore)}/100&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;history-confidence&quot;&gt;&#10;                        &lt;strong&gt;置信度:&lt;/strong&gt; ${Math.round(assessment.confidence * 100)}%&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;history-time&quot;&gt;&#10;                        &lt;strong&gt;评估时间:&lt;/strong&gt; ${new Date(assessment.timestamp).toLocaleString('zh-CN')}&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        `).join('');&#10;    }&#10;&#10;    // 查看评估详情&#10;    viewAssessment(assessmentId) {&#10;        const assessment = this.assessmentHistory.find(a =&gt; a.id === assessmentId);&#10;        if (assessment) {&#10;            this.currentAssessment = assessment.data;&#10;            this.displayAssessmentResult(assessment.data);&#10;            this.showModal();&#10;        }&#10;    }&#10;&#10;    // 加载知识库&#10;    loadKnowledge() {&#10;        const indicationsList = document.getElementById('indications-list');&#10;        const contraindicationsList = document.getElementById('contraindications-list');&#10;&#10;        if (indicationsList) {&#10;            indicationsList.innerHTML = `&#10;                &lt;li&gt;严重急性呼吸衰竭: P/F比 &lt; 80，PEEP ≥ 10cmH2O，持续6小时以上&lt;/li&gt;&#10;                &lt;li&gt;心源性休克: 药物支持下仍有血流动力学不稳定&lt;/li&gt;&#10;                &lt;li&gt;急性心肌炎伴心源性休克&lt;/li&gt;&#10;                &lt;li&gt;可逆性心肺疾病的桥接治疗&lt;/li&gt;&#10;                &lt;li&gt;心脏骤停后的神经保护&lt;/li&gt;&#10;                &lt;li&gt;高危心脏手术的预防性支持&lt;/li&gt;&#10;            `;&#10;        }&#10;&#10;        if (contraindicationsList) {&#10;            contraindicationsList.innerHTML = `&#10;                &lt;li&gt;不可逆转的严重脑损伤&lt;/li&gt;&#10;                &lt;li&gt;晚期恶性肿瘤&lt;/li&gt;&#10;                &lt;li&gt;严重免疫缺陷&lt;/li&gt;&#10;                &lt;li&gt;不可控制的出血&lt;/li&gt;&#10;                &lt;li&gt;严重多器官功能衰竭超过7天&lt;/li&gt;&#10;                &lt;li&gt;年龄&gt;75岁（相对禁忌症）&lt;/li&gt;&#10;            `;&#10;        }&#10;    }&#10;&#10;    // 显示模态框&#10;    showModal() {&#10;        const modal = document.getElementById('result-modal');&#10;        if (modal) {&#10;            modal.style.display = 'block';&#10;            document.body.style.overflow = 'hidden';&#10;        }&#10;    }&#10;&#10;    // 关闭模态框&#10;    closeModal() {&#10;        const modal = document.getElementById('result-modal');&#10;        if (modal) {&#10;            modal.style.display = 'none';&#10;            document.body.style.overflow = 'auto';&#10;        }&#10;    }&#10;&#10;    // 显示加载状态&#10;    showLoading(message = '正在处理...') {&#10;        const assessBtn = document.getElementById('assess-btn');&#10;        if (assessBtn) {&#10;            assessBtn.innerHTML = `&lt;i class=&quot;icon-loading&quot;&gt;&lt;/i&gt; ${message}`;&#10;            assessBtn.disabled = true;&#10;        }&#10;    }&#10;&#10;    // 隐藏加载状态&#10;    hideLoading() {&#10;        const assessBtn = document.getElementById('assess-btn');&#10;        if (assessBtn) {&#10;            assessBtn.innerHTML = '&lt;i class=&quot;icon-stethoscope&quot;&gt;&lt;/i&gt; 开始评估';&#10;            assessBtn.disabled = false;&#10;        }&#10;    }&#10;&#10;    // 显示错误消息&#10;    showError(message) {&#10;        this.showToast(message, 'error');&#10;    }&#10;&#10;    // 显示成功消息&#10;    showSuccess(message) {&#10;        this.showToast(message, 'success');&#10;    }&#10;&#10;    // 显示提示消息&#10;    showToast(message, type = 'info') {&#10;        // 创建toast元素&#10;        const toast = document.createElement('div');&#10;        toast.className = `toast toast-${type}`;&#10;        toast.innerHTML = `&#10;            &lt;div class=&quot;toast-content&quot;&gt;&#10;                &lt;i class=&quot;icon-${type === 'error' ? 'alert' : type === 'success' ? 'check' : 'info'}&quot;&gt;&lt;/i&gt;&#10;                &lt;span&gt;${message}&lt;/span&gt;&#10;            &lt;/div&gt;&#10;        `;&#10;&#10;        // 添加样式&#10;        Object.assign(toast.style, {&#10;            position: 'fixed',&#10;            top: '20px',&#10;            right: '20px',&#10;            zIndex: '10000',&#10;            padding: '12px 20px',&#10;            borderRadius: '6px',&#10;            color: 'white',&#10;            fontSize: '14px',&#10;            fontWeight: '500',&#10;            boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',&#10;            transform: 'translateX(100%)',&#10;            transition: 'transform 0.3s ease',&#10;            backgroundColor: type === 'error' ? '#f44336' : &#10;                           type === 'success' ? '#4caf50' : '#2196f3'&#10;        });&#10;&#10;        document.body.appendChild(toast);&#10;&#10;        // 动画显示&#10;        setTimeout(() =&gt; {&#10;            toast.style.transform = 'translateX(0)';&#10;        }, 100);&#10;&#10;        // 自动隐藏&#10;        setTimeout(() =&gt; {&#10;            toast.style.transform = 'translateX(100%)';&#10;            setTimeout(() =&gt; {&#10;                if (toast.parentNode) {&#10;                    toast.parentNode.removeChild(toast);&#10;                }&#10;            }, 300);&#10;        }, 3000);&#10;    }&#10;&#10;    // 重置表单&#10;    resetForm() {&#10;        document.getElementById('ecmo-form').reset();&#10;        this.setDefaultValues();&#10;        this.showSuccess('表单已重置');&#10;    }&#10;&#10;    // 退出登录&#10;    logout() {&#10;        if (confirm('确定要退出登录吗？')) {&#10;            localStorage.removeItem('username');&#10;            localStorage.removeItem('ecmoAssessments');&#10;            window.location.href = '/static/login.html';&#10;        }&#10;    }&#10;}&#10;&#10;// 全局函数（用于HTML onclick事件）&#10;function showSection(section) {&#10;    if (window.ecmoSystem) {&#10;        window.ecmoSystem.showSection(section);&#10;    }&#10;}&#10;&#10;function closeModal() {&#10;    if (window.ecmoSystem) {&#10;        window.ecmoSystem.closeModal();&#10;    }&#10;}&#10;&#10;function saveAssessment() {&#10;    if (window.ecmoSystem) {&#10;        window.ecmoSystem.saveCurrentAssessment();&#10;    }&#10;}&#10;&#10;function resetForm() {&#10;    if (window.ecmoSystem) {&#10;        window.ecmoSystem.resetForm();&#10;    }&#10;}&#10;&#10;function logout() {&#10;    if (window.ecmoSystem) {&#10;        window.ecmoSystem.logout();&#10;    }&#10;}&#10;&#10;function deleteAssessment(assessmentId) {&#10;    if (window.ecmoSystem) {&#10;        window.ecmoSystem.deleteAssessment(assessmentId);&#10;    }&#10;}&#10;&#10;// 初始化系统&#10;const ecmoSystem = new ECMOExpertSystem();&#10;&#10;// 添加样式动画&#10;const style = document.createElement('style');&#10;style.textContent = `&#10;    @keyframes slideInRight {&#10;        from {&#10;            opacity: 0;&#10;            transform: translateX(100%);&#10;        }&#10;        to {&#10;            opacity: 1;&#10;            transform: translateX(0);&#10;        }&#10;    }&#10;    &#10;    @keyframes slideOutRight {&#10;        from {&#10;            opacity: 1;&#10;            transform: translateX(0);&#10;        }&#10;        to {&#10;            opacity: 0;&#10;            transform: translateX(100%);&#10;        }&#10;    }&#10;`;&#10;document.head.appendChild(style);&#10;" />
              <option name="updatedContent" value="// ECMO诊疗专家系统 JavaScript&#10;class ECMOExpertSystem {&#10;    constructor() {&#10;        this.currentUser = localStorage.getItem('username') || '医生用户';&#10;        this.currentAssessment = null;&#10;        this.assessmentHistory = JSON.parse(localStorage.getItem('ecmoAssessments') || '[]');&#10;&#10;        this.init();&#10;    }&#10;&#10;    init() {&#10;        this.updateUsername();&#10;        this.bindEvents();&#10;        this.loadKnowledge();&#10;        this.setDefaultValues();&#10;    }&#10;&#10;    updateUsername() {&#10;        const usernameEl = document.getElementById('username');&#10;        if (usernameEl) {&#10;            usernameEl.textContent = this.currentUser;&#10;        }&#10;    }&#10;&#10;    bindEvents() {&#10;        // 导航菜单事件&#10;        document.querySelectorAll('.nav-item').forEach(item =&gt; {&#10;            item.addEventListener('click', (e) =&gt; {&#10;                e.preventDefault();&#10;                const onclickAttr = e.target.closest('.nav-item').getAttribute('onclick');&#10;                if (onclickAttr) {&#10;                    const section = onclickAttr.match(/'(.+)'/)[1];&#10;                    this.showSection(section);&#10;                }&#10;            });&#10;        });&#10;&#10;        // 表单提交事件&#10;        const ecmoForm = document.getElementById('ecmo-form');&#10;        if (ecmoForm) {&#10;            ecmoForm.addEventListener('submit', (e) =&gt; {&#10;                e.preventDefault();&#10;                this.handleECMOAssessment();&#10;            });&#10;        }&#10;&#10;        const quickForm = document.getElementById('quick-form');&#10;        if (quickForm) {&#10;            quickForm.addEventListener('submit', (e) =&gt; {&#10;                e.preventDefault();&#10;                this.handleQuickAssessment();&#10;            });&#10;        }&#10;&#10;        // 模态框关闭事件&#10;        document.addEventListener('click', (e) =&gt; {&#10;            if (e.target.classList.contains('modal')) {&#10;                this.closeModal();&#10;            }&#10;        });&#10;&#10;        // ESC键关闭模态框&#10;        document.addEventListener('keydown', (e) =&gt; {&#10;            if (e.key === 'Escape') {&#10;                this.closeModal();&#10;            }&#10;        });&#10;    }&#10;&#10;    showSection(sectionName) {&#10;        // 隐藏所有区域&#10;        document.querySelectorAll('.section').forEach(section =&gt; {&#10;            section.classList.remove('active');&#10;        });&#10;&#10;        // 移除所有导航项的活动状态&#10;        document.querySelectorAll('.nav-item').forEach(item =&gt; {&#10;            item.classList.remove('active');&#10;        });&#10;&#10;        // 显示选中的区域&#10;        const targetSection = document.getElementById(`${sectionName}-section`);&#10;        if (targetSection) {&#10;            targetSection.classList.add('active');&#10;        }&#10;&#10;        // 激活对应的导航项&#10;        const targetNavItem = document.querySelector(`[onclick=&quot;showSection('${sectionName}')&quot;]`);&#10;        if (targetNavItem) {&#10;            targetNavItem.classList.add('active');&#10;        }&#10;&#10;        // 特殊处理&#10;        if (sectionName === 'history') {&#10;            this.loadAssessmentHistory();&#10;        } else if (sectionName === 'knowledge') {&#10;            this.loadKnowledge();&#10;        }&#10;    }&#10;&#10;    setDefaultValues() {&#10;        // 设置一些合理的默认值&#10;        const defaults = {&#10;            heartRate: 100,&#10;            systolicBP: 90,&#10;            diastolicBP: 60,&#10;            temperature: 37.0,&#10;            respiratoryRate: 25,&#10;            oxygenSaturation: 85,&#10;            ph: 7.25,&#10;            pco2: 45,&#10;            po2: 60,&#10;            hco3: 18,&#10;            lactate: 4.5,&#10;            ejectionFraction: 25,&#10;            glasgowComaScale: 10&#10;        };&#10;&#10;        Object.keys(defaults).forEach(key =&gt; {&#10;            const element = document.getElementById(key);&#10;            if (element &amp;&amp; !element.value) {&#10;                element.value = defaults[key];&#10;            }&#10;        });&#10;    }&#10;&#10;    // 处理完整ECMO评估&#10;    async handleECMOAssessment() {&#10;        const formData = this.getFormData('ecmo-form');&#10;        &#10;        // 显示加载状态&#10;        this.showLoading('正在进行ECMO专业评估...');&#10;&#10;        try {&#10;            const response = await fetch('/api/ecmo/assess', {&#10;                method: 'POST',&#10;                headers: {&#10;                    'Content-Type': 'application/json',&#10;                },&#10;                body: JSON.stringify(formData)&#10;            });&#10;&#10;            const result = await response.json();&#10;            &#10;            if (result.success) {&#10;                this.currentAssessment = result;&#10;                this.displayAssessmentResult(result);&#10;                this.showModal();&#10;            } else {&#10;                this.showError('评估失败: ' + (result.message || '未知错误'));&#10;            }&#10;        } catch (error) {&#10;            console.error('评估请求失败:', error);&#10;            this.showError('网络连接失败，请检查网络连接后重试');&#10;        } finally {&#10;            this.hideLoading();&#10;        }&#10;    }&#10;&#10;    // 处理快速评估（修复快速诊断功能）&#10;    async handleQuickAssessment() {&#10;        const formData = this.getFormData('quick-form');&#10;        &#10;        // 填充必要字段的默认值&#10;        formData.patientId = formData.patientId || `QUICK_${Date.now()}`;&#10;        formData.heartRate = formData.heartRate || 100;&#10;        formData.systolicBP = formData.systolicBP || 90;&#10;        formData.diastolicBP = formData.diastolicBP || 60;&#10;        formData.respiratoryRate = formData.respiratoryRate || 25;&#10;        formData.ph = formData.ph || 7.25;&#10;        formData.paCO2 = formData.paCO2 || 45;&#10;        formData.paO2 = formData.paO2 || formData.po2;&#10;&#10;        // 显示加载状态&#10;        const quickBtn = document.getElementById('quick-assess-btn');&#10;        if (quickBtn) {&#10;            quickBtn.innerHTML = '&lt;i class=&quot;icon-loading&quot;&gt;&lt;/i&gt; 评估中...';&#10;            quickBtn.disabled = true;&#10;        }&#10;&#10;        try {&#10;            const response = await fetch('/api/ecmo/assess', {&#10;                method: 'POST',&#10;                headers: {&#10;                    'Content-Type': 'application/json',&#10;                },&#10;                body: JSON.stringify(formData)&#10;            });&#10;&#10;            const result = await response.json();&#10;            &#10;            if (result.success) {&#10;                this.displayQuickResult(result);&#10;            } else {&#10;                this.showError('快速评估失败: ' + (result.message || '未知错误'));&#10;            }&#10;        } catch (error) {&#10;            console.error('快速评估失败:', error);&#10;            this.showError('网络连接失败，请检查网络连接后重试');&#10;        } finally {&#10;            // 恢复按钮状态&#10;            if (quickBtn) {&#10;                quickBtn.innerHTML = '&lt;i class=&quot;icon-zap&quot;&gt;&lt;/i&gt; 快速评估';&#10;                quickBtn.disabled = false;&#10;            }&#10;        }&#10;    }&#10;&#10;    // 显示快速评估结果&#10;    displayQuickResult(result) {&#10;        const quickResultDiv = document.getElementById('quick-result');&#10;        const contentDiv = document.getElementById('quick-result-content');&#10;        &#10;        if (!quickResultDiv || !contentDiv) return;&#10;        &#10;        const riskScore = result.riskAssessment?.riskScore || 0;&#10;        const riskLevel = result.riskAssessment?.riskLevel || '未知';&#10;        const riskColor = result.riskAssessment?.riskColor || 'gray';&#10;        &#10;        contentDiv.innerHTML = `&#10;            &lt;div class=&quot;quick-result-summary&quot;&gt;&#10;                &lt;div class=&quot;quick-recommendation ${riskColor}&quot;&gt;&#10;                    &lt;h4&gt;${result.ecmoResult || '评估结果'}&lt;/h4&gt;&#10;                    &lt;p&gt;${result.diagnosis || '诊断信息不可用'}&lt;/p&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;quick-risk-score&quot;&gt;&#10;                    &lt;h5&gt;推荐指数&lt;/h5&gt;&#10;                    &lt;div class=&quot;risk-progress-bar&quot;&gt;&#10;                        &lt;div class=&quot;risk-progress-fill&quot; style=&quot;width: ${riskScore}%; background: ${this.getRiskColor(riskScore)}&quot;&gt;&lt;/div&gt;&#10;                        &lt;div class=&quot;risk-score-text&quot;&gt;${Math.round(riskScore)}/100&lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;risk-level ${riskColor}&quot;&gt;${riskLevel}&lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;quick-confidence&quot;&gt;&#10;                    &lt;h5&gt;置信度: ${Math.round((result.confidence || 0) * 100)}%&lt;/h5&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;quick-actions&quot;&gt;&#10;                    &lt;button class=&quot;btn-primary&quot; onclick=&quot;window.ecmoSystem.showDetailedResult()&quot;&gt;&#10;                        查看详细报告&#10;                    &lt;/button&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        `;&#10;        &#10;        quickResultDiv.style.display = 'block';&#10;        this.currentAssessment = result;&#10;    }&#10;&#10;    // 显示详细结果&#10;    showDetailedResult() {&#10;        if (this.currentAssessment) {&#10;            this.displayAssessmentResult(this.currentAssessment);&#10;            this.showModal();&#10;        }&#10;    }&#10;&#10;    // 显示评估结果（修复undefined问题和添加可视化）&#10;    displayAssessmentResult(result) {&#10;        const template = document.getElementById('result-template');&#10;        const modalBody = document.getElementById('modal-body');&#10;        &#10;        if (!template || !modalBody) return;&#10;        &#10;        modalBody.innerHTML = template.innerHTML;&#10;&#10;        // 设置核心输出（确保不会显示undefined）&#10;        const ecmoRecommendation = document.getElementById('ecmo-recommendation');&#10;        const diagnosisText = document.getElementById('diagnosis-text');&#10;        const evidenceText = document.getElementById('evidence-text');&#10;        &#10;        if (ecmoRecommendation) ecmoRecommendation.textContent = result.ecmoResult || '评估结果不可用';&#10;        if (diagnosisText) diagnosisText.textContent = result.diagnosis || '诊断信息不可用';&#10;        if (evidenceText) evidenceText.textContent = result.evidence || '诊断依据不可用';&#10;&#10;        // 设置风险评分可视化（解决undefined问题）&#10;        const riskScore = result.riskAssessment?.riskScore || 0;&#10;        const riskLevel = result.riskAssessment?.riskLevel || '未评估';&#10;        const riskColor = result.riskAssessment?.riskColor || 'gray';&#10;        &#10;        // 更新风险评分进度条&#10;        const riskProgressFill = document.getElementById('risk-progress-fill');&#10;        const riskScoreValue = document.getElementById('risk-score-value');&#10;        const riskLevelBadge = document.getElementById('risk-level-badge');&#10;        &#10;        if (riskProgressFill &amp;&amp; riskScoreValue &amp;&amp; riskLevelBadge) {&#10;            riskProgressFill.style.width = `${riskScore}%`;&#10;            riskProgressFill.style.background = this.getRiskGradientColor(riskScore);&#10;            riskScoreValue.textContent = Math.round(riskScore * 10) / 10;&#10;            riskLevelBadge.textContent = riskLevel;&#10;            riskLevelBadge.className = `risk-level-badge ${riskColor}`;&#10;        }&#10;&#10;        // 设置关键风险因素&#10;        const keyRiskList = document.getElementById('key-risk-list');&#10;        const keyFactors = result.riskAssessment?.keyRiskFactors || ['暂无关键风险因素'];&#10;        if (keyRiskList) {&#10;            keyRiskList.innerHTML = keyFactors.map(factor =&gt; `&lt;li&gt;${factor}&lt;/li&gt;`).join('');&#10;        }&#10;&#10;        // 设置置信度&#10;        const confidence = (result.confidence || 0) * 100;&#10;        const confidenceFill = document.getElementById('confidence-fill');&#10;        const confidenceValue = document.getElementById('confidence-value');&#10;        &#10;        if (confidenceFill &amp;&amp; confidenceValue) {&#10;            confidenceFill.style.width = `${confidence}%`;&#10;            confidenceFill.style.background = this.getConfidenceColor(confidence);&#10;            confidenceValue.textContent = `${Math.round(confidence)}%`;&#10;        }&#10;&#10;        // 设置支持理由和反对理由&#10;        this.populateList('support-reasons-list', result.decisionCard?.supportReasons || ['需要进一步临床评估']);&#10;        this.populateList('oppose-reasons-list', result.decisionCard?.opposeReasons || ['需要权衡获益风险比']);&#10;        this.populateList('recommendations-list', result.recommendations || ['请咨询ECMO专科医生']);&#10;&#10;        // 设置指南引用&#10;        this.populateGuidelines(result.decisionCard?.guidelineReferences || {});&#10;        &#10;        // 设置详细评分&#10;        this.populateDetailedScores(result.detailedScores || {});&#10;    }&#10;&#10;    // 获取风险渐变颜色（绿到红可视化）&#10;    getRiskGradientColor(score) {&#10;        if (score &gt;= 80) {&#10;            return 'linear-gradient(90deg, #4CAF50, #8BC34A)'; // 绿色渐变&#10;        } else if (score &gt;= 60) {&#10;            return 'linear-gradient(90deg, #FF9800, #FFC107)'; // 黄色渐变&#10;        } else {&#10;            return 'linear-gradient(90deg, #F44336, #FF5722)'; // 红色渐变&#10;        }&#10;    }&#10;&#10;    // 获取风险颜色&#10;    getRiskColor(score) {&#10;        if (score &gt;= 80) return '#4CAF50';&#10;        else if (score &gt;= 60) return '#FF9800';&#10;        else return '#F44336';&#10;    }&#10;&#10;    // 获取置信度颜色&#10;    getConfidenceColor(confidence) {&#10;        if (confidence &gt;= 85) return '#4CAF50';&#10;        else if (confidence &gt;= 70) return '#2196F3';&#10;        else if (confidence &gt;= 50) return '#FF9800';&#10;        else return '#F44336';&#10;    }&#10;&#10;    // 填充列表（防止null/undefined）&#10;    populateList(listId, items) {&#10;        const list = document.getElementById(listId);&#10;        if (list &amp;&amp; Array.isArray(items) &amp;&amp; items.length &gt; 0) {&#10;            list.innerHTML = items.map(item =&gt; `&lt;li&gt;${item || '信息不可用'}&lt;/li&gt;`).join('');&#10;        } else if (list) {&#10;            list.innerHTML = '&lt;li&gt;暂无相关信息&lt;/li&gt;';&#10;        }&#10;    }&#10;&#10;    // 填充指南引用&#10;    populateGuidelines(guidelines) {&#10;        const guidelinesList = document.getElementById('guidelines-list');&#10;        if (guidelinesList) {&#10;            if (guidelines &amp;&amp; Object.keys(guidelines).length &gt; 0) {&#10;                guidelinesList.innerHTML = Object.entries(guidelines)&#10;                    .map(([key, value]) =&gt; `&#10;                        &lt;div class=&quot;guideline-item&quot;&gt;&#10;                            &lt;strong&gt;${key}:&lt;/strong&gt; ${value || '信息不可用'}&#10;                        &lt;/div&gt;&#10;                    `).join('');&#10;            } else {&#10;                guidelinesList.innerHTML = '&lt;div class=&quot;guideline-item&quot;&gt;请参考相关ECMO临床指南&lt;/div&gt;';&#10;            }&#10;        }&#10;    }&#10;&#10;    // 填充详细评分&#10;    populateDetailedScores(scores) {&#10;        const scoresBreakdown = document.getElementById('scores-breakdown');&#10;        if (scoresBreakdown) {&#10;            if (scores &amp;&amp; Object.keys(scores).length &gt; 0) {&#10;                scoresBreakdown.innerHTML = Object.entries(scores)&#10;                    .map(([key, value]) =&gt; `&#10;                        &lt;div class=&quot;score-item&quot;&gt;&#10;                            &lt;span class=&quot;score-label&quot;&gt;${key}:&lt;/span&gt;&#10;                            &lt;span class=&quot;score-value&quot;&gt;${value || '不可用'}&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                    `).join('');&#10;            } else {&#10;                scoresBreakdown.innerHTML = '&lt;div class=&quot;score-item&quot;&gt;详细评分信息不可用&lt;/div&gt;';&#10;            }&#10;        }&#10;    }&#10;&#10;    // 获取表单数据&#10;    getFormData(formId) {&#10;        const form = document.getElementById(formId);&#10;        if (!form) return {};&#10;        &#10;        const formData = new FormData(form);&#10;        const data = {};&#10;&#10;        for (let [key, value] of formData.entries()) {&#10;            // 数值字段转换&#10;            if (['age', 'weight', 'height', 'heartRate', 'systolicBP', 'diastolicBP', &#10;                 'temperature', 'respiratoryRate', 'oxygenSaturation', 'ph', 'pco2', &#10;                 'po2', 'hco3', 'lactate', 'ejectionFraction', 'glasgowComaScale'].includes(key)) {&#10;                data[key] = parseFloat(value) || null;&#10;            } else if (['onVentilator', 'onVasopressors'].includes(key)) {&#10;                data[key] = value === 'true';&#10;            } else {&#10;                data[key] = value || null;&#10;            }&#10;        }&#10;&#10;        // 映射字段名&#10;        if (data.pco2) data.paCO2 = data.pco2;&#10;        if (data.po2) data.paO2 = data.po2;&#10;        if (data.hco3) data.bicarbonate = data.hco3;&#10;&#10;        return data;&#10;    }&#10;&#10;    // 保存当前评估结果&#10;    saveCurrentAssessment() {&#10;        if (!this.currentAssessment) return;&#10;&#10;        const assessment = {&#10;            id: Date.now().toString(),&#10;            timestamp: new Date().toISOString(),&#10;            patientId: this.currentAssessment.patientId,&#10;            result: this.currentAssessment.ecmoResult,&#10;            riskScore: this.currentAssessment.riskAssessment?.riskScore || 0,&#10;            confidence: this.currentAssessment.confidence || 0,&#10;            diagnosis: this.currentAssessment.diagnosis,&#10;            data: this.currentAssessment&#10;        };&#10;&#10;        this.assessmentHistory.unshift(assessment);&#10;        &#10;        // 限制历史记录数量&#10;        if (this.assessmentHistory.length &gt; 50) {&#10;            this.assessmentHistory = this.assessmentHistory.slice(0, 50);&#10;        }&#10;        &#10;        localStorage.setItem('ecmoAssessments', JSON.stringify(this.assessmentHistory));&#10;        this.showSuccess('评估结果已保存');&#10;        this.closeModal();&#10;    }&#10;&#10;    // 删除评估记录（添加删除功能）&#10;    deleteAssessment(assessmentId) {&#10;        if (confirm('确定要删除这条评估记录吗？')) {&#10;            this.assessmentHistory = this.assessmentHistory.filter(assessment =&gt; assessment.id !== assessmentId);&#10;            localStorage.setItem('ecmoAssessments', JSON.stringify(this.assessmentHistory));&#10;            this.loadAssessmentHistory();&#10;            this.showSuccess('评估记录已删除');&#10;        }&#10;    }&#10;&#10;    // 加载评估历史&#10;    loadAssessmentHistory() {&#10;        const historyList = document.getElementById('history-list');&#10;        &#10;        if (this.assessmentHistory.length === 0) {&#10;            historyList.innerHTML = `&#10;                &lt;div class=&quot;empty-state&quot;&gt;&#10;                    &lt;i class=&quot;icon-history&quot;&gt;&lt;/i&gt;&#10;                    &lt;p&gt;暂无评估记录&lt;/p&gt;&#10;                &lt;/div&gt;&#10;            `;&#10;            return;&#10;        }&#10;&#10;        historyList.innerHTML = this.assessmentHistory.map(assessment =&gt; `&#10;            &lt;div class=&quot;history-item&quot;&gt;&#10;                &lt;div class=&quot;history-header&quot;&gt;&#10;                    &lt;h4&gt;患者ID: ${assessment.patientId}&lt;/h4&gt;&#10;                    &lt;div class=&quot;history-actions&quot;&gt;&#10;                        &lt;button class=&quot;btn-view&quot; onclick=&quot;window.ecmoSystem.viewAssessment('${assessment.id}')&quot;&gt;&#10;                            查看详情&#10;                        &lt;/button&gt;&#10;                        &lt;button class=&quot;btn-delete&quot; onclick=&quot;window.ecmoSystem.deleteAssessment('${assessment.id}')&quot;&gt;&#10;                            删除&#10;                        &lt;/button&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;history-content&quot;&gt;&#10;                    &lt;div class=&quot;history-result ${assessment.data.riskAssessment?.riskColor || 'gray'}&quot;&gt;&#10;                        &lt;strong&gt;评估结果:&lt;/strong&gt; ${assessment.result}&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;history-score&quot;&gt;&#10;                        &lt;strong&gt;推荐指数:&lt;/strong&gt; ${Math.round(assessment.riskScore)}/100&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;history-confidence&quot;&gt;&#10;                        &lt;strong&gt;置信度:&lt;/strong&gt; ${Math.round(assessment.confidence * 100)}%&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;history-time&quot;&gt;&#10;                        &lt;strong&gt;评估时间:&lt;/strong&gt; ${new Date(assessment.timestamp).toLocaleString('zh-CN')}&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        `).join('');&#10;    }&#10;&#10;    // 查看评估详情&#10;    viewAssessment(assessmentId) {&#10;        const assessment = this.assessmentHistory.find(a =&gt; a.id === assessmentId);&#10;        if (assessment) {&#10;            this.currentAssessment = assessment.data;&#10;            this.displayAssessmentResult(assessment.data);&#10;            this.showModal();&#10;        }&#10;    }&#10;&#10;    // 加载知识库&#10;    loadKnowledge() {&#10;        const indicationsList = document.getElementById('indications-list');&#10;        const contraindicationsList = document.getElementById('contraindications-list');&#10;&#10;        if (indicationsList) {&#10;            indicationsList.innerHTML = `&#10;                &lt;li&gt;严重急性呼吸衰竭: P/F比 &lt; 80，PEEP ≥ 10cmH2O，持续6小时以上&lt;/li&gt;&#10;                &lt;li&gt;心源性休克: 药物支持下仍有血流动力学不稳定&lt;/li&gt;&#10;                &lt;li&gt;急性心肌炎伴心源性休克&lt;/li&gt;&#10;                &lt;li&gt;可逆性心肺疾病的桥接治疗&lt;/li&gt;&#10;                &lt;li&gt;心脏骤停后的神经保护&lt;/li&gt;&#10;                &lt;li&gt;高危心脏手术的预防性支持&lt;/li&gt;&#10;            `;&#10;        }&#10;&#10;        if (contraindicationsList) {&#10;            contraindicationsList.innerHTML = `&#10;                &lt;li&gt;不可逆转的严重脑损伤&lt;/li&gt;&#10;                &lt;li&gt;晚期恶性肿瘤&lt;/li&gt;&#10;                &lt;li&gt;严重免疫缺陷&lt;/li&gt;&#10;                &lt;li&gt;不可控制的出血&lt;/li&gt;&#10;                &lt;li&gt;严重多器官功能衰竭超过7天&lt;/li&gt;&#10;                &lt;li&gt;年龄&gt;75岁（相对禁忌症）&lt;/li&gt;&#10;            `;&#10;        }&#10;    }&#10;&#10;    // 显示模态框&#10;    showModal() {&#10;        const modal = document.getElementById('result-modal');&#10;        if (modal) {&#10;            modal.style.display = 'block';&#10;            document.body.style.overflow = 'hidden';&#10;        }&#10;    }&#10;&#10;    // 关闭模态框&#10;    closeModal() {&#10;        const modal = document.getElementById('result-modal');&#10;        if (modal) {&#10;            modal.style.display = 'none';&#10;            document.body.style.overflow = 'auto';&#10;        }&#10;    }&#10;&#10;    // 显示加载状态&#10;    showLoading(message = '正在处理...') {&#10;        const assessBtn = document.getElementById('assess-btn');&#10;        if (assessBtn) {&#10;            assessBtn.innerHTML = `&lt;i class=&quot;icon-loading&quot;&gt;&lt;/i&gt; ${message}`;&#10;            assessBtn.disabled = true;&#10;        }&#10;    }&#10;&#10;    // 隐藏加载状态&#10;    hideLoading() {&#10;        const assessBtn = document.getElementById('assess-btn');&#10;        if (assessBtn) {&#10;            assessBtn.innerHTML = '&lt;i class=&quot;icon-stethoscope&quot;&gt;&lt;/i&gt; 开始评估';&#10;            assessBtn.disabled = false;&#10;        }&#10;    }&#10;&#10;    // 显示错误消息&#10;    showError(message) {&#10;        this.showToast(message, 'error');&#10;    }&#10;&#10;    // 显示成功消息&#10;    showSuccess(message) {&#10;        this.showToast(message, 'success');&#10;    }&#10;&#10;    // 显示提示消息&#10;    showToast(message, type = 'info') {&#10;        // 创建toast元素&#10;        const toast = document.createElement('div');&#10;        toast.className = `toast toast-${type}`;&#10;        toast.innerHTML = `&#10;            &lt;div class=&quot;toast-content&quot;&gt;&#10;                &lt;i class=&quot;icon-${type === 'error' ? 'alert' : type === 'success' ? 'check' : 'info'}&quot;&gt;&lt;/i&gt;&#10;                &lt;span&gt;${message}&lt;/span&gt;&#10;            &lt;/div&gt;&#10;        `;&#10;&#10;        // 添加样式&#10;        Object.assign(toast.style, {&#10;            position: 'fixed',&#10;            top: '20px',&#10;            right: '20px',&#10;            zIndex: '10000',&#10;            padding: '12px 20px',&#10;            borderRadius: '6px',&#10;            color: 'white',&#10;            fontSize: '14px',&#10;            fontWeight: '500',&#10;            boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',&#10;            transform: 'translateX(100%)',&#10;            transition: 'transform 0.3s ease',&#10;            backgroundColor: type === 'error' ? '#f44336' : &#10;                           type === 'success' ? '#4caf50' : '#2196f3'&#10;        });&#10;&#10;        document.body.appendChild(toast);&#10;&#10;        // 动画显示&#10;        setTimeout(() =&gt; {&#10;            toast.style.transform = 'translateX(0)';&#10;        }, 100);&#10;&#10;        // 自动隐藏&#10;        setTimeout(() =&gt; {&#10;            toast.style.transform = 'translateX(100%)';&#10;            setTimeout(() =&gt; {&#10;                if (toast.parentNode) {&#10;                    toast.parentNode.removeChild(toast);&#10;                }&#10;            }, 300);&#10;        }, 3000);&#10;    }&#10;&#10;    // 重置表单&#10;    resetForm() {&#10;        document.getElementById('ecmo-form').reset();&#10;        this.setDefaultValues();&#10;        this.showSuccess('表单已重置');&#10;    }&#10;&#10;    // 退出登录&#10;    logout() {&#10;        if (confirm('确定要退出登录吗？')) {&#10;            localStorage.removeItem('username');&#10;            localStorage.removeItem('ecmoAssessments');&#10;            window.location.href = '/static/login.html';&#10;        }&#10;    }&#10;}&#10;&#10;// 全局函数（用于HTML onclick事件）&#10;function showSection(section) {&#10;    if (window.ecmoSystem) {&#10;        window.ecmoSystem.showSection(section);&#10;    }&#10;}&#10;&#10;function closeModal() {&#10;    if (window.ecmoSystem) {&#10;        window.ecmoSystem.closeModal();&#10;    }&#10;}&#10;&#10;function saveAssessment() {&#10;    if (window.ecmoSystem) {&#10;        window.ecmoSystem.saveCurrentAssessment();&#10;    }&#10;}&#10;&#10;function resetForm() {&#10;    if (window.ecmoSystem) {&#10;        window.ecmoSystem.resetForm();&#10;    }&#10;}&#10;&#10;function logout() {&#10;    if (window.ecmoSystem) {&#10;        window.ecmoSystem.logout();&#10;    }&#10;}&#10;&#10;function deleteAssessment(assessmentId) {&#10;    if (window.ecmoSystem) {&#10;        window.ecmoSystem.deleteAssessment(assessmentId);&#10;    }&#10;}&#10;&#10;// 初始化系统&#10;const ecmoSystem = new ECMOExpertSystem();&#10;&#10;// 添加样式动画&#10;const style = document.createElement('style');&#10;style.textContent = `&#10;    @keyframes slideInRight {&#10;        from {&#10;            opacity: 0;&#10;            transform: translateX(100%);&#10;        }&#10;        to {&#10;            opacity: 1;&#10;            transform: translateX(0);&#10;        }&#10;    }&#10;    &#10;    @keyframes slideOutRight {&#10;        from {&#10;            opacity: 1;&#10;            transform: translateX(0);&#10;        }&#10;        to {&#10;            opacity: 0;&#10;            transform: translateX(100%);&#10;        }&#10;    }&#10;`;&#10;document.head.appendChild(style);" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>